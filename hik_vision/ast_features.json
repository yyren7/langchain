[
    {
        "file_path": "Python\\BasicDemo\\BasicDemo.py",
        "functions": [
            {
                "function_name": "TxtWrapBy",
                "used_functions": [
                    "all.find",
                    "len",
                    "all.find"
                ],
                "imports": []
            },
            {
                "function_name": "ToHexStr",
                "used_functions": [
                    "chaDic.get",
                    "chaDic.get",
                    "str",
                    "str"
                ],
                "imports": []
            },
            {
                "function_name": "xFunc",
                "used_functions": [
                    "TxtWrapBy"
                ],
                "imports": []
            },
            {
                "function_name": "decoding_char",
                "used_functions": [
                    "ctypes.cast",
                    "str"
                ],
                "imports": [
                    {
                        "import_name": "ctypes",
                        "as_name": "ctypes",
                        "source": "未知模块"
                    }
                ]
            },
            {
                "function_name": "enum_devices",
                "used_functions": [
                    "MV_CC_DEVICE_INFO_LIST",
                    "MvCamera.MV_CC_EnumDevices",
                    "print",
                    "range",
                    "QMessageBox.warning",
                    "QMessageBox.warning",
                    "ToHexStr",
                    "cast",
                    "print",
                    "decoding_char",
                    "decoding_char",
                    "print",
                    "print",
                    "print",
                    "devList.append",
                    "POINTER",
                    "print",
                    "decoding_char",
                    "decoding_char",
                    "print",
                    "print",
                    "print",
                    "devList.append",
                    "print",
                    "decoding_char",
                    "decoding_char",
                    "print",
                    "print",
                    "print",
                    "devList.append",
                    "str",
                    "chr",
                    "print",
                    "decoding_char",
                    "decoding_char",
                    "print",
                    "print",
                    "print",
                    "devList.append",
                    "str",
                    "chr",
                    "print",
                    "decoding_char",
                    "decoding_char",
                    "print",
                    "print",
                    "print",
                    "devList.append",
                    "str",
                    "str",
                    "chr",
                    "str",
                    "chr",
                    "str",
                    "str",
                    "str",
                    "str",
                    "str",
                    "str",
                    "str",
                    "str"
                ],
                "imports": []
            },
            {
                "function_name": "open_device",
                "used_functions": [
                    "CameraOperation",
                    "obj_cam_operation.Open_device",
                    "QMessageBox.warning",
                    "QMessageBox.warning",
                    "QMessageBox.warning",
                    "set_continue_mode",
                    "get_param",
                    "enable_controls",
                    "ToHexStr"
                ],
                "imports": []
            },
            {
                "function_name": "start_grabbing",
                "used_functions": [
                    "obj_cam_operation.Start_grabbing",
                    "QMessageBox.warning",
                    "enable_controls",
                    "ToHexStr"
                ],
                "imports": []
            },
            {
                "function_name": "stop_grabbing",
                "used_functions": [
                    "obj_cam_operation.Stop_grabbing",
                    "QMessageBox.warning",
                    "enable_controls",
                    "ToHexStr"
                ],
                "imports": []
            },
            {
                "function_name": "close_device",
                "used_functions": [
                    "enable_controls",
                    "obj_cam_operation.Close_device"
                ],
                "imports": []
            },
            {
                "function_name": "set_continue_mode",
                "used_functions": [
                    "obj_cam_operation.Set_trigger_mode",
                    "QMessageBox.warning",
                    "str",
                    "ToHexStr"
                ],
                "imports": []
            },
            {
                "function_name": "set_software_trigger_mode",
                "used_functions": [
                    "obj_cam_operation.Set_trigger_mode",
                    "QMessageBox.warning",
                    "ToHexStr"
                ],
                "imports": []
            },
            {
                "function_name": "trigger_once",
                "used_functions": [
                    "obj_cam_operation.Trigger_once",
                    "QMessageBox.warning",
                    "ToHexStr"
                ],
                "imports": []
            },
            {
                "function_name": "save_bmp",
                "used_functions": [
                    "obj_cam_operation.Save_Bmp",
                    "QMessageBox.warning",
                    "print",
                    "ToHexStr"
                ],
                "imports": []
            },
            {
                "function_name": "is_float",
                "used_functions": [
                    "float"
                ],
                "imports": []
            },
            {
                "function_name": "get_param",
                "used_functions": [
                    "obj_cam_operation.Get_parameter",
                    "QMessageBox.warning",
                    "ToHexStr"
                ],
                "imports": []
            },
            {
                "function_name": "set_param",
                "used_functions": [
                    "obj_cam_operation.Set_parameter",
                    "QMessageBox.warning",
                    "QMessageBox.warning",
                    "is_float",
                    "is_float",
                    "is_float",
                    "ToHexStr",
                    "ToHexStr"
                ],
                "imports": []
            },
            {
                "function_name": "enable_controls",
                "used_functions": [],
                "imports": []
            }
        ]
    },
    {
        "file_path": "Python\\BasicDemo\\CamOperation_class.py",
        "functions": [
            {
                "function_name": "Async_raise",
                "used_functions": [
                    "ctypes.c_long",
                    "inspect.isclass",
                    "type",
                    "ctypes.py_object",
                    "ValueError",
                    "SystemError"
                ],
                "imports": [
                    {
                        "import_name": "inspect",
                        "as_name": "inspect",
                        "source": "未知模块"
                    },
                    {
                        "import_name": "ctypes",
                        "as_name": "ctypes",
                        "source": "未知模块"
                    },
                    {
                        "import_name": "ctypes",
                        "as_name": "ctypes",
                        "source": "未知模块"
                    }
                ]
            },
            {
                "function_name": "Stop_thread",
                "used_functions": [
                    "Async_raise"
                ],
                "imports": []
            },
            {
                "function_name": "To_hex_str",
                "used_functions": [
                    "chaDic.get",
                    "chaDic.get",
                    "str",
                    "str"
                ],
                "imports": []
            },
            {
                "function_name": "Is_mono_data",
                "used_functions": [],
                "imports": []
            },
            {
                "function_name": "Is_color_data",
                "used_functions": [],
                "imports": []
            },
            {
                "function_name": "__init__",
                "used_functions": [
                    "threading.Lock"
                ],
                "imports": [
                    {
                        "import_name": "threading",
                        "as_name": "threading",
                        "source": "未知模块"
                    }
                ]
            },
            {
                "function_name": "Open_device",
                "used_functions": [
                    "int",
                    "MvCamera",
                    "print",
                    "c_bool",
                    "cast",
                    "print",
                    "print",
                    "POINTER",
                    "int",
                    "print",
                    "int",
                    "print"
                ],
                "imports": []
            },
            {
                "function_name": "Start_grabbing",
                "used_functions": [
                    "print",
                    "random.randint",
                    "threading.Thread"
                ],
                "imports": [
                    {
                        "import_name": "threading",
                        "as_name": "threading",
                        "source": "未知模块"
                    },
                    {
                        "import_name": "random",
                        "as_name": "random",
                        "source": "未知模块"
                    }
                ]
            },
            {
                "function_name": "Stop_grabbing",
                "used_functions": [
                    "print",
                    "Stop_thread"
                ],
                "imports": []
            },
            {
                "function_name": "Close_device",
                "used_functions": [
                    "print",
                    "Stop_thread"
                ],
                "imports": []
            },
            {
                "function_name": "Set_trigger_mode",
                "used_functions": [],
                "imports": []
            },
            {
                "function_name": "Trigger_once",
                "used_functions": [],
                "imports": []
            },
            {
                "function_name": "Get_parameter",
                "used_functions": [
                    "MVCC_FLOATVALUE",
                    "memset",
                    "MVCC_FLOATVALUE",
                    "memset",
                    "MVCC_FLOATVALUE",
                    "memset",
                    "byref",
                    "sizeof",
                    "byref",
                    "sizeof",
                    "byref",
                    "sizeof"
                ],
                "imports": []
            },
            {
                "function_name": "Set_parameter",
                "used_functions": [
                    "print",
                    "time.sleep",
                    "print",
                    "float",
                    "print",
                    "float",
                    "print",
                    "float",
                    "print",
                    "To_hex_str",
                    "To_hex_str",
                    "To_hex_str"
                ],
                "imports": [
                    {
                        "import_name": "time",
                        "as_name": "time",
                        "source": "内置模块"
                    }
                ]
            },
            {
                "function_name": "Work_thread",
                "used_functions": [
                    "MV_FRAME_OUT",
                    "memset",
                    "byref",
                    "sizeof",
                    "MV_DISPLAY_FRAME_INFO",
                    "memset",
                    "int",
                    "print",
                    "print",
                    "byref",
                    "sizeof",
                    "byref",
                    "To_hex_str"
                ],
                "imports": []
            },
            {
                "function_name": "Save_jpg",
                "used_functions": [
                    "file_path.encode",
                    "MV_SAVE_IMAGE_TO_FILE_PARAM_EX",
                    "cast",
                    "ctypes.create_string_buffer",
                    "str",
                    "POINTER"
                ],
                "imports": [
                    {
                        "import_name": "ctypes",
                        "as_name": "ctypes",
                        "source": "未知模块"
                    }
                ]
            },
            {
                "function_name": "Save_Bmp",
                "used_functions": [
                    "file_path.encode",
                    "MV_SAVE_IMAGE_TO_FILE_PARAM_EX",
                    "cast",
                    "ctypes.create_string_buffer",
                    "str",
                    "POINTER"
                ],
                "imports": [
                    {
                        "import_name": "ctypes",
                        "as_name": "ctypes",
                        "source": "未知模块"
                    }
                ]
            }
        ]
    },
    {
        "file_path": "Python\\BasicDemo\\PyUICBasicDemo.py",
        "functions": [
            {
                "function_name": "setupUi",
                "used_functions": [
                    "MainWindow.setObjectName",
                    "MainWindow.resize",
                    "QtWidgets.QWidget",
                    "QtWidgets.QComboBox",
                    "QtWidgets.QWidget",
                    "QtWidgets.QGroupBox",
                    "QtWidgets.QWidget",
                    "QtWidgets.QGridLayout",
                    "QtWidgets.QPushButton",
                    "QtWidgets.QPushButton",
                    "QtWidgets.QPushButton",
                    "QtWidgets.QGroupBox",
                    "QtWidgets.QWidget",
                    "QtWidgets.QGridLayout",
                    "QtWidgets.QPushButton",
                    "QtWidgets.QRadioButton",
                    "QtWidgets.QRadioButton",
                    "QtWidgets.QPushButton",
                    "QtWidgets.QPushButton",
                    "QtWidgets.QPushButton",
                    "QtWidgets.QGroupBox",
                    "QtWidgets.QWidget",
                    "QtWidgets.QGridLayout",
                    "QtWidgets.QLabel",
                    "QtWidgets.QLineEdit",
                    "QtWidgets.QLabel",
                    "QtWidgets.QLabel",
                    "QtWidgets.QLineEdit",
                    "QtWidgets.QPushButton",
                    "QtWidgets.QPushButton",
                    "QtWidgets.QLineEdit",
                    "MainWindow.setCentralWidget",
                    "QtWidgets.QStatusBar",
                    "MainWindow.setStatusBar",
                    "self.retranslateUi",
                    "QtCore.QRect",
                    "QtCore.QRect",
                    "QtCore.QRect",
                    "QtCore.QRect",
                    "QtCore.QRect",
                    "QtCore.QRect",
                    "QtCore.QRect",
                    "QtCore.QRect"
                ],
                "imports": []
            },
            {
                "function_name": "retranslateUi",
                "used_functions": [
                    "MainWindow.setWindowTitle",
                    "_translate",
                    "_translate",
                    "_translate",
                    "_translate",
                    "_translate",
                    "_translate",
                    "_translate",
                    "_translate",
                    "_translate",
                    "_translate",
                    "_translate",
                    "_translate",
                    "_translate",
                    "_translate",
                    "_translate",
                    "_translate",
                    "_translate",
                    "_translate",
                    "_translate",
                    "_translate",
                    "_translate"
                ],
                "imports": []
            }
        ]
    },
    {
        "file_path": "Python\\BasicDemoByGenTL\\BasicDemoByGenTL.py",
        "functions": [
            {
                "function_name": "TxtWrapBy",
                "used_functions": [
                    "all.find",
                    "len",
                    "all.find"
                ],
                "imports": []
            },
            {
                "function_name": "ToHexStr",
                "used_functions": [
                    "chaDic.get",
                    "chaDic.get",
                    "str",
                    "str"
                ],
                "imports": []
            },
            {
                "function_name": "xFunc",
                "used_functions": [
                    "TxtWrapBy"
                ],
                "imports": []
            },
            {
                "function_name": "enum_interfaces",
                "used_functions": [
                    "QFileDialog.getOpenFileName",
                    "MV_GENTL_IF_INFO_LIST",
                    "MvCamera.MV_CC_EnumInterfacesByGenTL",
                    "print",
                    "range",
                    "QMessageBox.warning",
                    "QMessageBox.warning",
                    "ifListTemp.append",
                    "len",
                    "ToHexStr",
                    "cast",
                    "POINTER",
                    "chr",
                    "chr",
                    "chr",
                    "str"
                ],
                "imports": []
            },
            {
                "function_name": "enum_devices",
                "used_functions": [
                    "MV_GENTL_DEV_INFO_LIST",
                    "MvCamera.MV_CC_EnumDevicesByGenTL",
                    "print",
                    "range",
                    "QMessageBox.warning",
                    "QMessageBox.warning",
                    "devListTemp.append",
                    "ToHexStr",
                    "cast",
                    "POINTER",
                    "chr",
                    "str"
                ],
                "imports": []
            },
            {
                "function_name": "open_device",
                "used_functions": [
                    "CameraOperation",
                    "obj_cam_operation.Open_device",
                    "QMessageBox.warning",
                    "QMessageBox.warning",
                    "QMessageBox.warning",
                    "set_continue_mode",
                    "get_param",
                    "enable_controls",
                    "ToHexStr"
                ],
                "imports": []
            },
            {
                "function_name": "start_grabbing",
                "used_functions": [
                    "obj_cam_operation.Start_grabbing",
                    "QMessageBox.warning",
                    "enable_controls",
                    "ToHexStr"
                ],
                "imports": []
            },
            {
                "function_name": "stop_grabbing",
                "used_functions": [
                    "obj_cam_operation.Stop_grabbing",
                    "QMessageBox.warning",
                    "enable_controls",
                    "ToHexStr"
                ],
                "imports": []
            },
            {
                "function_name": "close_device",
                "used_functions": [
                    "enable_controls",
                    "obj_cam_operation.Close_device"
                ],
                "imports": []
            },
            {
                "function_name": "set_continue_mode",
                "used_functions": [
                    "obj_cam_operation.Set_trigger_mode",
                    "QMessageBox.warning",
                    "str",
                    "ToHexStr"
                ],
                "imports": []
            },
            {
                "function_name": "set_software_trigger_mode",
                "used_functions": [
                    "obj_cam_operation.Set_trigger_mode",
                    "QMessageBox.warning",
                    "ToHexStr"
                ],
                "imports": []
            },
            {
                "function_name": "trigger_once",
                "used_functions": [
                    "obj_cam_operation.Trigger_once",
                    "QMessageBox.warning",
                    "ToHexStr"
                ],
                "imports": []
            },
            {
                "function_name": "save_bmp",
                "used_functions": [
                    "obj_cam_operation.Save_Bmp",
                    "QMessageBox.warning",
                    "print",
                    "ToHexStr"
                ],
                "imports": []
            },
            {
                "function_name": "get_param",
                "used_functions": [
                    "obj_cam_operation.Get_parameter",
                    "QMessageBox.warning",
                    "ToHexStr"
                ],
                "imports": []
            },
            {
                "function_name": "set_param",
                "used_functions": [
                    "obj_cam_operation.Set_parameter",
                    "QMessageBox.warning",
                    "ToHexStr"
                ],
                "imports": []
            },
            {
                "function_name": "enable_controls",
                "used_functions": [],
                "imports": []
            }
        ]
    },
    {
        "file_path": "Python\\BasicDemoByGenTL\\CamOperation_class.py",
        "functions": [
            {
                "function_name": "Async_raise",
                "used_functions": [
                    "ctypes.c_long",
                    "inspect.isclass",
                    "type",
                    "ctypes.py_object",
                    "ValueError",
                    "SystemError"
                ],
                "imports": [
                    {
                        "import_name": "inspect",
                        "as_name": "inspect",
                        "source": "未知模块"
                    },
                    {
                        "import_name": "ctypes",
                        "as_name": "ctypes",
                        "source": "未知模块"
                    },
                    {
                        "import_name": "ctypes",
                        "as_name": "ctypes",
                        "source": "未知模块"
                    }
                ]
            },
            {
                "function_name": "Stop_thread",
                "used_functions": [
                    "Async_raise"
                ],
                "imports": []
            },
            {
                "function_name": "To_hex_str",
                "used_functions": [
                    "chaDic.get",
                    "chaDic.get",
                    "str",
                    "str"
                ],
                "imports": []
            },
            {
                "function_name": "Is_mono_data",
                "used_functions": [],
                "imports": []
            },
            {
                "function_name": "Is_color_data",
                "used_functions": [],
                "imports": []
            },
            {
                "function_name": "__init__",
                "used_functions": [
                    "threading.Lock"
                ],
                "imports": [
                    {
                        "import_name": "threading",
                        "as_name": "threading",
                        "source": "未知模块"
                    }
                ]
            },
            {
                "function_name": "Open_device",
                "used_functions": [
                    "int",
                    "MvCamera",
                    "print",
                    "c_bool",
                    "cast",
                    "print",
                    "print",
                    "POINTER",
                    "int"
                ],
                "imports": []
            },
            {
                "function_name": "Start_grabbing",
                "used_functions": [
                    "print",
                    "random.randint",
                    "threading.Thread"
                ],
                "imports": [
                    {
                        "import_name": "threading",
                        "as_name": "threading",
                        "source": "未知模块"
                    },
                    {
                        "import_name": "random",
                        "as_name": "random",
                        "source": "未知模块"
                    }
                ]
            },
            {
                "function_name": "Stop_grabbing",
                "used_functions": [
                    "print",
                    "Stop_thread"
                ],
                "imports": []
            },
            {
                "function_name": "Close_device",
                "used_functions": [
                    "print",
                    "Stop_thread"
                ],
                "imports": []
            },
            {
                "function_name": "Set_trigger_mode",
                "used_functions": [],
                "imports": []
            },
            {
                "function_name": "Trigger_once",
                "used_functions": [],
                "imports": []
            },
            {
                "function_name": "Get_parameter",
                "used_functions": [
                    "MVCC_FLOATVALUE",
                    "memset",
                    "MVCC_FLOATVALUE",
                    "memset",
                    "MVCC_FLOATVALUE",
                    "memset",
                    "byref",
                    "sizeof",
                    "byref",
                    "sizeof",
                    "byref",
                    "sizeof"
                ],
                "imports": []
            },
            {
                "function_name": "Set_parameter",
                "used_functions": [
                    "print",
                    "time.sleep",
                    "print",
                    "float",
                    "print",
                    "float",
                    "print",
                    "float",
                    "print",
                    "To_hex_str",
                    "To_hex_str",
                    "To_hex_str"
                ],
                "imports": [
                    {
                        "import_name": "time",
                        "as_name": "time",
                        "source": "内置模块"
                    }
                ]
            },
            {
                "function_name": "Work_thread",
                "used_functions": [
                    "MV_FRAME_OUT",
                    "memset",
                    "byref",
                    "sizeof",
                    "MV_DISPLAY_FRAME_INFO",
                    "memset",
                    "int",
                    "print",
                    "print",
                    "byref",
                    "sizeof",
                    "byref",
                    "To_hex_str"
                ],
                "imports": []
            },
            {
                "function_name": "Save_jpg",
                "used_functions": [
                    "file_path.encode",
                    "MV_SAVE_IMAGE_TO_FILE_PARAM_EX",
                    "cast",
                    "ctypes.create_string_buffer",
                    "str",
                    "POINTER"
                ],
                "imports": [
                    {
                        "import_name": "ctypes",
                        "as_name": "ctypes",
                        "source": "未知模块"
                    }
                ]
            },
            {
                "function_name": "Save_Bmp",
                "used_functions": [
                    "file_path.encode",
                    "MV_SAVE_IMAGE_TO_FILE_PARAM_EX",
                    "cast",
                    "ctypes.create_string_buffer",
                    "str",
                    "POINTER"
                ],
                "imports": [
                    {
                        "import_name": "ctypes",
                        "as_name": "ctypes",
                        "source": "未知模块"
                    }
                ]
            }
        ]
    },
    {
        "file_path": "Python\\BasicDemoByGenTL\\PyUICBasicDemoByGenTL.py",
        "functions": [
            {
                "function_name": "setupUi",
                "used_functions": [
                    "MainWindow.setObjectName",
                    "MainWindow.resize",
                    "QtWidgets.QWidget",
                    "QtWidgets.QComboBox",
                    "QtWidgets.QWidget",
                    "QtWidgets.QGroupBox",
                    "QtWidgets.QWidget",
                    "QtWidgets.QGridLayout",
                    "QtWidgets.QPushButton",
                    "QtWidgets.QPushButton",
                    "QtWidgets.QPushButton",
                    "QtWidgets.QPushButton",
                    "QtWidgets.QGroupBox",
                    "QtWidgets.QWidget",
                    "QtWidgets.QGridLayout",
                    "QtWidgets.QPushButton",
                    "QtWidgets.QRadioButton",
                    "QtWidgets.QRadioButton",
                    "QtWidgets.QPushButton",
                    "QtWidgets.QPushButton",
                    "QtWidgets.QPushButton",
                    "QtWidgets.QGroupBox",
                    "QtWidgets.QWidget",
                    "QtWidgets.QGridLayout",
                    "QtWidgets.QLabel",
                    "QtWidgets.QLineEdit",
                    "QtWidgets.QLabel",
                    "QtWidgets.QLabel",
                    "QtWidgets.QLineEdit",
                    "QtWidgets.QPushButton",
                    "QtWidgets.QPushButton",
                    "QtWidgets.QLineEdit",
                    "QtWidgets.QLabel",
                    "QtWidgets.QLabel",
                    "QtWidgets.QComboBox",
                    "MainWindow.setCentralWidget",
                    "QtWidgets.QStatusBar",
                    "MainWindow.setStatusBar",
                    "self.retranslateUi",
                    "QtCore.QRect",
                    "QtCore.QRect",
                    "QtCore.QRect",
                    "QtCore.QRect",
                    "QtCore.QRect",
                    "QtCore.QRect",
                    "QtCore.QRect",
                    "QtCore.QRect",
                    "QtCore.QRect",
                    "QtCore.QRect",
                    "QtCore.QRect"
                ],
                "imports": []
            },
            {
                "function_name": "retranslateUi",
                "used_functions": [
                    "MainWindow.setWindowTitle",
                    "_translate",
                    "_translate",
                    "_translate",
                    "_translate",
                    "_translate",
                    "_translate",
                    "_translate",
                    "_translate",
                    "_translate",
                    "_translate",
                    "_translate",
                    "_translate",
                    "_translate",
                    "_translate",
                    "_translate",
                    "_translate",
                    "_translate",
                    "_translate",
                    "_translate",
                    "_translate",
                    "_translate",
                    "_translate",
                    "_translate",
                    "_translate"
                ],
                "imports": []
            }
        ]
    },
    {
        "file_path": "Python\\BasicDemoLineScan\\BasicDemoLineScanCamera.py",
        "functions": []
    },
    {
        "file_path": "Python\\ConnectSpecCamera\\ConnectSpecCamera.py",
        "functions": [
            {
                "function_name": "work_thread",
                "used_functions": [
                    "MV_FRAME_OUT",
                    "memset",
                    "byref",
                    "sizeof",
                    "cam.MV_CC_GetImageBuffer",
                    "print",
                    "cam.MV_CC_FreeImageBuffer",
                    "print"
                ],
                "imports": []
            }
        ]
    },
    {
        "file_path": "Python\\ConvertPixelType\\ConvertPixelType.py",
        "functions": []
    },
    {
        "file_path": "Python\\Events\\Events.py",
        "functions": [
            {
                "function_name": "event_callback",
                "used_functions": [
                    "cast",
                    "print",
                    "POINTER"
                ],
                "imports": []
            }
        ]
    },
    {
        "file_path": "Python\\Events_Interface\\Events_Interface.py",
        "functions": [
            {
                "function_name": "event_callback",
                "used_functions": [
                    "cast",
                    "print",
                    "POINTER"
                ],
                "imports": []
            },
            {
                "function_name": "image_callback",
                "used_functions": [
                    "cast",
                    "POINTER"
                ],
                "imports": []
            },
            {
                "function_name": "print_interface_info",
                "used_functions": [
                    "range",
                    "print",
                    "print",
                    "print",
                    "print",
                    "print",
                    "cast",
                    "POINTER",
                    "chr",
                    "chr",
                    "chr",
                    "chr"
                ],
                "imports": []
            },
            {
                "function_name": "print_devices_info",
                "used_functions": [
                    "range",
                    "cast",
                    "print",
                    "print",
                    "print",
                    "POINTER",
                    "print",
                    "print",
                    "print",
                    "chr",
                    "print",
                    "print",
                    "print",
                    "chr",
                    "chr",
                    "print",
                    "print",
                    "print",
                    "chr",
                    "chr",
                    "print",
                    "print",
                    "print",
                    "chr",
                    "chr",
                    "chr",
                    "chr"
                ],
                "imports": []
            }
        ]
    },
    {
        "file_path": "Python\\GrabImage\\GrabImage.py",
        "functions": [
            {
                "function_name": "work_thread",
                "used_functions": [
                    "MV_FRAME_OUT",
                    "memset",
                    "byref",
                    "sizeof",
                    "cam.MV_CC_GetImageBuffer",
                    "print",
                    "cam.MV_CC_FreeImageBuffer",
                    "print"
                ],
                "imports": []
            }
        ]
    },
    {
        "file_path": "Python\\Grab_Callback\\Grab_Callback.py",
        "functions": [
            {
                "function_name": "image_callback",
                "used_functions": [
                    "cast",
                    "print",
                    "POINTER"
                ],
                "imports": []
            }
        ]
    },
    {
        "file_path": "Python\\Grab_LineStart\\Grab_LineStart.py",
        "functions": [
            {
                "function_name": "work_thread",
                "used_functions": [
                    "MV_FRAME_OUT",
                    "memset",
                    "byref",
                    "sizeof",
                    "cam.MV_CC_GetImageBuffer",
                    "print",
                    "cam.MV_CC_FreeImageBuffer",
                    "print"
                ],
                "imports": []
            }
        ]
    },
    {
        "file_path": "Python\\HighBandwidthDecode\\HighBandwidthDecode.py",
        "functions": []
    },
    {
        "file_path": "Python\\ImageSave\\ImageSave.py",
        "functions": [
            {
                "function_name": "save_non_raw_image",
                "used_functions": [
                    "file_path.encode",
                    "MV_SAVE_IMAGE_TO_FILE_PARAM_EX",
                    "create_string_buffer",
                    "cam_instance.MV_CC_SaveImageToFileEx"
                ],
                "imports": []
            },
            {
                "function_name": "save_raw",
                "used_functions": [
                    "MV_CC_HB_DECODE_PARAM",
                    "memset",
                    "MVCC_INTVALUE",
                    "memset",
                    "cam_instance.MV_CC_GetIntValue",
                    "cam.MV_CC_HBDecode",
                    "file_open.close",
                    "byref",
                    "sizeof",
                    "byref",
                    "sizeof",
                    "print",
                    "print",
                    "file_open.close",
                    "open",
                    "memmove",
                    "file_open.write",
                    "open",
                    "memmove",
                    "file_open.write",
                    "file_path.encode",
                    "byref",
                    "file_open.close",
                    "print",
                    "file_path.encode",
                    "byref",
                    "file_open.close",
                    "print"
                ],
                "imports": []
            }
        ]
    },
    {
        "file_path": "Python\\InterfaceAndDevice\\InterfaceAndDevice.py",
        "functions": [
            {
                "function_name": "image_callback",
                "used_functions": [
                    "cast",
                    "print",
                    "POINTER"
                ],
                "imports": []
            },
            {
                "function_name": "print_devices_info",
                "used_functions": [
                    "range",
                    "cast",
                    "print",
                    "print",
                    "print",
                    "POINTER",
                    "print",
                    "print",
                    "print",
                    "chr",
                    "print",
                    "print",
                    "print",
                    "chr",
                    "chr",
                    "print",
                    "print",
                    "print",
                    "chr",
                    "chr",
                    "print",
                    "print",
                    "print",
                    "chr",
                    "chr",
                    "chr",
                    "chr"
                ],
                "imports": []
            },
            {
                "function_name": "print_interface_info",
                "used_functions": [
                    "range",
                    "print",
                    "print",
                    "print",
                    "print",
                    "print",
                    "cast",
                    "POINTER",
                    "chr",
                    "chr",
                    "chr",
                    "chr"
                ],
                "imports": []
            }
        ]
    },
    {
        "file_path": "Python\\InterfaceDemo\\InterfaceDemo.py",
        "functions": []
    },
    {
        "file_path": "Python\\MultiCast\\MultiCast.py",
        "functions": [
            {
                "function_name": "work_thread",
                "used_functions": [
                    "MV_FRAME_OUT",
                    "memset",
                    "byref",
                    "sizeof",
                    "cam.MV_CC_GetImageBuffer",
                    "print",
                    "cam.MV_CC_FreeImageBuffer",
                    "print"
                ],
                "imports": []
            }
        ]
    },
    {
        "file_path": "Python\\MultiLightCtrl_ImageStitching\\MultiLightCtrl_ImageStitching.py",
        "functions": [
            {
                "function_name": "print_devices_info",
                "used_functions": [
                    "range",
                    "cast",
                    "print",
                    "print",
                    "print",
                    "POINTER",
                    "print",
                    "print",
                    "print",
                    "chr",
                    "print",
                    "print",
                    "print",
                    "chr",
                    "chr",
                    "print",
                    "print",
                    "print",
                    "chr",
                    "chr",
                    "print",
                    "print",
                    "print",
                    "chr",
                    "chr",
                    "chr",
                    "chr"
                ],
                "imports": []
            }
        ]
    },
    {
        "file_path": "Python\\MultipleCameras\\CamOperation_class.py",
        "functions": [
            {
                "function_name": "__init__",
                "used_functions": [
                    "MV_FRAME_OUT_INFO_EX",
                    "threading.Lock"
                ],
                "imports": [
                    {
                        "import_name": "threading",
                        "as_name": "threading",
                        "source": "未知模块"
                    }
                ]
            },
            {
                "function_name": "to_hex_str",
                "used_functions": [
                    "chaDic.get",
                    "chaDic.get",
                    "str",
                    "str"
                ],
                "imports": []
            },
            {
                "function_name": "open_device",
                "used_functions": [
                    "int",
                    "MvCamera",
                    "c_bool",
                    "cast",
                    "print",
                    "print",
                    "POINTER",
                    "int",
                    "print",
                    "int",
                    "print"
                ],
                "imports": []
            },
            {
                "function_name": "start_grabbing",
                "used_functions": [
                    "print",
                    "threading.Event",
                    "threading.Thread",
                    "print",
                    "str"
                ],
                "imports": [
                    {
                        "import_name": "threading",
                        "as_name": "threading",
                        "source": "未知模块"
                    },
                    {
                        "import_name": "threading",
                        "as_name": "threading",
                        "source": "未知模块"
                    }
                ]
            },
            {
                "function_name": "stop_grabbing",
                "used_functions": [],
                "imports": []
            },
            {
                "function_name": "close_device",
                "used_functions": [],
                "imports": []
            },
            {
                "function_name": "set_trigger_mode",
                "used_functions": [],
                "imports": []
            },
            {
                "function_name": "set_trigger_source",
                "used_functions": [],
                "imports": []
            },
            {
                "function_name": "trigger_once",
                "used_functions": [],
                "imports": []
            },
            {
                "function_name": "set_exposure_time",
                "used_functions": [
                    "time.sleep",
                    "float",
                    "print",
                    "self.to_hex_str"
                ],
                "imports": [
                    {
                        "import_name": "time",
                        "as_name": "time",
                        "source": "内置模块"
                    }
                ]
            },
            {
                "function_name": "set_gain",
                "used_functions": [
                    "time.sleep",
                    "float",
                    "print",
                    "self.to_hex_str"
                ],
                "imports": [
                    {
                        "import_name": "time",
                        "as_name": "time",
                        "source": "内置模块"
                    }
                ]
            },
            {
                "function_name": "set_frame_rate",
                "used_functions": [
                    "float"
                ],
                "imports": []
            },
            {
                "function_name": "work_thread",
                "used_functions": [
                    "MV_FRAME_OUT",
                    "memset",
                    "byref",
                    "sizeof",
                    "exit_flag.is_set",
                    "MV_DISPLAY_FRAME_INFO",
                    "memset",
                    "int",
                    "print",
                    "byref",
                    "byref",
                    "sizeof",
                    "byref",
                    "byref",
                    "sizeof",
                    "self.to_hex_str",
                    "str"
                ],
                "imports": []
            },
            {
                "function_name": "save_bmp",
                "used_functions": [
                    "file_path.encode",
                    "MV_SAVE_IMAGE_TO_FILE_PARAM_EX",
                    "cast",
                    "ctypes.create_string_buffer",
                    "POINTER",
                    "str",
                    "str"
                ],
                "imports": [
                    {
                        "import_name": "ctypes",
                        "as_name": "ctypes",
                        "source": "未知模块"
                    }
                ]
            }
        ]
    },
    {
        "file_path": "Python\\MultipleCameras\\MultipleCameras.py",
        "functions": [
            {
                "function_name": "ToHexStr",
                "used_functions": [
                    "chaDic.get",
                    "chaDic.get",
                    "str",
                    "str"
                ],
                "imports": []
            },
            {
                "function_name": "decoding_char",
                "used_functions": [
                    "ctypes.cast",
                    "str"
                ],
                "imports": [
                    {
                        "import_name": "ctypes",
                        "as_name": "ctypes",
                        "source": "未知模块"
                    }
                ]
            },
            {
                "function_name": "print_text",
                "used_functions": [],
                "imports": []
            },
            {
                "function_name": "enum_devices",
                "used_functions": [
                    "MV_CC_DEVICE_INFO_LIST",
                    "MvCamera.MV_CC_EnumDevicesEx2",
                    "print_text",
                    "range",
                    "QMessageBox.warning",
                    "QMessageBox.warning",
                    "ToHexStr",
                    "cam_button_group.button",
                    "button_by_id.setText",
                    "button_by_id.setEnabled",
                    "cam_button_group.button",
                    "button_by_id.setEnabled",
                    "cast",
                    "print",
                    "decoding_char",
                    "decoding_char",
                    "print",
                    "print",
                    "print",
                    "POINTER",
                    "print",
                    "decoding_char",
                    "decoding_char",
                    "print",
                    "print",
                    "print",
                    "chr",
                    "print",
                    "decoding_char",
                    "decoding_char",
                    "print",
                    "print",
                    "print",
                    "chr",
                    "print",
                    "decoding_char",
                    "decoding_char",
                    "print",
                    "print",
                    "print",
                    "chr",
                    "print",
                    "decoding_char",
                    "decoding_char",
                    "print",
                    "print",
                    "print",
                    "chr",
                    "chr"
                ],
                "imports": []
            },
            {
                "function_name": "cam_check_box_clicked",
                "used_functions": [
                    "range",
                    "cam_button_group.button",
                    "button.isChecked",
                    "cam_checked_list.append",
                    "cam_checked_list.append"
                ],
                "imports": []
            },
            {
                "function_name": "enable_ui_controls",
                "used_functions": [],
                "imports": []
            },
            {
                "function_name": "open_devices",
                "used_functions": [
                    "range",
                    "range",
                    "len",
                    "print_text",
                    "print_text",
                    "print_text",
                    "enable_ui_controls",
                    "MvCamera",
                    "obj_cam_operation.append",
                    "obj_cam_operation.append",
                    "cam_button_group.button",
                    "button_by_id.setEnabled",
                    "CameraOperation",
                    "obj_cam_operation.pop",
                    "print_text"
                ],
                "imports": []
            },
            {
                "function_name": "software_trigger_check_box_clicked",
                "used_functions": [
                    "enable_ui_controls",
                    "range",
                    "range",
                    "print_text",
                    "print_text",
                    "ToHexStr",
                    "ToHexStr",
                    "str",
                    "str"
                ],
                "imports": []
            },
            {
                "function_name": "radio_button_clicked",
                "used_functions": [
                    "raio_button_group.id",
                    "range",
                    "enable_ui_controls",
                    "range",
                    "enable_ui_controls",
                    "print_text",
                    "print_text",
                    "ToHexStr",
                    "ToHexStr",
                    "str",
                    "str"
                ],
                "imports": []
            },
            {
                "function_name": "close_devices",
                "used_functions": [
                    "range",
                    "enable_ui_controls",
                    "stop_grabbing",
                    "cam_button_group.button",
                    "button_by_id.setEnabled",
                    "print_text",
                    "ToHexStr",
                    "str"
                ],
                "imports": []
            },
            {
                "function_name": "start_grabbing",
                "used_functions": [
                    "range",
                    "enable_ui_controls",
                    "print_text",
                    "ToHexStr",
                    "str"
                ],
                "imports": []
            },
            {
                "function_name": "stop_grabbing",
                "used_functions": [
                    "range",
                    "enable_ui_controls",
                    "print_text",
                    "ToHexStr",
                    "str"
                ],
                "imports": []
            },
            {
                "function_name": "save_bmp",
                "used_functions": [
                    "range",
                    "print_text",
                    "ToHexStr",
                    "str"
                ],
                "imports": []
            },
            {
                "function_name": "is_float",
                "used_functions": [
                    "float"
                ],
                "imports": []
            },
            {
                "function_name": "set_parameters",
                "used_functions": [
                    "range",
                    "print_text",
                    "is_float",
                    "is_float",
                    "is_float",
                    "print_text",
                    "print_text",
                    "print_text",
                    "ToHexStr",
                    "ToHexStr",
                    "ToHexStr",
                    "str",
                    "str",
                    "str"
                ],
                "imports": []
            },
            {
                "function_name": "software_trigger_once",
                "used_functions": [
                    "range",
                    "print_text",
                    "ToHexStr",
                    "str"
                ],
                "imports": []
            }
        ]
    },
    {
        "file_path": "Python\\MultipleCameras\\PyUIMultipleCameras.py",
        "functions": [
            {
                "function_name": "setupUi",
                "used_functions": [
                    "MainWindow.setObjectName",
                    "MainWindow.resize",
                    "QtWidgets.QWidget",
                    "QtWidgets.QHBoxLayout",
                    "QtWidgets.QHBoxLayout",
                    "QtWidgets.QVBoxLayout",
                    "QtWidgets.QGridLayout",
                    "QtWidgets.QWidget",
                    "QtWidgets.QCheckBox",
                    "QtWidgets.QCheckBox",
                    "QtWidgets.QCheckBox",
                    "QtWidgets.QCheckBox",
                    "QtWidgets.QWidget",
                    "QtWidgets.QWidget",
                    "QtWidgets.QWidget",
                    "QtWidgets.QTextEdit",
                    "QtWidgets.QGridLayout",
                    "QtWidgets.QPushButton",
                    "QtWidgets.QLabel",
                    "QtWidgets.QLineEdit",
                    "QtWidgets.QRadioButton",
                    "QtWidgets.QPushButton",
                    "QtWidgets.QPushButton",
                    "QtWidgets.QLabel",
                    "QtWidgets.QPushButton",
                    "QtWidgets.QLineEdit",
                    "QtWidgets.QLineEdit",
                    "QtWidgets.QRadioButton",
                    "QtWidgets.QPushButton",
                    "QtWidgets.QPushButton",
                    "QtWidgets.QPushButton",
                    "QtWidgets.QPushButton",
                    "QtWidgets.QCheckBox",
                    "QtWidgets.QLabel",
                    "QtWidgets.QSpacerItem",
                    "MainWindow.setCentralWidget",
                    "QtWidgets.QMenuBar",
                    "MainWindow.setMenuBar",
                    "QtWidgets.QStatusBar",
                    "MainWindow.setStatusBar",
                    "self.retranslateUi",
                    "QtCore.QSize",
                    "QtCore.QSize",
                    "QtCore.QSize",
                    "QtCore.QSize",
                    "QtCore.QSize",
                    "QtCore.QSize",
                    "QtCore.QSize",
                    "QtCore.QSize",
                    "QtCore.QSize",
                    "QtCore.QSize",
                    "QtCore.QSize",
                    "QtCore.QSize",
                    "QtCore.QSize",
                    "QtCore.QRect"
                ],
                "imports": []
            },
            {
                "function_name": "retranslateUi",
                "used_functions": [
                    "MainWindow.setWindowTitle",
                    "_translate",
                    "_translate",
                    "_translate",
                    "_translate",
                    "_translate",
                    "_translate",
                    "_translate",
                    "_translate",
                    "_translate",
                    "_translate",
                    "_translate",
                    "_translate",
                    "_translate",
                    "_translate",
                    "_translate",
                    "_translate",
                    "_translate",
                    "_translate",
                    "_translate"
                ],
                "imports": []
            }
        ]
    },
    {
        "file_path": "Python\\MvImport\\CameraParams_const.py",
        "functions": []
    },
    {
        "file_path": "Python\\MvImport\\CameraParams_header.py",
        "functions": []
    },
    {
        "file_path": "Python\\MvImport\\MvCameraControl_class.py",
        "functions": [
            {
                "function_name": "__init__",
                "used_functions": [
                    "c_void_p",
                    "pointer"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_Initialize",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_Initialize"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_Finalize",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_Finalize"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_GetSDKVersion",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_GetSDKVersion"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_EnumerateTls",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_EnumerateTls"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_EnumDevices",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_EnumDevices",
                    "c_uint",
                    "byref"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_EnumDevicesEx",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_EnumDevicesEx",
                    "c_uint",
                    "byref",
                    "strManufacturerName.encode"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_EnumDevicesEx2",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_EnumDevicesEx2",
                    "c_uint",
                    "byref",
                    "strManufacturerName.encode",
                    "c_uint"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_IsDeviceAccessible",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_IsDeviceAccessible",
                    "byref"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_EnumInterfaces",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_EnumInterfaces",
                    "c_uint",
                    "byref"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_CreateInterface",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_CreateInterface",
                    "byref",
                    "byref"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_CreateInterfaceByID",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_CreateInterfaceByID",
                    "byref",
                    "InterfaceID.encode"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_OpenInterface",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_OpenInterface"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_CloseInterface",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_CloseInterface"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_DestroyInterface",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_DestroyInterface"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_EnumDevicesByInterface",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_EnumDevicesByInterface",
                    "byref"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_SetSDKLogPath",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_SetSDKLogPath",
                    "SDKLogPath.encode"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_CreateHandle",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_CreateHandle",
                    "byref",
                    "byref"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_CreateHandleWithoutLog",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_CreateHandleWithoutLog",
                    "byref",
                    "byref"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_DestroyHandle",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_DestroyHandle"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_OpenDevice",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_OpenDevice"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_CloseDevice",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_CloseDevice"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_IsDeviceConnected",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_IsDeviceConnected"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_RegisterImageCallBackEx",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_RegisterImageCallBackEx"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_RegisterImageCallBackForRGB",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_RegisterImageCallBackForRGB"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_RegisterImageCallBackForBGR",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_RegisterImageCallBackForBGR"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_StartGrabbing",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_StartGrabbing"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_StopGrabbing",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_StopGrabbing"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_GetImageForRGB",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_GetImageForRGB",
                    "byref"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_GetImageForBGR",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_GetImageForBGR",
                    "byref"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_GetImageBuffer",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_GetImageBuffer",
                    "byref"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_FreeImageBuffer",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_FreeImageBuffer",
                    "byref"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_GetOneFrameTimeout",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_GetOneFrameTimeout",
                    "byref"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_ClearImageBuffer",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_ClearImageBuffer"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_GetValidImageNum",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_GetValidImageNum",
                    "byref"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_DisplayOneFrame",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_DisplayOneFrame",
                    "byref"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_DisplayOneFrameEx",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_DisplayOneFrameEx",
                    "byref"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_SetImageNodeNum",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_SetImageNodeNum",
                    "c_uint"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_SetGrabStrategy",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_SetGrabStrategy",
                    "c_uint"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_SetOutputQueueSize",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_SetOutputQueueSize"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_GetDeviceInfo",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_GetDeviceInfo",
                    "byref"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_GetAllMatchInfo",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_GetAllMatchInfo",
                    "byref"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_GetIntValueEx",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_GetIntValueEx",
                    "strKey.encode",
                    "byref"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_SetIntValueEx",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_SetIntValueEx",
                    "strKey.encode",
                    "c_uint"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_GetIntValue",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_GetIntValue",
                    "strKey.encode",
                    "byref"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_SetIntValue",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_SetIntValue",
                    "strKey.encode",
                    "c_uint32"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_GetEnumValue",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_GetEnumValue",
                    "strKey.encode",
                    "byref"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_SetEnumValue",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_SetEnumValue",
                    "strKey.encode",
                    "c_uint32"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_GetEnumEntrySymbolic",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_GetEnumEntrySymbolic",
                    "strKey.encode",
                    "byref"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_SetEnumValueByString",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_SetEnumValueByString",
                    "strKey.encode",
                    "sValue.encode"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_GetFloatValue",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_GetFloatValue",
                    "strKey.encode",
                    "byref"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_SetFloatValue",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_SetFloatValue",
                    "strKey.encode",
                    "c_float"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_GetBoolValue",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_GetBoolValue",
                    "strKey.encode",
                    "byref"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_SetBoolValue",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_SetBoolValue",
                    "strKey.encode"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_GetStringValue",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_GetStringValue",
                    "strKey.encode",
                    "byref"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_SetStringValue",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_SetStringValue",
                    "strKey.encode",
                    "sValue.encode"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_SetCommandValue",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_SetCommandValue",
                    "strKey.encode"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_ReadMemory",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_ReadMemory",
                    "c_uint"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_WriteMemory",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_WriteMemory",
                    "c_uint"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_InvalidateNodes",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_InvalidateNodes"
                ],
                "imports": []
            },
            {
                "function_name": "MV_XML_GetGenICamXML",
                "used_functions": [
                    "MvCamCtrldll.MV_XML_GetGenICamXML",
                    "c_uint",
                    "byref"
                ],
                "imports": []
            },
            {
                "function_name": "MV_XML_GetNodeAccessMode",
                "used_functions": [
                    "MvCamCtrldll.MV_XML_GetNodeAccessMode",
                    "strName.encode",
                    "byref"
                ],
                "imports": []
            },
            {
                "function_name": "MV_XML_GetNodeInterfaceType",
                "used_functions": [
                    "MvCamCtrldll.MV_XML_GetNodeInterfaceType",
                    "strName.encode",
                    "byref"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_FeatureSave",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_FeatureSave",
                    "strFileName.encode"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_FeatureLoad",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_FeatureLoad",
                    "strFileName.encode"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_FileAccessRead",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_FileAccessRead",
                    "byref"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_FileAccessReadEx",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_FileAccessReadEx",
                    "byref"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_FileAccessWrite",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_FileAccessWrite",
                    "byref"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_FileAccessWriteEx",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_FileAccessWriteEx",
                    "byref"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_GetFileAccessProgress",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_GetFileAccessProgress",
                    "byref"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_LocalUpgrade",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_LocalUpgrade",
                    "strFilePathName.encode"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_GetUpgradeProcess",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_GetUpgradeProcess",
                    "byref"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_RegisterExceptionCallBack",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_RegisterExceptionCallBack"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_RegisterAllEventCallBack",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_RegisterAllEventCallBack"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_RegisterEventCallBackEx",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_RegisterEventCallBackEx",
                    "pEventName.encode"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_EventNotificationOn",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_EventNotificationOn",
                    "strEventName.encode"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_EventNotificationOff",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_EventNotificationOff",
                    "strEventName.encode"
                ],
                "imports": []
            },
            {
                "function_name": "MV_GIGE_SetEnumDevTimeout",
                "used_functions": [
                    "MvCamCtrldll.MV_GIGE_SetEnumDevTimeout",
                    "c_uint"
                ],
                "imports": []
            },
            {
                "function_name": "MV_GIGE_ForceIpEx",
                "used_functions": [
                    "MvCamCtrldll.MV_GIGE_ForceIpEx",
                    "c_uint",
                    "c_uint",
                    "c_uint"
                ],
                "imports": []
            },
            {
                "function_name": "MV_GIGE_SetIpConfig",
                "used_functions": [
                    "MvCamCtrldll.MV_GIGE_SetIpConfig",
                    "c_uint"
                ],
                "imports": []
            },
            {
                "function_name": "MV_GIGE_SetNetTransMode",
                "used_functions": [
                    "MvCamCtrldll.MV_GIGE_SetNetTransMode",
                    "c_uint"
                ],
                "imports": []
            },
            {
                "function_name": "MV_GIGE_GetNetTransInfo",
                "used_functions": [
                    "MvCamCtrldll.MV_GIGE_GetNetTransInfo",
                    "byref"
                ],
                "imports": []
            },
            {
                "function_name": "MV_GIGE_SetDiscoveryMode",
                "used_functions": [
                    "MvCamCtrldll.MV_GIGE_SetDiscoveryMode",
                    "c_uint"
                ],
                "imports": []
            },
            {
                "function_name": "MV_GIGE_SetGvspTimeout",
                "used_functions": [
                    "MvCamCtrldll.MV_GIGE_SetGvspTimeout",
                    "c_uint"
                ],
                "imports": []
            },
            {
                "function_name": "MV_GIGE_GetGvspTimeout",
                "used_functions": [
                    "MvCamCtrldll.MV_GIGE_GetGvspTimeout",
                    "byref"
                ],
                "imports": []
            },
            {
                "function_name": "MV_GIGE_SetGvcpTimeout",
                "used_functions": [
                    "MvCamCtrldll.MV_GIGE_SetGvcpTimeout",
                    "c_uint"
                ],
                "imports": []
            },
            {
                "function_name": "MV_GIGE_GetGvcpTimeout",
                "used_functions": [
                    "MvCamCtrldll.MV_GIGE_GetGvcpTimeout",
                    "byref"
                ],
                "imports": []
            },
            {
                "function_name": "MV_GIGE_SetRetryGvcpTimes",
                "used_functions": [
                    "MvCamCtrldll.MV_GIGE_SetRetryGvcpTimes",
                    "c_uint"
                ],
                "imports": []
            },
            {
                "function_name": "MV_GIGE_GetRetryGvcpTimes",
                "used_functions": [
                    "MvCamCtrldll.MV_GIGE_GetRetryGvcpTimes",
                    "byref"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_GetOptimalPacketSize",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_GetOptimalPacketSize"
                ],
                "imports": []
            },
            {
                "function_name": "MV_GIGE_SetResend",
                "used_functions": [
                    "MvCamCtrldll.MV_GIGE_SetResend",
                    "c_uint",
                    "c_uint",
                    "c_uint"
                ],
                "imports": []
            },
            {
                "function_name": "MV_GIGE_SetResendMaxRetryTimes",
                "used_functions": [
                    "MvCamCtrldll.MV_GIGE_SetResendMaxRetryTimes",
                    "c_uint"
                ],
                "imports": []
            },
            {
                "function_name": "MV_GIGE_GetResendMaxRetryTimes",
                "used_functions": [
                    "MvCamCtrldll.MV_GIGE_GetResendMaxRetryTimes",
                    "byref"
                ],
                "imports": []
            },
            {
                "function_name": "MV_GIGE_SetResendTimeInterval",
                "used_functions": [
                    "MvCamCtrldll.MV_GIGE_SetResendTimeInterval",
                    "c_uint"
                ],
                "imports": []
            },
            {
                "function_name": "MV_GIGE_GetResendTimeInterval",
                "used_functions": [
                    "MvCamCtrldll.MV_GIGE_GetResendTimeInterval",
                    "byref"
                ],
                "imports": []
            },
            {
                "function_name": "MV_GIGE_SetTransmissionType",
                "used_functions": [
                    "MvCamCtrldll.MV_GIGE_SetTransmissionType",
                    "byref"
                ],
                "imports": []
            },
            {
                "function_name": "MV_GIGE_IssueActionCommand",
                "used_functions": [
                    "MvCamCtrldll.MV_GIGE_IssueActionCommand",
                    "byref",
                    "byref"
                ],
                "imports": []
            },
            {
                "function_name": "MV_GIGE_GetMulticastStatus",
                "used_functions": [
                    "MvCamCtrldll.MV_GIGE_GetMulticastStatus",
                    "byref",
                    "byref"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CAML_GetSerialPortList",
                "used_functions": [
                    "MvCamCtrldll.MV_CAML_GetSerialPortList",
                    "byref"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CAML_SetEnumSerialPorts",
                "used_functions": [
                    "MvCamCtrldll.MV_CAML_SetEnumSerialPorts",
                    "byref"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CAML_SetDeviceBaudrate",
                "used_functions": [
                    "MvCamCtrldll.MV_CAML_SetDeviceBaudrate",
                    "c_uint"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CAML_GetDeviceBaudrate",
                "used_functions": [
                    "MvCamCtrldll.MV_CAML_GetDeviceBaudrate",
                    "byref"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CAML_GetSupportBaudrates",
                "used_functions": [
                    "MvCamCtrldll.MV_CAML_GetSupportBaudrates",
                    "byref"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CAML_SetGenCPTimeOut",
                "used_functions": [
                    "MvCamCtrldll.MV_CAML_SetGenCPTimeOut",
                    "c_uint"
                ],
                "imports": []
            },
            {
                "function_name": "MV_USB_SetTransferSize",
                "used_functions": [
                    "MvCamCtrldll.MV_USB_SetTransferSize",
                    "c_uint"
                ],
                "imports": []
            },
            {
                "function_name": "MV_USB_GetTransferSize",
                "used_functions": [
                    "MvCamCtrldll.MV_USB_GetTransferSize",
                    "byref"
                ],
                "imports": []
            },
            {
                "function_name": "MV_USB_SetTransferWays",
                "used_functions": [
                    "MvCamCtrldll.MV_USB_SetTransferWays",
                    "c_uint"
                ],
                "imports": []
            },
            {
                "function_name": "MV_USB_GetTransferWays",
                "used_functions": [
                    "MvCamCtrldll.MV_USB_GetTransferWays",
                    "byref"
                ],
                "imports": []
            },
            {
                "function_name": "MV_USB_RegisterStreamExceptionCallBack",
                "used_functions": [
                    "MvCamCtrldll.MV_USB_RegisterStreamExceptionCallBack"
                ],
                "imports": []
            },
            {
                "function_name": "MV_USB_SetEventNodeNum",
                "used_functions": [
                    "MvCamCtrldll.MV_USB_SetEventNodeNum",
                    "c_uint"
                ],
                "imports": []
            },
            {
                "function_name": "MV_USB_SetSyncTimeOut",
                "used_functions": [
                    "MvCamCtrldll.MV_USB_SetSyncTimeOut",
                    "c_uint"
                ],
                "imports": []
            },
            {
                "function_name": "MV_USB_GetSyncTimeOut",
                "used_functions": [
                    "MvCamCtrldll.MV_USB_GetSyncTimeOut",
                    "byref"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_EnumInterfacesByGenTL",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_EnumInterfacesByGenTL",
                    "byref",
                    "strGenTLPath.encode"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_EnumDevicesByGenTL",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_EnumDevicesByGenTL",
                    "byref"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_UnloadGenTLLibrary",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_UnloadGenTLLibrary",
                    "GenTLPath.encode"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_CreateHandleByGenTL",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_CreateHandleByGenTL",
                    "byref",
                    "byref"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_SaveImageEx2",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_SaveImageEx2",
                    "byref"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_SaveImageEx3",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_SaveImageEx3",
                    "byref"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_SaveImageToFile",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_SaveImageToFile",
                    "byref"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_SaveImageToFileEx",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_SaveImageToFileEx",
                    "byref"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_SavePointCloudData",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_SavePointCloudData",
                    "byref"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_RotateImage",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_RotateImage",
                    "byref"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_FlipImage",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_FlipImage",
                    "byref"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_ConvertPixelType",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_ConvertPixelType",
                    "byref"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_ConvertPixelTypeEx",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_ConvertPixelTypeEx",
                    "byref"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_SetBayerCvtQuality",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_SetBayerCvtQuality",
                    "c_uint"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_SetBayerFilterEnable",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_SetBayerFilterEnable",
                    "c_bool"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_SetBayerGammaValue",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_SetBayerGammaValue",
                    "c_float"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_SetGammaValue",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_SetGammaValue",
                    "c_int",
                    "c_float"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_SetBayerGammaParam",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_SetBayerGammaParam",
                    "byref"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_SetBayerCCMParam",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_SetBayerCCMParam",
                    "byref"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_SetBayerCCMParamEx",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_SetBayerCCMParamEx",
                    "byref"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_ImageContrast",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_ImageContrast",
                    "byref"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_HBDecode",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_HB_Decode",
                    "byref"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_DrawRect",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_DrawRect",
                    "byref"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_DrawCircle",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_DrawCircle",
                    "byref"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_DrawLines",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_DrawLines",
                    "byref"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_StartRecord",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_StartRecord",
                    "byref"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_InputOneFrame",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_InputOneFrame",
                    "byref"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_StopRecord",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_StopRecord"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_OpenParamsGUI",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_OpenParamsGUI"
                ],
                "imports": []
            },
            {
                "function_name": "MV_CC_ReconstructImage",
                "used_functions": [
                    "MvCamCtrldll.MV_CC_ReconstructImage",
                    "byref"
                ],
                "imports": []
            }
        ]
    },
    {
        "file_path": "Python\\MvImport\\MvErrorDefine_const.py",
        "functions": []
    },
    {
        "file_path": "Python\\MvImport\\PixelType_header.py",
        "functions": []
    },
    {
        "file_path": "Python\\ParametrizeCamera_FileAccess\\ParametrizeCamera_FileAccess.py",
        "functions": [
            {
                "function_name": "progress_thread",
                "used_functions": [
                    "MV_CC_FILE_ACCESS_PROGRESS",
                    "memset",
                    "byref",
                    "sizeof",
                    "cam.MV_CC_GetFileAccessProgress",
                    "print",
                    "print"
                ],
                "imports": []
            },
            {
                "function_name": "file_access_thread",
                "used_functions": [
                    "MV_CC_FILE_ACCESS",
                    "memset",
                    "byref",
                    "sizeof",
                    "cam.MV_CC_FileAccessRead",
                    "print",
                    "cam.MV_CC_FileAccessWrite",
                    "print"
                ],
                "imports": []
            }
        ]
    },
    {
        "file_path": "Python\\ParametrizeCamera_LineScanIOSettings\\ParametrizeCamera_LineScanIOSettings.py",
        "functions": [
            {
                "function_name": "image_callback",
                "used_functions": [
                    "cast",
                    "print",
                    "POINTER"
                ],
                "imports": []
            }
        ]
    },
    {
        "file_path": "Python\\ParametrizeCamera_LoadAndSave\\ParametrizeCamera_LoadAndSave.py",
        "functions": []
    },
    {
        "file_path": "Python\\Recording\\Recording.py",
        "functions": [
            {
                "function_name": "work_thread",
                "used_functions": [
                    "MV_FRAME_OUT",
                    "memset",
                    "MV_CC_INPUT_FRAME_INFO",
                    "memset",
                    "byref",
                    "sizeof",
                    "byref",
                    "sizeof",
                    "cam.MV_CC_GetImageBuffer",
                    "print",
                    "cast",
                    "cam.MV_CC_InputOneFrame",
                    "cam.MV_CC_FreeImageBuffer",
                    "print",
                    "POINTER",
                    "print"
                ],
                "imports": []
            }
        ]
    }
]
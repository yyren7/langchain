[
    {
        "file_path": "Python\\BasicDemo\\BasicDemo.py",
        "used_functions": [
            "all.find",
            "MvCamera.MV_CC_Initialize",
            "MV_CC_DEVICE_INFO_LIST",
            "MvCamera",
            "QApplication",
            "QMainWindow",
            "Ui_MainWindow",
            "ui.setupUi",
            "mainWindow.show",
            "app.exec_",
            "close_device",
            "MvCamera.MV_CC_Finalize",
            "sys.exit",
            "len",
            "all.find",
            "chaDic.get",
            "TxtWrapBy",
            "ctypes.cast",
            "MV_CC_DEVICE_INFO_LIST",
            "MvCamera.MV_CC_EnumDevices",
            "print",
            "range",
            "CameraOperation",
            "obj_cam_operation.Open_device",
            "obj_cam_operation.Start_grabbing",
            "obj_cam_operation.Stop_grabbing",
            "enable_controls",
            "obj_cam_operation.Set_trigger_mode",
            "obj_cam_operation.Set_trigger_mode",
            "obj_cam_operation.Trigger_once",
            "obj_cam_operation.Save_Bmp",
            "obj_cam_operation.Get_parameter",
            "obj_cam_operation.Set_parameter",
            "chaDic.get",
            "str",
            "QMessageBox.warning",
            "QMessageBox.warning",
            "QMessageBox.warning",
            "QMessageBox.warning",
            "QMessageBox.warning",
            "set_continue_mode",
            "get_param",
            "enable_controls",
            "QMessageBox.warning",
            "enable_controls",
            "QMessageBox.warning",
            "enable_controls",
            "obj_cam_operation.Close_device",
            "QMessageBox.warning",
            "QMessageBox.warning",
            "QMessageBox.warning",
            "QMessageBox.warning",
            "print",
            "float",
            "QMessageBox.warning",
            "QMessageBox.warning",
            "QMessageBox.warning",
            "str",
            "str",
            "ToHexStr",
            "cast",
            "print",
            "decoding_char",
            "decoding_char",
            "print",
            "print",
            "print",
            "devList.append",
            "ToHexStr",
            "ToHexStr",
            "ToHexStr",
            "str",
            "ToHexStr",
            "ToHexStr",
            "ToHexStr",
            "ToHexStr",
            "is_float",
            "is_float",
            "is_float",
            "ToHexStr",
            "ToHexStr",
            "POINTER",
            "print",
            "decoding_char",
            "decoding_char",
            "print",
            "print",
            "print",
            "devList.append",
            "print",
            "decoding_char",
            "decoding_char",
            "print",
            "print",
            "print",
            "devList.append",
            "ToHexStr",
            "str",
            "chr",
            "print",
            "decoding_char",
            "decoding_char",
            "print",
            "print",
            "print",
            "devList.append",
            "str",
            "chr",
            "print",
            "decoding_char",
            "decoding_char",
            "print",
            "print",
            "print",
            "devList.append",
            "str",
            "str",
            "chr",
            "str",
            "chr",
            "str",
            "str",
            "str",
            "str",
            "str",
            "str",
            "str",
            "str"
        ],
        "imports": [
            {
                "import_name": "sys",
                "from_name": null,
                "as_name": null,
                "source": "内置模块"
            },
            {
                "import_name": "*",
                "from_name": "PyQt5.QtWidgets",
                "as_name": null,
                "source": "未知模块"
            },
            {
                "import_name": "CameraOperation",
                "from_name": "CamOperation_class",
                "as_name": null,
                "source": "未知模块"
            },
            {
                "import_name": "*",
                "from_name": "MvCameraControl_class",
                "as_name": null,
                "source": "未知模块"
            },
            {
                "import_name": "*",
                "from_name": "MvErrorDefine_const",
                "as_name": null,
                "source": "未知模块"
            },
            {
                "import_name": "*",
                "from_name": "CameraParams_header",
                "as_name": null,
                "source": "未知模块"
            },
            {
                "import_name": "Ui_MainWindow",
                "from_name": "PyUICBasicDemo",
                "as_name": null,
                "source": "未知模块"
            },
            {
                "import_name": "ctypes",
                "from_name": null,
                "as_name": null,
                "source": "未知模块"
            }
        ]
    },
    {
        "file_path": "Python\\BasicDemo\\CamOperation_class.py",
        "used_functions": [
            "ctypes.c_long",
            "Async_raise",
            "inspect.isclass",
            "type",
            "ctypes.py_object",
            "ValueError",
            "chaDic.get",
            "threading.Lock",
            "print",
            "MV_FRAME_OUT",
            "memset",
            "file_path.encode",
            "MV_SAVE_IMAGE_TO_FILE_PARAM_EX",
            "cast",
            "ctypes.create_string_buffer",
            "file_path.encode",
            "MV_SAVE_IMAGE_TO_FILE_PARAM_EX",
            "cast",
            "ctypes.create_string_buffer",
            "SystemError",
            "chaDic.get",
            "str",
            "int",
            "MvCamera",
            "print",
            "c_bool",
            "print",
            "print",
            "MVCC_FLOATVALUE",
            "memset",
            "MVCC_FLOATVALUE",
            "memset",
            "MVCC_FLOATVALUE",
            "memset",
            "print",
            "time.sleep",
            "print",
            "byref",
            "sizeof",
            "MV_DISPLAY_FRAME_INFO",
            "memset",
            "int",
            "str",
            "POINTER",
            "str",
            "POINTER",
            "str",
            "cast",
            "print",
            "print",
            "random.randint",
            "threading.Thread",
            "Stop_thread",
            "Stop_thread",
            "byref",
            "sizeof",
            "byref",
            "sizeof",
            "byref",
            "sizeof",
            "float",
            "print",
            "float",
            "print",
            "float",
            "print",
            "print",
            "print",
            "byref",
            "sizeof",
            "POINTER",
            "int",
            "print",
            "byref",
            "int",
            "print",
            "To_hex_str",
            "To_hex_str",
            "To_hex_str",
            "To_hex_str"
        ],
        "imports": [
            {
                "import_name": "threading",
                "from_name": null,
                "as_name": null,
                "source": "未知模块"
            },
            {
                "import_name": "time",
                "from_name": null,
                "as_name": null,
                "source": "内置模块"
            },
            {
                "import_name": "sys",
                "from_name": null,
                "as_name": null,
                "source": "内置模块"
            },
            {
                "import_name": "inspect",
                "from_name": null,
                "as_name": null,
                "source": "未知模块"
            },
            {
                "import_name": "ctypes",
                "from_name": null,
                "as_name": null,
                "source": "未知模块"
            },
            {
                "import_name": "random",
                "from_name": null,
                "as_name": null,
                "source": "未知模块"
            },
            {
                "import_name": "*",
                "from_name": "ctypes",
                "as_name": null,
                "source": "未知模块"
            },
            {
                "import_name": "*",
                "from_name": "CameraParams_header",
                "as_name": null,
                "source": "未知模块"
            },
            {
                "import_name": "*",
                "from_name": "MvCameraControl_class",
                "as_name": null,
                "source": "未知模块"
            }
        ]
    },
    {
        "file_path": "Python\\BasicDemo\\PyUICBasicDemo.py",
        "used_functions": [
            "MainWindow.setObjectName",
            "MainWindow.resize",
            "QtWidgets.QWidget",
            "QtWidgets.QComboBox",
            "QtWidgets.QWidget",
            "QtWidgets.QGroupBox",
            "QtWidgets.QWidget",
            "QtWidgets.QGridLayout",
            "QtWidgets.QPushButton",
            "QtWidgets.QPushButton",
            "QtWidgets.QPushButton",
            "QtWidgets.QGroupBox",
            "QtWidgets.QWidget",
            "QtWidgets.QGridLayout",
            "QtWidgets.QPushButton",
            "QtWidgets.QRadioButton",
            "QtWidgets.QRadioButton",
            "QtWidgets.QPushButton",
            "QtWidgets.QPushButton",
            "QtWidgets.QPushButton",
            "QtWidgets.QGroupBox",
            "QtWidgets.QWidget",
            "QtWidgets.QGridLayout",
            "QtWidgets.QLabel",
            "QtWidgets.QLineEdit",
            "QtWidgets.QLabel",
            "QtWidgets.QLabel",
            "QtWidgets.QLineEdit",
            "QtWidgets.QPushButton",
            "QtWidgets.QPushButton",
            "QtWidgets.QLineEdit",
            "MainWindow.setCentralWidget",
            "QtWidgets.QStatusBar",
            "MainWindow.setStatusBar",
            "self.retranslateUi",
            "MainWindow.setWindowTitle",
            "QtCore.QRect",
            "QtCore.QRect",
            "QtCore.QRect",
            "QtCore.QRect",
            "QtCore.QRect",
            "QtCore.QRect",
            "QtCore.QRect",
            "QtCore.QRect",
            "_translate",
            "_translate",
            "_translate",
            "_translate",
            "_translate",
            "_translate",
            "_translate",
            "_translate",
            "_translate",
            "_translate",
            "_translate",
            "_translate",
            "_translate",
            "_translate",
            "_translate",
            "_translate",
            "_translate",
            "_translate",
            "_translate",
            "_translate",
            "_translate"
        ],
        "imports": [
            {
                "import_name": "QtCore",
                "from_name": "PyQt5",
                "as_name": null,
                "source": "第三方库"
            },
            {
                "import_name": "QtGui",
                "from_name": "PyQt5",
                "as_name": null,
                "source": "第三方库"
            },
            {
                "import_name": "QtWidgets",
                "from_name": "PyQt5",
                "as_name": null,
                "source": "第三方库"
            }
        ]
    },
    {
        "file_path": "Python\\BasicDemoByGenTL\\BasicDemoByGenTL.py",
        "used_functions": [
            "all.find",
            "MvCamera.MV_CC_Initialize",
            "MV_GENTL_DEV_INFO_LIST",
            "MV_GENTL_IF_INFO_LIST",
            "MvCamera",
            "QApplication",
            "QMainWindow",
            "Ui_MainWindow",
            "ui.setupUi",
            "mainWindow.show",
            "app.exec_",
            "close_device",
            "MvCamera.MV_CC_Finalize",
            "sys.exit",
            "len",
            "all.find",
            "chaDic.get",
            "TxtWrapBy",
            "QFileDialog.getOpenFileName",
            "MV_GENTL_IF_INFO_LIST",
            "MvCamera.MV_CC_EnumInterfacesByGenTL",
            "print",
            "range",
            "MV_GENTL_DEV_INFO_LIST",
            "MvCamera.MV_CC_EnumDevicesByGenTL",
            "print",
            "range",
            "CameraOperation",
            "obj_cam_operation.Open_device",
            "obj_cam_operation.Start_grabbing",
            "obj_cam_operation.Stop_grabbing",
            "enable_controls",
            "obj_cam_operation.Set_trigger_mode",
            "obj_cam_operation.Set_trigger_mode",
            "obj_cam_operation.Trigger_once",
            "obj_cam_operation.Save_Bmp",
            "obj_cam_operation.Get_parameter",
            "obj_cam_operation.Set_parameter",
            "chaDic.get",
            "str",
            "QMessageBox.warning",
            "QMessageBox.warning",
            "ifListTemp.append",
            "QMessageBox.warning",
            "QMessageBox.warning",
            "devListTemp.append",
            "QMessageBox.warning",
            "QMessageBox.warning",
            "QMessageBox.warning",
            "set_continue_mode",
            "get_param",
            "enable_controls",
            "QMessageBox.warning",
            "enable_controls",
            "QMessageBox.warning",
            "enable_controls",
            "obj_cam_operation.Close_device",
            "QMessageBox.warning",
            "QMessageBox.warning",
            "QMessageBox.warning",
            "QMessageBox.warning",
            "print",
            "QMessageBox.warning",
            "QMessageBox.warning",
            "str",
            "len",
            "ToHexStr",
            "cast",
            "ToHexStr",
            "cast",
            "ToHexStr",
            "ToHexStr",
            "ToHexStr",
            "str",
            "ToHexStr",
            "ToHexStr",
            "ToHexStr",
            "ToHexStr",
            "ToHexStr",
            "POINTER",
            "chr",
            "chr",
            "chr",
            "POINTER",
            "chr",
            "ToHexStr",
            "str",
            "str"
        ],
        "imports": [
            {
                "import_name": "os",
                "from_name": null,
                "as_name": null,
                "source": "未知模块"
            },
            {
                "import_name": "*",
                "from_name": "PyQt5.QtWidgets",
                "as_name": null,
                "source": "未知模块"
            },
            {
                "import_name": "CameraOperation",
                "from_name": "CamOperation_class",
                "as_name": null,
                "source": "未知模块"
            },
            {
                "import_name": "*",
                "from_name": "MvCameraControl_class",
                "as_name": null,
                "source": "未知模块"
            },
            {
                "import_name": "*",
                "from_name": "MvErrorDefine_const",
                "as_name": null,
                "source": "未知模块"
            },
            {
                "import_name": "*",
                "from_name": "CameraParams_header",
                "as_name": null,
                "source": "未知模块"
            },
            {
                "import_name": "Ui_MainWindow",
                "from_name": "PyUICBasicDemoByGenTL",
                "as_name": null,
                "source": "未知模块"
            }
        ]
    },
    {
        "file_path": "Python\\BasicDemoByGenTL\\CamOperation_class.py",
        "used_functions": [
            "ctypes.c_long",
            "Async_raise",
            "inspect.isclass",
            "type",
            "ctypes.py_object",
            "ValueError",
            "chaDic.get",
            "threading.Lock",
            "print",
            "MV_FRAME_OUT",
            "memset",
            "file_path.encode",
            "MV_SAVE_IMAGE_TO_FILE_PARAM_EX",
            "cast",
            "ctypes.create_string_buffer",
            "file_path.encode",
            "MV_SAVE_IMAGE_TO_FILE_PARAM_EX",
            "cast",
            "ctypes.create_string_buffer",
            "SystemError",
            "chaDic.get",
            "str",
            "int",
            "MvCamera",
            "print",
            "c_bool",
            "print",
            "print",
            "MVCC_FLOATVALUE",
            "memset",
            "MVCC_FLOATVALUE",
            "memset",
            "MVCC_FLOATVALUE",
            "memset",
            "print",
            "time.sleep",
            "print",
            "byref",
            "sizeof",
            "MV_DISPLAY_FRAME_INFO",
            "memset",
            "int",
            "str",
            "POINTER",
            "str",
            "POINTER",
            "str",
            "cast",
            "print",
            "print",
            "random.randint",
            "threading.Thread",
            "Stop_thread",
            "Stop_thread",
            "byref",
            "sizeof",
            "byref",
            "sizeof",
            "byref",
            "sizeof",
            "float",
            "print",
            "float",
            "print",
            "float",
            "print",
            "print",
            "print",
            "byref",
            "sizeof",
            "POINTER",
            "byref",
            "int",
            "To_hex_str",
            "To_hex_str",
            "To_hex_str",
            "To_hex_str"
        ],
        "imports": [
            {
                "import_name": "threading",
                "from_name": null,
                "as_name": null,
                "source": "未知模块"
            },
            {
                "import_name": "time",
                "from_name": null,
                "as_name": null,
                "source": "内置模块"
            },
            {
                "import_name": "sys",
                "from_name": null,
                "as_name": null,
                "source": "内置模块"
            },
            {
                "import_name": "inspect",
                "from_name": null,
                "as_name": null,
                "source": "未知模块"
            },
            {
                "import_name": "ctypes",
                "from_name": null,
                "as_name": null,
                "source": "未知模块"
            },
            {
                "import_name": "random",
                "from_name": null,
                "as_name": null,
                "source": "未知模块"
            },
            {
                "import_name": "*",
                "from_name": "ctypes",
                "as_name": null,
                "source": "未知模块"
            },
            {
                "import_name": "*",
                "from_name": "CameraParams_header",
                "as_name": null,
                "source": "未知模块"
            },
            {
                "import_name": "*",
                "from_name": "MvCameraControl_class",
                "as_name": null,
                "source": "未知模块"
            }
        ]
    },
    {
        "file_path": "Python\\BasicDemoByGenTL\\PyUICBasicDemoByGenTL.py",
        "used_functions": [
            "MainWindow.setObjectName",
            "MainWindow.resize",
            "QtWidgets.QWidget",
            "QtWidgets.QComboBox",
            "QtWidgets.QWidget",
            "QtWidgets.QGroupBox",
            "QtWidgets.QWidget",
            "QtWidgets.QGridLayout",
            "QtWidgets.QPushButton",
            "QtWidgets.QPushButton",
            "QtWidgets.QPushButton",
            "QtWidgets.QPushButton",
            "QtWidgets.QGroupBox",
            "QtWidgets.QWidget",
            "QtWidgets.QGridLayout",
            "QtWidgets.QPushButton",
            "QtWidgets.QRadioButton",
            "QtWidgets.QRadioButton",
            "QtWidgets.QPushButton",
            "QtWidgets.QPushButton",
            "QtWidgets.QPushButton",
            "QtWidgets.QGroupBox",
            "QtWidgets.QWidget",
            "QtWidgets.QGridLayout",
            "QtWidgets.QLabel",
            "QtWidgets.QLineEdit",
            "QtWidgets.QLabel",
            "QtWidgets.QLabel",
            "QtWidgets.QLineEdit",
            "QtWidgets.QPushButton",
            "QtWidgets.QPushButton",
            "QtWidgets.QLineEdit",
            "QtWidgets.QLabel",
            "QtWidgets.QLabel",
            "QtWidgets.QComboBox",
            "MainWindow.setCentralWidget",
            "QtWidgets.QStatusBar",
            "MainWindow.setStatusBar",
            "self.retranslateUi",
            "MainWindow.setWindowTitle",
            "QtCore.QRect",
            "QtCore.QRect",
            "QtCore.QRect",
            "QtCore.QRect",
            "QtCore.QRect",
            "QtCore.QRect",
            "QtCore.QRect",
            "QtCore.QRect",
            "QtCore.QRect",
            "QtCore.QRect",
            "QtCore.QRect",
            "_translate",
            "_translate",
            "_translate",
            "_translate",
            "_translate",
            "_translate",
            "_translate",
            "_translate",
            "_translate",
            "_translate",
            "_translate",
            "_translate",
            "_translate",
            "_translate",
            "_translate",
            "_translate",
            "_translate",
            "_translate",
            "_translate",
            "_translate",
            "_translate",
            "_translate",
            "_translate",
            "_translate"
        ],
        "imports": [
            {
                "import_name": "QtCore",
                "from_name": "PyQt5",
                "as_name": null,
                "source": "第三方库"
            },
            {
                "import_name": "QtGui",
                "from_name": "PyQt5",
                "as_name": null,
                "source": "第三方库"
            },
            {
                "import_name": "QtWidgets",
                "from_name": "PyQt5",
                "as_name": null,
                "source": "第三方库"
            }
        ]
    },
    {
        "file_path": "Python\\BasicDemoLineScan\\BasicDemoLineScanCamera.py",
        "used_functions": [
            "MvCamera.MV_CC_Initialize",
            "MV_CC_DEVICE_INFO_LIST",
            "MvCamera.MV_CC_EnumDevices",
            "print",
            "range",
            "input",
            "MvCamera",
            "cam.MV_CC_CreateHandle",
            "cam.MV_CC_OpenDevice",
            "cam.MV_CC_SetEnumValue",
            "cam.MV_CC_SetBoolValue",
            "cam.MV_CC_SetFloatValue",
            "cam.MV_CC_SetIntValue",
            "cam.MV_CC_SetBoolValue",
            "cam.MV_CC_SetEnumValueByString",
            "MVCC_INTVALUE",
            "memset",
            "cam.MV_CC_GetIntValue",
            "cam.MV_CC_StartGrabbing",
            "MV_FRAME_OUT",
            "memset",
            "cam.MV_CC_GetImageBuffer",
            "print",
            "msvcrt.getch",
            "cam.MV_CC_StopGrabbing",
            "cam.MV_CC_CloseDevice",
            "cam.MV_CC_DestroyHandle",
            "MvCamera.MV_CC_Finalize",
            "print",
            "sys.exit",
            "print",
            "sys.exit",
            "int",
            "print",
            "sys.exit",
            "cast",
            "print",
            "sys.exit",
            "print",
            "sys.exit",
            "cam.MV_CC_GetOptimalPacketSize",
            "print",
            "sys.exit",
            "print",
            "print",
            "print",
            "print",
            "print",
            "sys.exit",
            "byref",
            "sizeof",
            "print",
            "sys.exit",
            "print",
            "sys.exit",
            "byref",
            "sizeof",
            "print",
            "MV_CC_HB_DECODE_PARAM",
            "cam.MV_CC_HBDecode",
            "MV_SAVE_IMAGE_TO_FILE_PARAM_EX",
            "memset",
            "ctypes.create_string_buffer",
            "cam.MV_CC_SaveImageToFileEx",
            "cam.MV_CC_FreeImageBuffer",
            "print",
            "print",
            "sys.exit",
            "print",
            "sys.exit",
            "print",
            "sys.exit",
            "cast",
            "print",
            "print",
            "print",
            "print",
            "POINTER",
            "int",
            "cam.MV_CC_SetIntValue",
            "print",
            "print",
            "sys.exit",
            "print",
            "byref",
            "sizeof",
            "print",
            "sys.exit",
            "print",
            "POINTER",
            "print",
            "print",
            "print",
            "print",
            "int",
            "print",
            "chr",
            "chr",
            "print",
            "print",
            "print",
            "print",
            "chr",
            "chr",
            "chr",
            "print",
            "print",
            "print",
            "print",
            "chr",
            "chr",
            "chr",
            "print",
            "print",
            "print",
            "print",
            "chr",
            "chr",
            "chr",
            "chr",
            "chr",
            "chr"
        ],
        "imports": [
            {
                "import_name": "sys",
                "from_name": null,
                "as_name": null,
                "source": "内置模块"
            },
            {
                "import_name": "msvcrt",
                "from_name": null,
                "as_name": null,
                "source": "内置模块"
            },
            {
                "import_name": "ctypes",
                "from_name": null,
                "as_name": null,
                "source": "未知模块"
            },
            {
                "import_name": "*",
                "from_name": "MvCameraControl_class",
                "as_name": null,
                "source": "未知模块"
            }
        ]
    },
    {
        "file_path": "Python\\ConnectSpecCamera\\ConnectSpecCamera.py",
        "used_functions": [
            "MV_FRAME_OUT",
            "memset",
            "MvCamera.MV_CC_Initialize",
            "MV_CC_DEVICE_INFO",
            "MV_GIGE_DEVICE_INFO",
            "deviceIp.split",
            "netIp.split",
            "MvCamera",
            "cam.MV_CC_CreateHandle",
            "cam.MV_CC_OpenDevice",
            "cam.MV_CC_SetEnumValue",
            "cam.MV_CC_StartGrabbing",
            "print",
            "msvcrt.getch",
            "hThreadHandle.join",
            "cam.MV_CC_StopGrabbing",
            "cam.MV_CC_CloseDevice",
            "cam.MV_CC_DestroyHandle",
            "MvCamera.MV_CC_Finalize",
            "byref",
            "sizeof",
            "cam.MV_CC_GetImageBuffer",
            "input",
            "input",
            "raw_input",
            "raw_input",
            "int",
            "int",
            "print",
            "sys.exit",
            "print",
            "sys.exit",
            "cam.MV_CC_GetOptimalPacketSize",
            "print",
            "sys.exit",
            "print",
            "sys.exit",
            "threading.Thread",
            "hThreadHandle.start",
            "print",
            "sys.exit",
            "print",
            "sys.exit",
            "print",
            "sys.exit",
            "print",
            "cam.MV_CC_FreeImageBuffer",
            "print",
            "int",
            "cam.MV_CC_SetIntValue",
            "print",
            "print",
            "int",
            "int",
            "print",
            "int",
            "int",
            "int",
            "int"
        ],
        "imports": [
            {
                "import_name": "time",
                "from_name": null,
                "as_name": null,
                "source": "内置模块"
            },
            {
                "import_name": "sys",
                "from_name": null,
                "as_name": null,
                "source": "内置模块"
            },
            {
                "import_name": "threading",
                "from_name": null,
                "as_name": null,
                "source": "未知模块"
            },
            {
                "import_name": "msvcrt",
                "from_name": null,
                "as_name": null,
                "source": "内置模块"
            },
            {
                "import_name": "*",
                "from_name": "ctypes",
                "as_name": null,
                "source": "未知模块"
            },
            {
                "import_name": "*",
                "from_name": "MvCameraControl_class",
                "as_name": null,
                "source": "未知模块"
            }
        ]
    },
    {
        "file_path": "Python\\ConvertPixelType\\ConvertPixelType.py",
        "used_functions": [
            "MvCamera.MV_CC_Initialize",
            "MV_CC_DEVICE_INFO_LIST",
            "MvCamera.MV_CC_EnumDevices",
            "print",
            "range",
            "input",
            "MvCamera",
            "cam.MV_CC_CreateHandle",
            "cam.MV_CC_OpenDevice",
            "cam.MV_CC_SetEnumValue",
            "cam.MV_CC_StartGrabbing",
            "MV_FRAME_OUT",
            "memset",
            "cam.MV_CC_GetImageBuffer",
            "print",
            "print",
            "msvcrt.getch",
            "cam.MV_CC_StopGrabbing",
            "cam.MV_CC_CloseDevice",
            "cam.MV_CC_DestroyHandle",
            "MvCamera.MV_CC_Finalize",
            "print",
            "sys.exit",
            "print",
            "sys.exit",
            "int",
            "print",
            "sys.exit",
            "cast",
            "print",
            "sys.exit",
            "print",
            "sys.exit",
            "cam.MV_CC_GetOptimalPacketSize",
            "print",
            "sys.exit",
            "print",
            "sys.exit",
            "byref",
            "sizeof",
            "print",
            "MV_CC_PIXEL_CONVERT_PARAM_EX",
            "memset",
            "cam.MV_CC_ConvertPixelTypeEx",
            "cam.MV_CC_FreeImageBuffer",
            "open",
            "print",
            "print",
            "sys.exit",
            "print",
            "sys.exit",
            "print",
            "sys.exit",
            "cast",
            "print",
            "print",
            "print",
            "POINTER",
            "int",
            "cam.MV_CC_SetIntValue",
            "print",
            "byref",
            "sizeof",
            "print",
            "sys.exit",
            "file_path.encode",
            "file_open.write",
            "file_open.close",
            "POINTER",
            "print",
            "print",
            "print",
            "int",
            "print",
            "byref",
            "Exception",
            "chr",
            "print",
            "print",
            "print",
            "chr",
            "chr",
            "print",
            "print",
            "print",
            "chr",
            "chr",
            "print",
            "print",
            "print",
            "chr",
            "chr",
            "chr",
            "chr"
        ],
        "imports": [
            {
                "import_name": "sys",
                "from_name": null,
                "as_name": null,
                "source": "内置模块"
            },
            {
                "import_name": "copy",
                "from_name": null,
                "as_name": null,
                "source": "未知模块"
            },
            {
                "import_name": "msvcrt",
                "from_name": null,
                "as_name": null,
                "source": "内置模块"
            },
            {
                "import_name": "*",
                "from_name": "ctypes",
                "as_name": null,
                "source": "未知模块"
            },
            {
                "import_name": "*",
                "from_name": "MvCameraControl_class",
                "as_name": null,
                "source": "未知模块"
            }
        ]
    },
    {
        "file_path": "Python\\Events\\Events.py",
        "used_functions": [
            "POINTER",
            "winfun_ctype",
            "EventInfoCallBack",
            "MvCamera.MV_CC_Initialize",
            "MV_CC_DEVICE_INFO_LIST",
            "MvCamera.MV_CC_EnumDevices",
            "print",
            "range",
            "input",
            "MvCamera",
            "cam.MV_CC_CreateHandle",
            "cam.MV_CC_OpenDevice",
            "cam.MV_CC_SetEnumValue",
            "cam.MV_CC_EventNotificationOn",
            "cam.MV_CC_RegisterEventCallBackEx",
            "cam.MV_CC_StartGrabbing",
            "print",
            "msvcrt.getch",
            "cam.MV_CC_StopGrabbing",
            "cam.MV_CC_CloseDevice",
            "cam.MV_CC_DestroyHandle",
            "MvCamera.MV_CC_Finalize",
            "cast",
            "print",
            "print",
            "sys.exit",
            "print",
            "sys.exit",
            "int",
            "print",
            "sys.exit",
            "cast",
            "print",
            "sys.exit",
            "print",
            "sys.exit",
            "cam.MV_CC_GetOptimalPacketSize",
            "print",
            "sys.exit",
            "print",
            "sys.exit",
            "print",
            "sys.exit",
            "print",
            "sys.exit",
            "print",
            "sys.exit",
            "print",
            "sys.exit",
            "print",
            "sys.exit",
            "POINTER",
            "cast",
            "print",
            "print",
            "print",
            "POINTER",
            "int",
            "cam.MV_CC_SetIntValue",
            "print",
            "POINTER",
            "print",
            "print",
            "print",
            "int",
            "print",
            "chr",
            "print",
            "print",
            "print",
            "chr",
            "chr",
            "print",
            "print",
            "print",
            "chr",
            "chr",
            "print",
            "print",
            "print",
            "chr",
            "chr",
            "chr",
            "chr"
        ],
        "imports": [
            {
                "import_name": "sys",
                "from_name": null,
                "as_name": null,
                "source": "内置模块"
            },
            {
                "import_name": "copy",
                "from_name": null,
                "as_name": null,
                "source": "未知模块"
            },
            {
                "import_name": "msvcrt",
                "from_name": null,
                "as_name": null,
                "source": "内置模块"
            },
            {
                "import_name": "*",
                "from_name": "ctypes",
                "as_name": null,
                "source": "未知模块"
            },
            {
                "import_name": "*",
                "from_name": "MvCameraControl_class",
                "as_name": null,
                "source": "未知模块"
            },
            {
                "import_name": "WINFUNCTYPE",
                "from_name": "ctypes",
                "as_name": null,
                "source": "未知模块"
            }
        ]
    },
    {
        "file_path": "Python\\Events_Interface\\Events_Interface.py",
        "used_functions": [
            "POINTER",
            "winfun_ctype",
            "EventInfoCallBack",
            "POINTER",
            "POINTER",
            "winfun_ctype",
            "FrameInfoCallBack",
            "range",
            "range",
            "cast",
            "print",
            "cast",
            "print",
            "print",
            "print",
            "print",
            "print",
            "MvCamera.MV_CC_Initialize",
            "MV_INTERFACE_INFO_LIST",
            "MvCamera.MV_CC_EnumInterfaces",
            "print",
            "print_interface_info",
            "input",
            "MvCamera",
            "MvCamera",
            "interface_instance.MV_CC_CreateInterface",
            "interface_instance.MV_CC_OpenInterface",
            "interface_instance.MV_CC_EventNotificationOn",
            "interface_instance.MV_CC_RegisterEventCallBackEx",
            "MV_CC_DEVICE_INFO_LIST",
            "interface_instance.MV_CC_EnumDevicesByInterface",
            "print_devices_info",
            "input",
            "cam_instance.MV_CC_CreateHandle",
            "cam_instance.MV_CC_OpenDevice",
            "cam_instance.MV_CC_RegisterImageCallBackEx",
            "cam_instance.MV_CC_StartGrabbing",
            "print",
            "msvcrt.getch",
            "cam_instance.MV_CC_StopGrabbing",
            "cam_instance.MV_CC_CloseDevice",
            "cam_instance.MV_CC_DestroyHandle",
            "interface_instance.MV_CC_CloseInterface",
            "interface_instance.MV_CC_DestroyInterface",
            "MvCamera.MV_CC_Finalize",
            "POINTER",
            "POINTER",
            "cast",
            "cast",
            "print",
            "print",
            "print",
            "print",
            "sys.exit",
            "print",
            "sys.exit",
            "int",
            "print",
            "sys.exit",
            "cast",
            "Exception",
            "Exception",
            "print",
            "Exception",
            "Exception",
            "Exception",
            "Exception",
            "int",
            "Exception",
            "cast",
            "Exception",
            "Exception",
            "cam_instance.MV_CC_GetOptimalPacketSize",
            "Exception",
            "Exception",
            "Exception",
            "Exception",
            "print",
            "cam_instance.MV_CC_CloseDevice",
            "cam_instance.MV_CC_DestroyHandle",
            "interface_instance.MV_CC_CloseInterface",
            "interface_instance.MV_CC_DestroyInterface",
            "POINTER",
            "chr",
            "chr",
            "chr",
            "chr",
            "POINTER",
            "print",
            "print",
            "print",
            "POINTER",
            "POINTER",
            "int",
            "cam_instance.MV_CC_SetIntValue",
            "print",
            "chr",
            "print",
            "print",
            "print",
            "int",
            "int",
            "print",
            "chr",
            "chr",
            "print",
            "print",
            "print",
            "chr",
            "chr",
            "print",
            "print",
            "print",
            "chr",
            "chr",
            "chr",
            "chr"
        ],
        "imports": [
            {
                "import_name": "sys",
                "from_name": null,
                "as_name": null,
                "source": "内置模块"
            },
            {
                "import_name": "msvcrt",
                "from_name": null,
                "as_name": null,
                "source": "内置模块"
            },
            {
                "import_name": "*",
                "from_name": "ctypes",
                "as_name": null,
                "source": "未知模块"
            },
            {
                "import_name": "*",
                "from_name": "MvCameraControl_class",
                "as_name": null,
                "source": "未知模块"
            }
        ]
    },
    {
        "file_path": "Python\\GrabImage\\GrabImage.py",
        "used_functions": [
            "MV_FRAME_OUT",
            "memset",
            "MvCamera.MV_CC_Initialize",
            "MV_CC_DEVICE_INFO_LIST",
            "MvCamera.MV_CC_EnumDevices",
            "print",
            "range",
            "input",
            "MvCamera",
            "cam.MV_CC_CreateHandle",
            "cam.MV_CC_OpenDevice",
            "c_bool",
            "cam.MV_CC_GetBoolValue",
            "cam.MV_CC_SetEnumValue",
            "cam.MV_CC_StartGrabbing",
            "print",
            "msvcrt.getch",
            "hThreadHandle.join",
            "cam.MV_CC_StopGrabbing",
            "cam.MV_CC_CloseDevice",
            "cam.MV_CC_DestroyHandle",
            "MvCamera.MV_CC_Finalize",
            "byref",
            "sizeof",
            "cam.MV_CC_GetImageBuffer",
            "print",
            "sys.exit",
            "print",
            "sys.exit",
            "int",
            "print",
            "sys.exit",
            "cast",
            "print",
            "sys.exit",
            "print",
            "sys.exit",
            "cam.MV_CC_GetOptimalPacketSize",
            "print",
            "print",
            "sys.exit",
            "print",
            "sys.exit",
            "threading.Thread",
            "hThreadHandle.start",
            "print",
            "sys.exit",
            "print",
            "sys.exit",
            "print",
            "sys.exit",
            "print",
            "cam.MV_CC_FreeImageBuffer",
            "print",
            "cast",
            "print",
            "print",
            "print",
            "POINTER",
            "int",
            "cam.MV_CC_SetIntValue",
            "print",
            "print",
            "POINTER",
            "print",
            "print",
            "print",
            "int",
            "print",
            "chr",
            "print",
            "print",
            "print",
            "chr",
            "chr",
            "print",
            "print",
            "print",
            "chr",
            "chr",
            "print",
            "print",
            "print",
            "chr",
            "chr",
            "chr",
            "chr"
        ],
        "imports": [
            {
                "import_name": "sys",
                "from_name": null,
                "as_name": null,
                "source": "内置模块"
            },
            {
                "import_name": "threading",
                "from_name": null,
                "as_name": null,
                "source": "未知模块"
            },
            {
                "import_name": "msvcrt",
                "from_name": null,
                "as_name": null,
                "source": "内置模块"
            },
            {
                "import_name": "*",
                "from_name": "ctypes",
                "as_name": null,
                "source": "未知模块"
            },
            {
                "import_name": "*",
                "from_name": "hik_vision.Python.MvImport.MvCameraControl_class",
                "as_name": null,
                "source": "未知模块"
            }
        ]
    },
    {
        "file_path": "Python\\Grab_Callback\\Grab_Callback.py",
        "used_functions": [
            "POINTER",
            "POINTER",
            "winfun_ctype",
            "FrameInfoCallBack",
            "MvCamera.MV_CC_Initialize",
            "MV_CC_DEVICE_INFO_LIST",
            "MvCamera.MV_CC_EnumDevices",
            "print",
            "range",
            "input",
            "MvCamera",
            "cam.MV_CC_CreateHandle",
            "cam.MV_CC_OpenDevice",
            "cam.MV_CC_SetEnumValue",
            "cam.MV_CC_RegisterImageCallBackEx",
            "cam.MV_CC_StartGrabbing",
            "print",
            "msvcrt.getch",
            "cam.MV_CC_StopGrabbing",
            "cam.MV_CC_CloseDevice",
            "cam.MV_CC_DestroyHandle",
            "MvCamera.MV_CC_Finalize",
            "cast",
            "print",
            "print",
            "sys.exit",
            "print",
            "sys.exit",
            "int",
            "print",
            "sys.exit",
            "cast",
            "print",
            "sys.exit",
            "print",
            "sys.exit",
            "cam.MV_CC_GetOptimalPacketSize",
            "print",
            "sys.exit",
            "print",
            "sys.exit",
            "print",
            "sys.exit",
            "print",
            "sys.exit",
            "print",
            "sys.exit",
            "print",
            "sys.exit",
            "POINTER",
            "cast",
            "print",
            "print",
            "print",
            "POINTER",
            "int",
            "cam.MV_CC_SetIntValue",
            "print",
            "POINTER",
            "print",
            "print",
            "print",
            "int",
            "print",
            "chr",
            "print",
            "print",
            "print",
            "chr",
            "chr",
            "print",
            "print",
            "print",
            "chr",
            "chr",
            "print",
            "print",
            "print",
            "chr",
            "chr",
            "chr",
            "chr"
        ],
        "imports": [
            {
                "import_name": "sys",
                "from_name": null,
                "as_name": null,
                "source": "内置模块"
            },
            {
                "import_name": "copy",
                "from_name": null,
                "as_name": null,
                "source": "未知模块"
            },
            {
                "import_name": "msvcrt",
                "from_name": null,
                "as_name": null,
                "source": "内置模块"
            },
            {
                "import_name": "*",
                "from_name": "ctypes",
                "as_name": null,
                "source": "未知模块"
            },
            {
                "import_name": "*",
                "from_name": "MvCameraControl_class",
                "as_name": null,
                "source": "未知模块"
            }
        ]
    },
    {
        "file_path": "Python\\Grab_LineStart\\Grab_LineStart.py",
        "used_functions": [
            "MV_FRAME_OUT",
            "memset",
            "MvCamera.MV_CC_Initialize",
            "MV_CC_DEVICE_INFO_LIST",
            "MvCamera.MV_CC_EnumDevices",
            "print",
            "range",
            "input",
            "MvCamera",
            "cam.MV_CC_CreateHandle",
            "cam.MV_CC_OpenDevice",
            "c_bool",
            "cam.MV_CC_GetBoolValue",
            "cam.MV_CC_SetEnumValueByString",
            "cam.MV_CC_SetEnumValue",
            "cam.MV_CC_SetEnumValue",
            "cam.MV_CC_StartGrabbing",
            "print",
            "msvcrt.getch",
            "thread_handle.join",
            "cam.MV_CC_StopGrabbing",
            "cam.MV_CC_CloseDevice",
            "cam.MV_CC_DestroyHandle",
            "MvCamera.MV_CC_Finalize",
            "byref",
            "sizeof",
            "cam.MV_CC_GetImageBuffer",
            "print",
            "sys.exit",
            "print",
            "sys.exit",
            "int",
            "print",
            "sys.exit",
            "cast",
            "print",
            "sys.exit",
            "print",
            "sys.exit",
            "cam.MV_CC_GetOptimalPacketSize",
            "print",
            "print",
            "sys.exit",
            "print",
            "sys.exit",
            "print",
            "sys.exit",
            "print",
            "sys.exit",
            "threading.Thread",
            "thread_handle.start",
            "print",
            "sys.exit",
            "print",
            "sys.exit",
            "print",
            "sys.exit",
            "print",
            "cam.MV_CC_FreeImageBuffer",
            "print",
            "cast",
            "print",
            "print",
            "print",
            "POINTER",
            "int",
            "cam.MV_CC_SetIntValue",
            "print",
            "print",
            "POINTER",
            "print",
            "print",
            "print",
            "int",
            "print",
            "chr",
            "print",
            "print",
            "print",
            "chr",
            "chr",
            "print",
            "print",
            "print",
            "chr",
            "chr",
            "print",
            "print",
            "print",
            "chr",
            "chr",
            "chr",
            "chr"
        ],
        "imports": [
            {
                "import_name": "sys",
                "from_name": null,
                "as_name": null,
                "source": "内置模块"
            },
            {
                "import_name": "threading",
                "from_name": null,
                "as_name": null,
                "source": "未知模块"
            },
            {
                "import_name": "msvcrt",
                "from_name": null,
                "as_name": null,
                "source": "内置模块"
            },
            {
                "import_name": "*",
                "from_name": "MvCameraControl_class",
                "as_name": null,
                "source": "未知模块"
            }
        ]
    },
    {
        "file_path": "Python\\HighBandwidthDecode\\HighBandwidthDecode.py",
        "used_functions": [
            "MvCamera.MV_CC_Initialize",
            "MV_CC_DEVICE_INFO_LIST",
            "MvCamera.MV_CC_EnumDevices",
            "print",
            "range",
            "input",
            "MvCamera",
            "cam.MV_CC_CreateHandle",
            "cam.MV_CC_OpenDevice",
            "c_bool",
            "cam.MV_CC_GetBoolValue",
            "cam.MV_CC_SetEnumValue",
            "MVCC_INTVALUE",
            "memset",
            "cam.MV_CC_GetIntValue",
            "cam.MV_CC_StartGrabbing",
            "MV_FRAME_OUT",
            "MV_CC_HB_DECODE_PARAM",
            "memset",
            "range",
            "print",
            "msvcrt.getch",
            "cam.MV_CC_StopGrabbing",
            "cam.MV_CC_CloseDevice",
            "cam.MV_CC_DestroyHandle",
            "MvCamera.MV_CC_Finalize",
            "print",
            "sys.exit",
            "print",
            "sys.exit",
            "int",
            "print",
            "sys.exit",
            "cast",
            "print",
            "sys.exit",
            "print",
            "sys.exit",
            "cam.MV_CC_GetOptimalPacketSize",
            "print",
            "print",
            "sys.exit",
            "byref",
            "sizeof",
            "print",
            "sys.exit",
            "print",
            "sys.exit",
            "byref",
            "sizeof",
            "cam.MV_CC_GetImageBuffer",
            "print",
            "sys.exit",
            "print",
            "sys.exit",
            "print",
            "sys.exit",
            "cast",
            "print",
            "print",
            "print",
            "POINTER",
            "int",
            "cam.MV_CC_SetIntValue",
            "print",
            "print",
            "cam.MV_CC_HBDecode",
            "file_path.encode",
            "MV_SAVE_IMAGE_TO_FILE_PARAM_EX",
            "ctypes.create_string_buffer",
            "cam.MV_CC_SaveImageToFileEx",
            "cam.MV_CC_FreeImageBuffer",
            "print",
            "POINTER",
            "print",
            "print",
            "print",
            "int",
            "print",
            "print",
            "cam.MV_CC_FreeImageBuffer",
            "print",
            "cam.MV_CC_FreeImageBuffer",
            "print",
            "print",
            "chr",
            "print",
            "print",
            "print",
            "chr",
            "chr",
            "print",
            "print",
            "print",
            "chr",
            "chr",
            "print",
            "print",
            "print",
            "chr",
            "chr",
            "chr",
            "chr"
        ],
        "imports": [
            {
                "import_name": "sys",
                "from_name": null,
                "as_name": null,
                "source": "内置模块"
            },
            {
                "import_name": "ctypes",
                "from_name": null,
                "as_name": null,
                "source": "未知模块"
            },
            {
                "import_name": "msvcrt",
                "from_name": null,
                "as_name": null,
                "source": "内置模块"
            },
            {
                "import_name": "*",
                "from_name": "ctypes",
                "as_name": null,
                "source": "未知模块"
            },
            {
                "import_name": "*",
                "from_name": "MvCameraControl_class",
                "as_name": null,
                "source": "未知模块"
            }
        ]
    },
    {
        "file_path": "Python\\ImageSave\\ImageSave.py",
        "used_functions": [
            "file_path.encode",
            "MV_SAVE_IMAGE_TO_FILE_PARAM_EX",
            "create_string_buffer",
            "cam_instance.MV_CC_SaveImageToFileEx",
            "MV_CC_HB_DECODE_PARAM",
            "memset",
            "MVCC_INTVALUE",
            "memset",
            "cam_instance.MV_CC_GetIntValue",
            "cam.MV_CC_HBDecode",
            "file_open.close",
            "MvCamera.MV_CC_Initialize",
            "MV_CC_DEVICE_INFO_LIST",
            "MvCamera.MV_CC_EnumDevices",
            "print",
            "range",
            "input",
            "input",
            "MvCamera",
            "cam.MV_CC_CreateHandle",
            "cam.MV_CC_OpenDevice",
            "cam.MV_CC_SetEnumValue",
            "cam.MV_CC_StartGrabbing",
            "MV_FRAME_OUT",
            "memset",
            "cam.MV_CC_GetImageBuffer",
            "cam.MV_CC_StopGrabbing",
            "cam.MV_CC_CloseDevice",
            "cam.MV_CC_DestroyHandle",
            "MvCamera.MV_CC_Finalize",
            "byref",
            "sizeof",
            "byref",
            "sizeof",
            "print",
            "print",
            "file_open.close",
            "open",
            "memmove",
            "file_open.write",
            "print",
            "sys.exit",
            "print",
            "sys.exit",
            "int",
            "print",
            "sys.exit",
            "int",
            "print",
            "sys.exit",
            "cast",
            "Exception",
            "Exception",
            "cam.MV_CC_GetOptimalPacketSize",
            "Exception",
            "Exception",
            "byref",
            "sizeof",
            "print",
            "cam.MV_CC_FreeImageBuffer",
            "Exception",
            "Exception",
            "Exception",
            "print",
            "cam.MV_CC_CloseDevice",
            "cam.MV_CC_DestroyHandle",
            "open",
            "memmove",
            "file_open.write",
            "file_path.encode",
            "byref",
            "file_open.close",
            "print",
            "cast",
            "print",
            "print",
            "print",
            "POINTER",
            "int",
            "cam.MV_CC_SetIntValue",
            "print",
            "int",
            "save_raw",
            "save_non_raw_image",
            "cam.MV_CC_FreeImageBuffer",
            "Exception",
            "print",
            "file_path.encode",
            "byref",
            "file_open.close",
            "print",
            "POINTER",
            "print",
            "print",
            "print",
            "int",
            "print",
            "int",
            "chr",
            "print",
            "print",
            "print",
            "chr",
            "chr",
            "print",
            "print",
            "print",
            "chr",
            "chr",
            "print",
            "print",
            "print",
            "chr",
            "chr",
            "chr",
            "chr"
        ],
        "imports": [
            {
                "import_name": "sys",
                "from_name": null,
                "as_name": null,
                "source": "内置模块"
            },
            {
                "import_name": "*",
                "from_name": "ctypes",
                "as_name": null,
                "source": "未知模块"
            },
            {
                "import_name": "*",
                "from_name": "MvCameraControl_class",
                "as_name": null,
                "source": "未知模块"
            }
        ]
    },
    {
        "file_path": "Python\\InterfaceAndDevice\\InterfaceAndDevice.py",
        "used_functions": [
            "POINTER",
            "POINTER",
            "winfun_ctype",
            "FrameInfoCallBack",
            "range",
            "range",
            "cast",
            "print",
            "print",
            "print",
            "print",
            "print",
            "print",
            "MvCamera.MV_CC_Initialize",
            "MV_INTERFACE_INFO_LIST",
            "MvCamera.MV_CC_EnumInterfaces",
            "print",
            "print_interface_info",
            "input",
            "MvCamera",
            "MvCamera",
            "interface_instance.MV_CC_CreateInterface",
            "interface_instance.MV_CC_OpenInterface",
            "MV_CC_DEVICE_INFO_LIST",
            "interface_instance.MV_CC_EnumDevicesByInterface",
            "print_devices_info",
            "input",
            "cam_instance.MV_CC_CreateHandle",
            "cam_instance.MV_CC_OpenDevice",
            "cam_instance.MV_CC_SetEnumValue",
            "cam_instance.MV_CC_RegisterImageCallBackEx",
            "cam_instance.MV_CC_StartGrabbing",
            "print",
            "msvcrt.getch",
            "cam_instance.MV_CC_StopGrabbing",
            "cam_instance.MV_CC_CloseDevice",
            "cam_instance.MV_CC_DestroyHandle",
            "interface_instance.MV_CC_CloseInterface",
            "interface_instance.MV_CC_DestroyInterface",
            "MvCamera.MV_CC_Finalize",
            "POINTER",
            "cast",
            "print",
            "print",
            "print",
            "cast",
            "print",
            "sys.exit",
            "print",
            "sys.exit",
            "int",
            "print",
            "sys.exit",
            "cast",
            "Exception",
            "Exception",
            "print",
            "Exception",
            "Exception",
            "int",
            "Exception",
            "cast",
            "Exception",
            "Exception",
            "cam_instance.MV_CC_GetOptimalPacketSize",
            "Exception",
            "Exception",
            "Exception",
            "Exception",
            "Exception",
            "print",
            "cam_instance.MV_CC_CloseDevice",
            "cam_instance.MV_CC_DestroyHandle",
            "interface_instance.MV_CC_CloseInterface",
            "interface_instance.MV_CC_DestroyInterface",
            "POINTER",
            "print",
            "print",
            "print",
            "POINTER",
            "chr",
            "chr",
            "chr",
            "chr",
            "POINTER",
            "POINTER",
            "int",
            "cam_instance.MV_CC_SetIntValue",
            "print",
            "chr",
            "print",
            "print",
            "print",
            "int",
            "int",
            "print",
            "chr",
            "chr",
            "print",
            "print",
            "print",
            "chr",
            "chr",
            "print",
            "print",
            "print",
            "chr",
            "chr",
            "chr",
            "chr"
        ],
        "imports": [
            {
                "import_name": "sys",
                "from_name": null,
                "as_name": null,
                "source": "内置模块"
            },
            {
                "import_name": "msvcrt",
                "from_name": null,
                "as_name": null,
                "source": "内置模块"
            },
            {
                "import_name": "*",
                "from_name": "ctypes",
                "as_name": null,
                "source": "未知模块"
            },
            {
                "import_name": "*",
                "from_name": "MvCameraControl_class",
                "as_name": null,
                "source": "未知模块"
            }
        ]
    },
    {
        "file_path": "Python\\InterfaceDemo\\InterfaceDemo.py",
        "used_functions": [
            "MvCamera.MV_CC_Initialize",
            "MV_INTERFACE_INFO_LIST",
            "MvCamera.MV_CC_EnumInterfaces",
            "print",
            "range",
            "input",
            "MvCamera",
            "cam.MV_CC_CreateInterface",
            "cam.MV_CC_OpenInterface",
            "MVCC_ENUMVALUE",
            "cam.MV_CC_GetEnumValue",
            "cam.MV_CC_SetEnumValue",
            "cam.MV_CC_CloseInterface",
            "cam.MV_CC_DestroyInterface",
            "print",
            "msvcrt.getch",
            "MvCamera.MV_CC_Finalize",
            "print",
            "sys.exit",
            "print",
            "sys.exit",
            "print",
            "print",
            "print",
            "print",
            "print",
            "int",
            "print",
            "sys.exit",
            "cast",
            "print",
            "sys.exit",
            "print",
            "sys.exit",
            "print",
            "print",
            "print",
            "sys.exit",
            "print",
            "print",
            "sys.exit",
            "print",
            "print",
            "sys.exit",
            "cast",
            "POINTER",
            "POINTER",
            "chr",
            "chr",
            "chr",
            "chr",
            "int"
        ],
        "imports": [
            {
                "import_name": "sys",
                "from_name": null,
                "as_name": null,
                "source": "内置模块"
            },
            {
                "import_name": "threading",
                "from_name": null,
                "as_name": null,
                "source": "未知模块"
            },
            {
                "import_name": "msvcrt",
                "from_name": null,
                "as_name": null,
                "source": "内置模块"
            },
            {
                "import_name": "*",
                "from_name": "ctypes",
                "as_name": null,
                "source": "未知模块"
            },
            {
                "import_name": "*",
                "from_name": "MvCameraControl_class",
                "as_name": null,
                "source": "未知模块"
            }
        ]
    },
    {
        "file_path": "Python\\MultiCast\\MultiCast.py",
        "used_functions": [
            "MV_FRAME_OUT",
            "memset",
            "MvCamera.MV_CC_Initialize",
            "MV_CC_DEVICE_INFO_LIST",
            "MvCamera.MV_CC_EnumDevices",
            "print",
            "range",
            "input",
            "MvCamera",
            "cam.MV_CC_CreateHandle",
            "print",
            "msvcrt.getch",
            "bytes.decode",
            "strIp.split",
            "print",
            "MV_TRANSMISSION_TYPE",
            "memset",
            "cam.MV_GIGE_SetTransmissionType",
            "cam.MV_CC_StartGrabbing",
            "print",
            "msvcrt.getch",
            "hThreadHandle.join",
            "cam.MV_CC_StopGrabbing",
            "cam.MV_CC_CloseDevice",
            "cam.MV_CC_DestroyHandle",
            "MvCamera.MV_CC_Finalize",
            "byref",
            "sizeof",
            "cam.MV_CC_GetImageBuffer",
            "print",
            "sys.exit",
            "print",
            "sys.exit",
            "print",
            "print",
            "print",
            "int",
            "print",
            "sys.exit",
            "cast",
            "print",
            "sys.exit",
            "cam.MV_CC_OpenDevice",
            "cam.MV_CC_OpenDevice",
            "cam.MV_CC_GetOptimalPacketSize",
            "int",
            "byref",
            "sizeof",
            "print",
            "print",
            "sys.exit",
            "threading.Thread",
            "hThreadHandle.start",
            "print",
            "sys.exit",
            "print",
            "sys.exit",
            "print",
            "sys.exit",
            "print",
            "cam.MV_CC_FreeImageBuffer",
            "print",
            "cast",
            "POINTER",
            "print",
            "sys.exit",
            "print",
            "sys.exit",
            "print",
            "sys.exit",
            "int",
            "cam.MV_CC_SetIntValue",
            "print",
            "print",
            "POINTER",
            "chr",
            "int",
            "print",
            "int",
            "int",
            "int"
        ],
        "imports": [
            {
                "import_name": "sys",
                "from_name": null,
                "as_name": null,
                "source": "内置模块"
            },
            {
                "import_name": "threading",
                "from_name": null,
                "as_name": null,
                "source": "未知模块"
            },
            {
                "import_name": "msvcrt",
                "from_name": null,
                "as_name": null,
                "source": "内置模块"
            },
            {
                "import_name": "*",
                "from_name": "ctypes",
                "as_name": null,
                "source": "未知模块"
            },
            {
                "import_name": "*",
                "from_name": "MvCameraControl_class",
                "as_name": null,
                "source": "未知模块"
            }
        ]
    },
    {
        "file_path": "Python\\MultiLightCtrl_ImageStitching\\MultiLightCtrl_ImageStitching.py",
        "used_functions": [
            "range",
            "MvCamera.MV_CC_Initialize",
            "MV_CC_DEVICE_INFO_LIST",
            "MvCamera.MV_CC_EnumDevices",
            "print",
            "print_devices_info",
            "input",
            "MvCamera",
            "cam.MV_CC_CreateHandle",
            "cam.MV_CC_OpenDevice",
            "cam.MV_CC_SetEnumValue",
            "cam.MV_CC_SetEnumValue",
            "cam.MV_CC_StartGrabbing",
            "MV_FRAME_OUT",
            "memset",
            "MV_CC_HB_DECODE_PARAM",
            "memset",
            "MV_RECONSTRUCT_IMAGE_PARAM",
            "memset",
            "cam.MV_CC_GetImageBuffer",
            "cam.MV_CC_StopGrabbing",
            "cam.MV_CC_CloseDevice",
            "cam.MV_CC_DestroyHandle",
            "MvCamera.MV_CC_Finalize",
            "cast",
            "print",
            "print",
            "print",
            "print",
            "sys.exit",
            "print",
            "sys.exit",
            "int",
            "print",
            "sys.exit",
            "cast",
            "Exception",
            "Exception",
            "cam.MV_CC_GetOptimalPacketSize",
            "Exception",
            "Exception",
            "byref",
            "sizeof",
            "byref",
            "sizeof",
            "byref",
            "sizeof",
            "print",
            "int",
            "range",
            "cam.MV_CC_ReconstructImage",
            "file_name.encode",
            "MV_SAVE_IMAGE_TO_FILE_PARAM_EX",
            "create_string_buffer",
            "cam.MV_CC_SaveImageToFileEx",
            "cam.MV_CC_FreeImageBuffer",
            "Exception",
            "Exception",
            "Exception",
            "print",
            "cam.MV_CC_CloseDevice",
            "cam.MV_CC_DestroyHandle",
            "POINTER",
            "print",
            "print",
            "print",
            "POINTER",
            "int",
            "cam.MV_CC_SetIntValue",
            "print",
            "MVCC_INTVALUE",
            "memset",
            "cam.MV_CC_GetIntValue",
            "cam.MV_CC_HBDecode",
            "dst_buffer_list.append",
            "cam.MV_CC_FreeImageBuffer",
            "Exception",
            "print",
            "print",
            "print",
            "chr",
            "print",
            "print",
            "print",
            "int",
            "print",
            "byref",
            "sizeof",
            "Exception",
            "cam.MV_CC_FreeImageBuffer",
            "Exception",
            "chr",
            "chr",
            "print",
            "print",
            "print",
            "chr",
            "chr",
            "print",
            "print",
            "print",
            "chr",
            "chr",
            "chr",
            "chr"
        ],
        "imports": [
            {
                "import_name": "sys",
                "from_name": null,
                "as_name": null,
                "source": "内置模块"
            },
            {
                "import_name": "*",
                "from_name": "ctypes",
                "as_name": null,
                "source": "未知模块"
            },
            {
                "import_name": "*",
                "from_name": "MvCameraControl_class",
                "as_name": null,
                "source": "未知模块"
            }
        ]
    },
    {
        "file_path": "Python\\MultipleCameras\\CamOperation_class.py",
        "used_functions": [
            "MV_FRAME_OUT_INFO_EX",
            "threading.Lock",
            "MV_FRAME_OUT",
            "memset",
            "file_path.encode",
            "MV_SAVE_IMAGE_TO_FILE_PARAM_EX",
            "cast",
            "ctypes.create_string_buffer",
            "chaDic.get",
            "int",
            "MvCamera",
            "c_bool",
            "print",
            "time.sleep",
            "time.sleep",
            "byref",
            "sizeof",
            "exit_flag.is_set",
            "POINTER",
            "chaDic.get",
            "str",
            "cast",
            "print",
            "print",
            "threading.Event",
            "threading.Thread",
            "float",
            "print",
            "float",
            "print",
            "float",
            "MV_DISPLAY_FRAME_INFO",
            "memset",
            "int",
            "print",
            "str",
            "str",
            "POINTER",
            "int",
            "print",
            "print",
            "byref",
            "byref",
            "sizeof",
            "byref",
            "byref",
            "sizeof",
            "int",
            "print",
            "str",
            "self.to_hex_str",
            "self.to_hex_str",
            "self.to_hex_str",
            "str",
            "str"
        ],
        "imports": [
            {
                "import_name": "threading",
                "from_name": null,
                "as_name": null,
                "source": "未知模块"
            },
            {
                "import_name": "time",
                "from_name": null,
                "as_name": null,
                "source": "内置模块"
            },
            {
                "import_name": "sys",
                "from_name": null,
                "as_name": null,
                "source": "内置模块"
            },
            {
                "import_name": "ctypes",
                "from_name": null,
                "as_name": null,
                "source": "未知模块"
            },
            {
                "import_name": "*",
                "from_name": "ctypes",
                "as_name": null,
                "source": "未知模块"
            },
            {
                "import_name": "*",
                "from_name": "MvCameraControl_class",
                "as_name": null,
                "source": "未知模块"
            }
        ]
    },
    {
        "file_path": "Python\\MultipleCameras\\MultipleCameras.py",
        "used_functions": [
            "ctypes.cast",
            "MV_CC_DEVICE_INFO_LIST",
            "MvCamera.MV_CC_Initialize",
            "QApplication",
            "QMainWindow",
            "Ui_MainWindow",
            "ui.setupUi",
            "QButtonGroup",
            "cam_button_group.addButton",
            "cam_button_group.addButton",
            "cam_button_group.addButton",
            "cam_button_group.addButton",
            "cam_button_group.setExclusive",
            "QButtonGroup",
            "raio_button_group.addButton",
            "raio_button_group.addButton",
            "win_display_handles.append",
            "win_display_handles.append",
            "win_display_handles.append",
            "win_display_handles.append",
            "mainWindow.show",
            "enum_devices",
            "enable_ui_controls",
            "app.exec_",
            "close_devices",
            "MvCamera.MV_CC_Finalize",
            "sys.exit",
            "chaDic.get",
            "MV_CC_DEVICE_INFO_LIST",
            "MvCamera.MV_CC_EnumDevicesEx2",
            "print_text",
            "range",
            "range",
            "range",
            "range",
            "enable_ui_controls",
            "raio_button_group.id",
            "range",
            "enable_ui_controls",
            "range",
            "enable_ui_controls",
            "range",
            "enable_ui_controls",
            "range",
            "range",
            "range",
            "chaDic.get",
            "str",
            "str",
            "QMessageBox.warning",
            "QMessageBox.warning",
            "cam_button_group.button",
            "len",
            "print_text",
            "print_text",
            "print_text",
            "enable_ui_controls",
            "range",
            "range",
            "range",
            "enable_ui_controls",
            "range",
            "enable_ui_controls",
            "stop_grabbing",
            "float",
            "print_text",
            "str",
            "ToHexStr",
            "cam_button_group.button",
            "button_by_id.setText",
            "button_by_id.setEnabled",
            "cam_button_group.button",
            "button_by_id.setEnabled",
            "button.isChecked",
            "cam_checked_list.append",
            "cam_checked_list.append",
            "MvCamera",
            "obj_cam_operation.append",
            "obj_cam_operation.append",
            "cam_button_group.button",
            "button_by_id.setEnabled",
            "cam_button_group.button",
            "button_by_id.setEnabled",
            "is_float",
            "is_float",
            "is_float",
            "cast",
            "print",
            "decoding_char",
            "decoding_char",
            "print",
            "print",
            "print",
            "CameraOperation",
            "obj_cam_operation.pop",
            "print_text",
            "print_text",
            "print_text",
            "print_text",
            "print_text",
            "print_text",
            "print_text",
            "print_text",
            "print_text",
            "POINTER",
            "print",
            "decoding_char",
            "decoding_char",
            "print",
            "print",
            "print",
            "print_text",
            "print_text",
            "print_text",
            "print_text",
            "chr",
            "print",
            "decoding_char",
            "decoding_char",
            "print",
            "print",
            "print",
            "ToHexStr",
            "ToHexStr",
            "ToHexStr",
            "ToHexStr",
            "ToHexStr",
            "ToHexStr",
            "ToHexStr",
            "ToHexStr",
            "chr",
            "print",
            "decoding_char",
            "decoding_char",
            "print",
            "print",
            "print",
            "ToHexStr",
            "ToHexStr",
            "ToHexStr",
            "ToHexStr",
            "chr",
            "print",
            "decoding_char",
            "decoding_char",
            "print",
            "print",
            "print",
            "str",
            "str",
            "str",
            "str",
            "str",
            "str",
            "str",
            "str",
            "chr",
            "str",
            "str",
            "str",
            "str",
            "chr"
        ],
        "imports": [
            {
                "import_name": "sys",
                "from_name": null,
                "as_name": null,
                "source": "内置模块"
            },
            {
                "import_name": "time",
                "from_name": null,
                "as_name": null,
                "source": "内置模块"
            },
            {
                "import_name": "*",
                "from_name": "PyQt5.QtWidgets",
                "as_name": null,
                "source": "未知模块"
            },
            {
                "import_name": "QTextCursor",
                "from_name": "PyQt5.QtGui",
                "as_name": null,
                "source": "未知模块"
            },
            {
                "import_name": "CameraOperation",
                "from_name": "CamOperation_class",
                "as_name": null,
                "source": "未知模块"
            },
            {
                "import_name": "*",
                "from_name": "MvCameraControl_class",
                "as_name": null,
                "source": "未知模块"
            },
            {
                "import_name": "*",
                "from_name": "MvErrorDefine_const",
                "as_name": null,
                "source": "未知模块"
            },
            {
                "import_name": "*",
                "from_name": "CameraParams_header",
                "as_name": null,
                "source": "未知模块"
            },
            {
                "import_name": "Ui_MainWindow",
                "from_name": "PyUIMultipleCameras",
                "as_name": null,
                "source": "未知模块"
            },
            {
                "import_name": "ctypes",
                "from_name": null,
                "as_name": null,
                "source": "未知模块"
            }
        ]
    },
    {
        "file_path": "Python\\MultipleCameras\\PyUIMultipleCameras.py",
        "used_functions": [
            "MainWindow.setObjectName",
            "MainWindow.resize",
            "QtWidgets.QWidget",
            "QtWidgets.QHBoxLayout",
            "QtWidgets.QHBoxLayout",
            "QtWidgets.QVBoxLayout",
            "QtWidgets.QGridLayout",
            "QtWidgets.QWidget",
            "QtWidgets.QCheckBox",
            "QtWidgets.QCheckBox",
            "QtWidgets.QCheckBox",
            "QtWidgets.QCheckBox",
            "QtWidgets.QWidget",
            "QtWidgets.QWidget",
            "QtWidgets.QWidget",
            "QtWidgets.QTextEdit",
            "QtWidgets.QGridLayout",
            "QtWidgets.QPushButton",
            "QtWidgets.QLabel",
            "QtWidgets.QLineEdit",
            "QtWidgets.QRadioButton",
            "QtWidgets.QPushButton",
            "QtWidgets.QPushButton",
            "QtWidgets.QLabel",
            "QtWidgets.QPushButton",
            "QtWidgets.QLineEdit",
            "QtWidgets.QLineEdit",
            "QtWidgets.QRadioButton",
            "QtWidgets.QPushButton",
            "QtWidgets.QPushButton",
            "QtWidgets.QPushButton",
            "QtWidgets.QPushButton",
            "QtWidgets.QCheckBox",
            "QtWidgets.QLabel",
            "QtWidgets.QSpacerItem",
            "MainWindow.setCentralWidget",
            "QtWidgets.QMenuBar",
            "MainWindow.setMenuBar",
            "QtWidgets.QStatusBar",
            "MainWindow.setStatusBar",
            "self.retranslateUi",
            "MainWindow.setWindowTitle",
            "QtCore.QSize",
            "QtCore.QSize",
            "QtCore.QSize",
            "QtCore.QSize",
            "QtCore.QSize",
            "QtCore.QSize",
            "QtCore.QSize",
            "QtCore.QSize",
            "QtCore.QSize",
            "QtCore.QSize",
            "QtCore.QSize",
            "QtCore.QSize",
            "QtCore.QSize",
            "QtCore.QRect",
            "_translate",
            "_translate",
            "_translate",
            "_translate",
            "_translate",
            "_translate",
            "_translate",
            "_translate",
            "_translate",
            "_translate",
            "_translate",
            "_translate",
            "_translate",
            "_translate",
            "_translate",
            "_translate",
            "_translate",
            "_translate",
            "_translate"
        ],
        "imports": [
            {
                "import_name": "QtCore",
                "from_name": "PyQt5",
                "as_name": null,
                "source": "第三方库"
            },
            {
                "import_name": "QtGui",
                "from_name": "PyQt5",
                "as_name": null,
                "source": "第三方库"
            },
            {
                "import_name": "QtWidgets",
                "from_name": "PyQt5",
                "as_name": null,
                "source": "第三方库"
            }
        ]
    },
    {
        "file_path": "Python\\MvImport\\CameraParams_const.py",
        "used_functions": [],
        "imports": []
    },
    {
        "file_path": "Python\\MvImport\\CameraParams_header.py",
        "used_functions": [
            "POINTER",
            "POINTER",
            "POINTER",
            "POINTER",
            "POINTER",
            "POINTER",
            "POINTER",
            "POINTER",
            "POINTER",
            "POINTER",
            "POINTER",
            "POINTER",
            "POINTER",
            "POINTER",
            "POINTER",
            "POINTER",
            "POINTER",
            "POINTER",
            "POINTER",
            "POINTER",
            "POINTER",
            "POINTER",
            "POINTER",
            "POINTER",
            "POINTER",
            "POINTER",
            "POINTER",
            "POINTER",
            "POINTER",
            "POINTER",
            "POINTER",
            "POINTER",
            "POINTER",
            "POINTER",
            "POINTER",
            "POINTER"
        ],
        "imports": [
            {
                "import_name": "*",
                "from_name": "ctypes",
                "as_name": null,
                "source": "未知模块"
            },
            {
                "import_name": "*",
                "from_name": "CameraParams_const",
                "as_name": null,
                "source": "未知模块"
            },
            {
                "import_name": "*",
                "from_name": "PixelType_header",
                "as_name": null,
                "source": "未知模块"
            }
        ]
    },
    {
        "file_path": "Python\\MvImport\\MvCameraControl_class.py",
        "used_functions": [
            "WinDLL",
            "WinDLL",
            "c_void_p",
            "pointer",
            "MvCamCtrldll.MV_CC_Initialize",
            "MvCamCtrldll.MV_CC_Finalize",
            "MvCamCtrldll.MV_CC_GetSDKVersion",
            "MvCamCtrldll.MV_CC_EnumerateTls",
            "MvCamCtrldll.MV_CC_EnumDevices",
            "MvCamCtrldll.MV_CC_EnumDevicesEx",
            "MvCamCtrldll.MV_CC_EnumDevicesEx2",
            "MvCamCtrldll.MV_CC_IsDeviceAccessible",
            "MvCamCtrldll.MV_CC_EnumInterfaces",
            "MvCamCtrldll.MV_CC_CreateInterface",
            "MvCamCtrldll.MV_CC_CreateInterfaceByID",
            "MvCamCtrldll.MV_CC_OpenInterface",
            "MvCamCtrldll.MV_CC_CloseInterface",
            "MvCamCtrldll.MV_CC_DestroyInterface",
            "MvCamCtrldll.MV_CC_EnumDevicesByInterface",
            "MvCamCtrldll.MV_CC_SetSDKLogPath",
            "MvCamCtrldll.MV_CC_CreateHandle",
            "MvCamCtrldll.MV_CC_CreateHandleWithoutLog",
            "MvCamCtrldll.MV_CC_DestroyHandle",
            "MvCamCtrldll.MV_CC_OpenDevice",
            "MvCamCtrldll.MV_CC_CloseDevice",
            "MvCamCtrldll.MV_CC_IsDeviceConnected",
            "MvCamCtrldll.MV_CC_RegisterImageCallBackEx",
            "MvCamCtrldll.MV_CC_RegisterImageCallBackForRGB",
            "MvCamCtrldll.MV_CC_RegisterImageCallBackForBGR",
            "MvCamCtrldll.MV_CC_StartGrabbing",
            "MvCamCtrldll.MV_CC_StopGrabbing",
            "MvCamCtrldll.MV_CC_GetImageForRGB",
            "MvCamCtrldll.MV_CC_GetImageForBGR",
            "MvCamCtrldll.MV_CC_GetImageBuffer",
            "MvCamCtrldll.MV_CC_FreeImageBuffer",
            "MvCamCtrldll.MV_CC_GetOneFrameTimeout",
            "MvCamCtrldll.MV_CC_ClearImageBuffer",
            "MvCamCtrldll.MV_CC_GetValidImageNum",
            "MvCamCtrldll.MV_CC_DisplayOneFrame",
            "MvCamCtrldll.MV_CC_DisplayOneFrameEx",
            "MvCamCtrldll.MV_CC_SetImageNodeNum",
            "MvCamCtrldll.MV_CC_SetGrabStrategy",
            "MvCamCtrldll.MV_CC_SetOutputQueueSize",
            "MvCamCtrldll.MV_CC_GetDeviceInfo",
            "MvCamCtrldll.MV_CC_GetAllMatchInfo",
            "MvCamCtrldll.MV_CC_GetIntValueEx",
            "MvCamCtrldll.MV_CC_SetIntValueEx",
            "MvCamCtrldll.MV_CC_GetIntValue",
            "MvCamCtrldll.MV_CC_SetIntValue",
            "MvCamCtrldll.MV_CC_GetEnumValue",
            "MvCamCtrldll.MV_CC_SetEnumValue",
            "MvCamCtrldll.MV_CC_GetEnumEntrySymbolic",
            "MvCamCtrldll.MV_CC_SetEnumValueByString",
            "MvCamCtrldll.MV_CC_GetFloatValue",
            "MvCamCtrldll.MV_CC_SetFloatValue",
            "MvCamCtrldll.MV_CC_GetBoolValue",
            "MvCamCtrldll.MV_CC_SetBoolValue",
            "MvCamCtrldll.MV_CC_GetStringValue",
            "MvCamCtrldll.MV_CC_SetStringValue",
            "MvCamCtrldll.MV_CC_SetCommandValue",
            "MvCamCtrldll.MV_CC_ReadMemory",
            "MvCamCtrldll.MV_CC_WriteMemory",
            "MvCamCtrldll.MV_CC_InvalidateNodes",
            "MvCamCtrldll.MV_XML_GetGenICamXML",
            "MvCamCtrldll.MV_XML_GetNodeAccessMode",
            "MvCamCtrldll.MV_XML_GetNodeInterfaceType",
            "MvCamCtrldll.MV_CC_FeatureSave",
            "MvCamCtrldll.MV_CC_FeatureLoad",
            "MvCamCtrldll.MV_CC_FileAccessRead",
            "MvCamCtrldll.MV_CC_FileAccessReadEx",
            "MvCamCtrldll.MV_CC_FileAccessWrite",
            "MvCamCtrldll.MV_CC_FileAccessWriteEx",
            "MvCamCtrldll.MV_CC_GetFileAccessProgress",
            "MvCamCtrldll.MV_CC_LocalUpgrade",
            "MvCamCtrldll.MV_CC_GetUpgradeProcess",
            "MvCamCtrldll.MV_CC_RegisterExceptionCallBack",
            "MvCamCtrldll.MV_CC_RegisterAllEventCallBack",
            "MvCamCtrldll.MV_CC_RegisterEventCallBackEx",
            "MvCamCtrldll.MV_CC_EventNotificationOn",
            "MvCamCtrldll.MV_CC_EventNotificationOff",
            "MvCamCtrldll.MV_GIGE_SetEnumDevTimeout",
            "MvCamCtrldll.MV_GIGE_ForceIpEx",
            "MvCamCtrldll.MV_GIGE_SetIpConfig",
            "MvCamCtrldll.MV_GIGE_SetNetTransMode",
            "MvCamCtrldll.MV_GIGE_GetNetTransInfo",
            "MvCamCtrldll.MV_GIGE_SetDiscoveryMode",
            "MvCamCtrldll.MV_GIGE_SetGvspTimeout",
            "MvCamCtrldll.MV_GIGE_GetGvspTimeout",
            "MvCamCtrldll.MV_GIGE_SetGvcpTimeout",
            "MvCamCtrldll.MV_GIGE_GetGvcpTimeout",
            "MvCamCtrldll.MV_GIGE_SetRetryGvcpTimes",
            "MvCamCtrldll.MV_GIGE_GetRetryGvcpTimes",
            "MvCamCtrldll.MV_CC_GetOptimalPacketSize",
            "MvCamCtrldll.MV_GIGE_SetResend",
            "MvCamCtrldll.MV_GIGE_SetResendMaxRetryTimes",
            "MvCamCtrldll.MV_GIGE_GetResendMaxRetryTimes",
            "MvCamCtrldll.MV_GIGE_SetResendTimeInterval",
            "MvCamCtrldll.MV_GIGE_GetResendTimeInterval",
            "MvCamCtrldll.MV_GIGE_SetTransmissionType",
            "MvCamCtrldll.MV_GIGE_IssueActionCommand",
            "MvCamCtrldll.MV_GIGE_GetMulticastStatus",
            "MvCamCtrldll.MV_CAML_GetSerialPortList",
            "MvCamCtrldll.MV_CAML_SetEnumSerialPorts",
            "MvCamCtrldll.MV_CAML_SetDeviceBaudrate",
            "MvCamCtrldll.MV_CAML_GetDeviceBaudrate",
            "MvCamCtrldll.MV_CAML_GetSupportBaudrates",
            "MvCamCtrldll.MV_CAML_SetGenCPTimeOut",
            "MvCamCtrldll.MV_USB_SetTransferSize",
            "MvCamCtrldll.MV_USB_GetTransferSize",
            "MvCamCtrldll.MV_USB_SetTransferWays",
            "MvCamCtrldll.MV_USB_GetTransferWays",
            "MvCamCtrldll.MV_USB_RegisterStreamExceptionCallBack",
            "MvCamCtrldll.MV_USB_SetEventNodeNum",
            "MvCamCtrldll.MV_USB_SetSyncTimeOut",
            "MvCamCtrldll.MV_USB_GetSyncTimeOut",
            "MvCamCtrldll.MV_CC_EnumInterfacesByGenTL",
            "MvCamCtrldll.MV_CC_EnumDevicesByGenTL",
            "MvCamCtrldll.MV_CC_UnloadGenTLLibrary",
            "MvCamCtrldll.MV_CC_CreateHandleByGenTL",
            "MvCamCtrldll.MV_CC_SaveImageEx2",
            "MvCamCtrldll.MV_CC_SaveImageEx3",
            "MvCamCtrldll.MV_CC_SaveImageToFile",
            "MvCamCtrldll.MV_CC_SaveImageToFileEx",
            "MvCamCtrldll.MV_CC_SavePointCloudData",
            "MvCamCtrldll.MV_CC_RotateImage",
            "MvCamCtrldll.MV_CC_FlipImage",
            "MvCamCtrldll.MV_CC_ConvertPixelType",
            "MvCamCtrldll.MV_CC_ConvertPixelTypeEx",
            "MvCamCtrldll.MV_CC_SetBayerCvtQuality",
            "MvCamCtrldll.MV_CC_SetBayerFilterEnable",
            "MvCamCtrldll.MV_CC_SetBayerGammaValue",
            "MvCamCtrldll.MV_CC_SetGammaValue",
            "MvCamCtrldll.MV_CC_SetBayerGammaParam",
            "MvCamCtrldll.MV_CC_SetBayerCCMParam",
            "MvCamCtrldll.MV_CC_SetBayerCCMParamEx",
            "MvCamCtrldll.MV_CC_ImageContrast",
            "MvCamCtrldll.MV_CC_HB_Decode",
            "MvCamCtrldll.MV_CC_DrawRect",
            "MvCamCtrldll.MV_CC_DrawCircle",
            "MvCamCtrldll.MV_CC_DrawLines",
            "MvCamCtrldll.MV_CC_StartRecord",
            "MvCamCtrldll.MV_CC_InputOneFrame",
            "MvCamCtrldll.MV_CC_StopRecord",
            "MvCamCtrldll.MV_CC_OpenParamsGUI",
            "MvCamCtrldll.MV_CC_ReconstructImage",
            "c_uint",
            "byref",
            "c_uint",
            "byref",
            "strManufacturerName.encode",
            "c_uint",
            "byref",
            "strManufacturerName.encode",
            "c_uint",
            "byref",
            "c_uint",
            "byref",
            "byref",
            "byref",
            "byref",
            "InterfaceID.encode",
            "byref",
            "SDKLogPath.encode",
            "byref",
            "byref",
            "byref",
            "byref",
            "byref",
            "byref",
            "byref",
            "byref",
            "byref",
            "byref",
            "byref",
            "byref",
            "c_uint",
            "c_uint",
            "byref",
            "byref",
            "strKey.encode",
            "byref",
            "strKey.encode",
            "c_uint",
            "strKey.encode",
            "byref",
            "strKey.encode",
            "c_uint32",
            "strKey.encode",
            "byref",
            "strKey.encode",
            "c_uint32",
            "strKey.encode",
            "byref",
            "strKey.encode",
            "sValue.encode",
            "strKey.encode",
            "byref",
            "strKey.encode",
            "c_float",
            "strKey.encode",
            "byref",
            "strKey.encode",
            "strKey.encode",
            "byref",
            "strKey.encode",
            "sValue.encode",
            "strKey.encode",
            "c_uint",
            "c_uint",
            "c_uint",
            "byref",
            "strName.encode",
            "byref",
            "strName.encode",
            "byref",
            "strFileName.encode",
            "strFileName.encode",
            "byref",
            "byref",
            "byref",
            "byref",
            "byref",
            "strFilePathName.encode",
            "byref",
            "pEventName.encode",
            "strEventName.encode",
            "strEventName.encode",
            "c_uint",
            "c_uint",
            "c_uint",
            "c_uint",
            "c_uint",
            "c_uint",
            "byref",
            "c_uint",
            "c_uint",
            "byref",
            "c_uint",
            "byref",
            "c_uint",
            "byref",
            "c_uint",
            "c_uint",
            "c_uint",
            "c_uint",
            "byref",
            "c_uint",
            "byref",
            "byref",
            "byref",
            "byref",
            "byref",
            "byref",
            "byref",
            "byref",
            "c_uint",
            "byref",
            "byref",
            "c_uint",
            "c_uint",
            "byref",
            "c_uint",
            "byref",
            "c_uint",
            "c_uint",
            "byref",
            "byref",
            "strGenTLPath.encode",
            "byref",
            "GenTLPath.encode",
            "byref",
            "byref",
            "byref",
            "byref",
            "byref",
            "byref",
            "byref",
            "byref",
            "byref",
            "byref",
            "byref",
            "c_uint",
            "c_bool",
            "c_float",
            "c_int",
            "c_float",
            "byref",
            "byref",
            "byref",
            "byref",
            "byref",
            "byref",
            "byref",
            "byref",
            "byref",
            "byref",
            "byref"
        ],
        "imports": [
            {
                "import_name": "sys",
                "from_name": null,
                "as_name": null,
                "source": "内置模块"
            },
            {
                "import_name": "copy",
                "from_name": null,
                "as_name": null,
                "source": "未知模块"
            },
            {
                "import_name": "ctypes",
                "from_name": null,
                "as_name": null,
                "source": "未知模块"
            },
            {
                "import_name": "*",
                "from_name": "ctypes",
                "as_name": null,
                "source": "未知模块"
            },
            {
                "import_name": "*",
                "from_name": "PixelType_header",
                "as_name": null,
                "source": "未知模块"
            },
            {
                "import_name": "*",
                "from_name": "CameraParams_const",
                "as_name": null,
                "source": "未知模块"
            },
            {
                "import_name": "*",
                "from_name": "CameraParams_header",
                "as_name": null,
                "source": "未知模块"
            },
            {
                "import_name": "*",
                "from_name": "MvErrorDefine_const",
                "as_name": null,
                "source": "未知模块"
            }
        ]
    },
    {
        "file_path": "Python\\MvImport\\MvErrorDefine_const.py",
        "used_functions": [],
        "imports": []
    },
    {
        "file_path": "Python\\MvImport\\PixelType_header.py",
        "used_functions": [],
        "imports": [
            {
                "import_name": "*",
                "from_name": "ctypes",
                "as_name": null,
                "source": "未知模块"
            }
        ]
    },
    {
        "file_path": "Python\\ParametrizeCamera_FileAccess\\ParametrizeCamera_FileAccess.py",
        "used_functions": [
            "MV_CC_FILE_ACCESS_PROGRESS",
            "memset",
            "MV_CC_FILE_ACCESS",
            "memset",
            "MvCamera.MV_CC_Initialize",
            "MV_CC_DEVICE_INFO_LIST",
            "MvCamera.MV_CC_EnumDevices",
            "print",
            "range",
            "input",
            "MvCamera",
            "cam.MV_CC_CreateHandle",
            "cam.MV_CC_OpenDevice",
            "print",
            "print",
            "msvcrt.getch",
            "print",
            "msvcrt.getch",
            "hReadThreadHandle.join",
            "hProgress1ThreadHandle.join",
            "print",
            "print",
            "msvcrt.getch",
            "print",
            "msvcrt.getch",
            "hWriteThreadHandle.join",
            "hProgress2ThreadHandle.join",
            "cam.MV_CC_CloseDevice",
            "cam.MV_CC_DestroyHandle",
            "MvCamera.MV_CC_Finalize",
            "byref",
            "sizeof",
            "cam.MV_CC_GetFileAccessProgress",
            "print",
            "byref",
            "sizeof",
            "cam.MV_CC_FileAccessRead",
            "print",
            "sys.exit",
            "print",
            "sys.exit",
            "int",
            "print",
            "sys.exit",
            "cast",
            "print",
            "sys.exit",
            "print",
            "sys.exit",
            "threading.Thread",
            "hReadThreadHandle.start",
            "time.sleep",
            "threading.Thread",
            "hProgress1ThreadHandle.start",
            "threading.Thread",
            "hWriteThreadHandle.start",
            "time.sleep",
            "threading.Thread",
            "hProgress2ThreadHandle.start",
            "print",
            "sys.exit",
            "print",
            "sys.exit",
            "print",
            "print",
            "cam.MV_CC_FileAccessWrite",
            "cast",
            "print",
            "print",
            "print",
            "POINTER",
            "print",
            "print",
            "print",
            "POINTER",
            "print",
            "print",
            "print",
            "int",
            "chr",
            "chr",
            "chr"
        ],
        "imports": [
            {
                "import_name": "time",
                "from_name": null,
                "as_name": null,
                "source": "内置模块"
            },
            {
                "import_name": "sys",
                "from_name": null,
                "as_name": null,
                "source": "内置模块"
            },
            {
                "import_name": "threading",
                "from_name": null,
                "as_name": null,
                "source": "未知模块"
            },
            {
                "import_name": "msvcrt",
                "from_name": null,
                "as_name": null,
                "source": "内置模块"
            },
            {
                "import_name": "*",
                "from_name": "ctypes",
                "as_name": null,
                "source": "未知模块"
            },
            {
                "import_name": "*",
                "from_name": "MvCameraControl_class",
                "as_name": null,
                "source": "未知模块"
            }
        ]
    },
    {
        "file_path": "Python\\ParametrizeCamera_LineScanIOSettings\\ParametrizeCamera_LineScanIOSettings.py",
        "used_functions": [
            "POINTER",
            "POINTER",
            "winfun_ctype",
            "FrameInfoCallBack",
            "cast",
            "print",
            "MvCamera.MV_CC_Initialize",
            "MV_CC_DEVICE_INFO_LIST",
            "MvCamera.MV_CC_EnumDevices",
            "print",
            "range",
            "input",
            "input",
            "MvCamera",
            "cam.MV_CC_CreateHandle",
            "cam.MV_CC_OpenDevice",
            "cam.MV_CC_RegisterImageCallBackEx",
            "cam.MV_CC_StartGrabbing",
            "print",
            "msvcrt.getch",
            "cam.MV_CC_StopGrabbing",
            "cam.MV_CC_CloseDevice",
            "cam.MV_CC_DestroyHandle",
            "MvCamera.MV_CC_Finalize",
            "POINTER",
            "print",
            "sys.exit",
            "print",
            "sys.exit",
            "int",
            "print",
            "sys.exit",
            "int",
            "print",
            "sys.exit",
            "cast",
            "Exception",
            "Exception",
            "cam.MV_CC_GetOptimalPacketSize",
            "int",
            "cam.MV_CC_SetEnumValue",
            "cam.MV_CC_SetEnumValue",
            "cam.MV_CC_SetEnumValue",
            "cam.MV_CC_SetEnumValue",
            "cam.MV_CC_SetEnumValue",
            "cam.MV_CC_SetEnumValue",
            "cam.MV_CC_SetEnumValue",
            "cam.MV_CC_SetEnumValue",
            "cam.MV_CC_SetEnumValue",
            "Exception",
            "Exception",
            "Exception",
            "Exception",
            "print",
            "cam.MV_CC_CloseDevice",
            "cam.MV_CC_DestroyHandle",
            "cast",
            "print",
            "print",
            "print",
            "POINTER",
            "int",
            "cam.MV_CC_SetIntValue",
            "print",
            "Exception",
            "Exception",
            "Exception",
            "Exception",
            "Exception",
            "Exception",
            "Exception",
            "Exception",
            "Exception",
            "POINTER",
            "print",
            "print",
            "print",
            "int",
            "print",
            "chr",
            "print",
            "print",
            "print",
            "chr",
            "chr",
            "print",
            "print",
            "print",
            "chr",
            "chr",
            "print",
            "print",
            "print",
            "chr",
            "chr",
            "chr",
            "chr"
        ],
        "imports": [
            {
                "import_name": "sys",
                "from_name": null,
                "as_name": null,
                "source": "内置模块"
            },
            {
                "import_name": "msvcrt",
                "from_name": null,
                "as_name": null,
                "source": "内置模块"
            },
            {
                "import_name": "*",
                "from_name": "MvCameraControl_class",
                "as_name": null,
                "source": "未知模块"
            }
        ]
    },
    {
        "file_path": "Python\\ParametrizeCamera_LoadAndSave\\ParametrizeCamera_LoadAndSave.py",
        "used_functions": [
            "MvCamera.MV_CC_Initialize",
            "MV_CC_DEVICE_INFO_LIST",
            "MvCamera.MV_CC_EnumDevices",
            "print",
            "range",
            "input",
            "MvCamera",
            "cam.MV_CC_CreateHandle",
            "cam.MV_CC_OpenDevice",
            "print",
            "print",
            "cam.MV_CC_FeatureSave",
            "print",
            "print",
            "print",
            "cam.MV_CC_FeatureLoad",
            "print",
            "cam.MV_CC_CloseDevice",
            "cam.MV_CC_DestroyHandle",
            "MvCamera.MV_CC_Finalize",
            "print",
            "sys.exit",
            "print",
            "sys.exit",
            "int",
            "print",
            "sys.exit",
            "cast",
            "print",
            "sys.exit",
            "print",
            "sys.exit",
            "print",
            "print",
            "print",
            "sys.exit",
            "print",
            "sys.exit",
            "cast",
            "print",
            "print",
            "print",
            "POINTER",
            "POINTER",
            "print",
            "print",
            "print",
            "int",
            "chr",
            "chr",
            "chr"
        ],
        "imports": [
            {
                "import_name": "sys",
                "from_name": null,
                "as_name": null,
                "source": "内置模块"
            },
            {
                "import_name": "*",
                "from_name": "ctypes",
                "as_name": null,
                "source": "未知模块"
            },
            {
                "import_name": "*",
                "from_name": "MvCameraControl_class",
                "as_name": null,
                "source": "未知模块"
            }
        ]
    },
    {
        "file_path": "Python\\Recording\\Recording.py",
        "used_functions": [
            "MV_FRAME_OUT",
            "memset",
            "MV_CC_INPUT_FRAME_INFO",
            "memset",
            "MvCamera.MV_CC_Initialize",
            "MV_CC_DEVICE_INFO_LIST",
            "MvCamera.MV_CC_EnumDevices",
            "print",
            "range",
            "input",
            "MvCamera",
            "cam.MV_CC_CreateHandle",
            "cam.MV_CC_OpenDevice",
            "c_bool",
            "cam.MV_CC_GetBoolValue",
            "cam.MV_CC_SetEnumValue",
            "MVCC_INTVALUE",
            "memset",
            "MV_CC_RECORD_PARAM",
            "memset",
            "cam.MV_CC_GetIntValue",
            "cam.MV_CC_GetIntValue",
            "MVCC_ENUMVALUE",
            "memset",
            "cam.MV_CC_GetEnumValue",
            "MvGvspPixelType",
            "MVCC_FLOATVALUE",
            "memset",
            "cam.MV_CC_GetFloatValue",
            "cam.MV_CC_StartRecord",
            "cam.MV_CC_StartGrabbing",
            "print",
            "input",
            "hThreadHandle.join",
            "cam.MV_CC_StopGrabbing",
            "cam.MV_CC_StopRecord",
            "cam.MV_CC_CloseDevice",
            "cam.MV_CC_DestroyHandle",
            "MvCamera.MV_CC_Finalize",
            "byref",
            "sizeof",
            "byref",
            "sizeof",
            "cam.MV_CC_GetImageBuffer",
            "print",
            "sys.exit",
            "print",
            "sys.exit",
            "int",
            "print",
            "sys.exit",
            "cast",
            "print",
            "sys.exit",
            "print",
            "sys.exit",
            "cam.MV_CC_GetOptimalPacketSize",
            "print",
            "print",
            "sys.exit",
            "byref",
            "sizeof",
            "byref",
            "sizeof",
            "print",
            "sys.exit",
            "print",
            "sys.exit",
            "byref",
            "sizeof",
            "print",
            "sys.exit",
            "byref",
            "sizeof",
            "print",
            "sys.exit",
            "print",
            "sys.exit",
            "print",
            "sys.exit",
            "threading.Thread",
            "hThreadHandle.start",
            "print",
            "sys.exit",
            "print",
            "sys.exit",
            "print",
            "sys.exit",
            "print",
            "sys.exit",
            "print",
            "cast",
            "cam.MV_CC_InputOneFrame",
            "cam.MV_CC_FreeImageBuffer",
            "print",
            "cast",
            "print",
            "print",
            "print",
            "POINTER",
            "int",
            "cam.MV_CC_SetIntValue",
            "print",
            "print",
            "POINTER",
            "print",
            "POINTER",
            "print",
            "print",
            "print",
            "int",
            "print",
            "chr",
            "print",
            "print",
            "print",
            "chr",
            "chr",
            "print",
            "print",
            "print",
            "chr",
            "chr",
            "print",
            "print",
            "print",
            "chr",
            "chr",
            "chr",
            "chr"
        ],
        "imports": [
            {
                "import_name": "sys",
                "from_name": null,
                "as_name": null,
                "source": "内置模块"
            },
            {
                "import_name": "threading",
                "from_name": null,
                "as_name": null,
                "source": "未知模块"
            },
            {
                "import_name": "msvcrt",
                "from_name": null,
                "as_name": null,
                "source": "内置模块"
            },
            {
                "import_name": "*",
                "from_name": "ctypes",
                "as_name": null,
                "source": "未知模块"
            },
            {
                "import_name": "*",
                "from_name": "MvCameraControl_class",
                "as_name": null,
                "source": "未知模块"
            }
        ]
    }
]
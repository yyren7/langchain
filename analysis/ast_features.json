[
    {
        "file_path": "./Python\\BasicDemo\\BasicDemo.py",
        "classes": {},
        "functions": [
            "TxtWrapBy",
            "ToHexStr",
            "xFunc",
            "decoding_char",
            "enum_devices",
            "open_device",
            "start_grabbing",
            "stop_grabbing",
            "close_device",
            "set_continue_mode",
            "set_software_trigger_mode",
            "trigger_once",
            "save_bmp",
            "is_float",
            "get_param",
            "set_param",
            "enable_controls"
        ],
        "imports": [
            "sys",
            "*",
            "CameraOperation",
            "*",
            "*",
            "*",
            "Ui_MainWindow",
            "ctypes"
        ]
    },
    {
        "file_path": "./Python\\BasicDemo\\CamOperation_class.py",
        "classes": {
            "CameraOperation": {
                "methods": [
                    "__init__",
                    "Open_device",
                    "Start_grabbing",
                    "Stop_grabbing",
                    "Close_device",
                    "Set_trigger_mode",
                    "Trigger_once",
                    "Get_parameter",
                    "Set_parameter",
                    "Work_thread",
                    "Save_jpg",
                    "Save_Bmp"
                ]
            }
        },
        "functions": [
            "Async_raise",
            "Stop_thread",
            "To_hex_str",
            "Is_mono_data",
            "Is_color_data",
            "__init__",
            "Open_device",
            "Start_grabbing",
            "Stop_grabbing",
            "Close_device",
            "Set_trigger_mode",
            "Trigger_once",
            "Get_parameter",
            "Set_parameter",
            "Work_thread",
            "Save_jpg",
            "Save_Bmp"
        ],
        "imports": [
            "threading",
            "time",
            "sys",
            "inspect",
            "ctypes",
            "random",
            "*",
            "*",
            "*"
        ]
    },
    {
        "file_path": "./Python\\BasicDemo\\PyUICBasicDemo.py",
        "classes": {
            "Ui_MainWindow": {
                "methods": [
                    "setupUi",
                    "retranslateUi"
                ]
            }
        },
        "functions": [
            "setupUi",
            "retranslateUi"
        ],
        "imports": [
            "QtCore",
            "QtGui",
            "QtWidgets"
        ]
    },
    {
        "file_path": "./Python\\BasicDemoByGenTL\\BasicDemoByGenTL.py",
        "classes": {},
        "functions": [
            "TxtWrapBy",
            "ToHexStr",
            "xFunc",
            "enum_interfaces",
            "enum_devices",
            "open_device",
            "start_grabbing",
            "stop_grabbing",
            "close_device",
            "set_continue_mode",
            "set_software_trigger_mode",
            "trigger_once",
            "save_bmp",
            "get_param",
            "set_param",
            "enable_controls"
        ],
        "imports": [
            "os",
            "*",
            "CameraOperation",
            "*",
            "*",
            "*",
            "Ui_MainWindow"
        ]
    },
    {
        "file_path": "./Python\\BasicDemoByGenTL\\CamOperation_class.py",
        "classes": {
            "CameraOperation": {
                "methods": [
                    "__init__",
                    "Open_device",
                    "Start_grabbing",
                    "Stop_grabbing",
                    "Close_device",
                    "Set_trigger_mode",
                    "Trigger_once",
                    "Get_parameter",
                    "Set_parameter",
                    "Work_thread",
                    "Save_jpg",
                    "Save_Bmp"
                ]
            }
        },
        "functions": [
            "Async_raise",
            "Stop_thread",
            "To_hex_str",
            "Is_mono_data",
            "Is_color_data",
            "__init__",
            "Open_device",
            "Start_grabbing",
            "Stop_grabbing",
            "Close_device",
            "Set_trigger_mode",
            "Trigger_once",
            "Get_parameter",
            "Set_parameter",
            "Work_thread",
            "Save_jpg",
            "Save_Bmp"
        ],
        "imports": [
            "threading",
            "time",
            "sys",
            "inspect",
            "ctypes",
            "random",
            "*",
            "*",
            "*"
        ]
    },
    {
        "file_path": "./Python\\BasicDemoByGenTL\\PyUICBasicDemoByGenTL.py",
        "classes": {
            "Ui_MainWindow": {
                "methods": [
                    "setupUi",
                    "retranslateUi"
                ]
            }
        },
        "functions": [
            "setupUi",
            "retranslateUi"
        ],
        "imports": [
            "QtCore",
            "QtGui",
            "QtWidgets"
        ]
    },
    {
        "file_path": "./Python\\BasicDemoLineScan\\BasicDemoLineScanCamera.py",
        "classes": {},
        "functions": [],
        "imports": [
            "sys",
            "msvcrt",
            "ctypes",
            "*"
        ]
    },
    {
        "file_path": "./Python\\ConnectSpecCamera\\ConnectSpecCamera.py",
        "classes": {},
        "functions": [
            "work_thread"
        ],
        "imports": [
            "time",
            "sys",
            "threading",
            "msvcrt",
            "*",
            "*"
        ]
    },
    {
        "file_path": "./Python\\ConvertPixelType\\ConvertPixelType.py",
        "classes": {},
        "functions": [],
        "imports": [
            "sys",
            "copy",
            "msvcrt",
            "*",
            "*"
        ]
    },
    {
        "file_path": "./Python\\Events\\Events.py",
        "classes": {},
        "functions": [
            "event_callback"
        ],
        "imports": [
            "sys",
            "copy",
            "msvcrt",
            "*",
            "*",
            "WINFUNCTYPE"
        ]
    },
    {
        "file_path": "./Python\\Events_Interface\\Events_Interface.py",
        "classes": {},
        "functions": [
            "event_callback",
            "image_callback",
            "print_interface_info",
            "print_devices_info"
        ],
        "imports": [
            "sys",
            "msvcrt",
            "*",
            "*"
        ]
    },
    {
        "file_path": "./Python\\GrabImage\\GrabImage.py",
        "classes": {},
        "functions": [
            "work_thread"
        ],
        "imports": [
            "sys",
            "threading",
            "msvcrt",
            "*",
            "*"
        ]
    },
    {
        "file_path": "./Python\\Grab_Callback\\Grab_Callback.py",
        "classes": {},
        "functions": [
            "image_callback"
        ],
        "imports": [
            "sys",
            "copy",
            "msvcrt",
            "*",
            "*"
        ]
    },
    {
        "file_path": "./Python\\Grab_LineStart\\Grab_LineStart.py",
        "classes": {},
        "functions": [
            "work_thread"
        ],
        "imports": [
            "sys",
            "threading",
            "msvcrt",
            "*"
        ]
    },
    {
        "file_path": "./Python\\HighBandwidthDecode\\HighBandwidthDecode.py",
        "classes": {},
        "functions": [],
        "imports": [
            "sys",
            "ctypes",
            "msvcrt",
            "*",
            "*"
        ]
    },
    {
        "file_path": "./Python\\ImageSave\\ImageSave.py",
        "classes": {},
        "functions": [
            "save_non_raw_image",
            "save_raw"
        ],
        "imports": [
            "sys",
            "*",
            "*"
        ]
    },
    {
        "file_path": "./Python\\InterfaceAndDevice\\InterfaceAndDevice.py",
        "classes": {},
        "functions": [
            "image_callback",
            "print_devices_info",
            "print_interface_info"
        ],
        "imports": [
            "sys",
            "msvcrt",
            "*",
            "*"
        ]
    },
    {
        "file_path": "./Python\\InterfaceDemo\\InterfaceDemo.py",
        "classes": {},
        "functions": [],
        "imports": [
            "sys",
            "threading",
            "msvcrt",
            "*",
            "*"
        ]
    },
    {
        "file_path": "./Python\\MultiCast\\MultiCast.py",
        "classes": {},
        "functions": [
            "work_thread"
        ],
        "imports": [
            "sys",
            "threading",
            "msvcrt",
            "*",
            "*"
        ]
    },
    {
        "file_path": "./Python\\MultiLightCtrl_ImageStitching\\MultiLightCtrl_ImageStitching.py",
        "classes": {},
        "functions": [
            "print_devices_info"
        ],
        "imports": [
            "sys",
            "*",
            "*"
        ]
    },
    {
        "file_path": "./Python\\MultipleCameras\\CamOperation_class.py",
        "classes": {
            "CameraOperation": {
                "methods": [
                    "__init__",
                    "to_hex_str",
                    "open_device",
                    "start_grabbing",
                    "stop_grabbing",
                    "close_device",
                    "set_trigger_mode",
                    "set_trigger_source",
                    "trigger_once",
                    "set_exposure_time",
                    "set_gain",
                    "set_frame_rate",
                    "work_thread",
                    "save_bmp"
                ]
            }
        },
        "functions": [
            "__init__",
            "to_hex_str",
            "open_device",
            "start_grabbing",
            "stop_grabbing",
            "close_device",
            "set_trigger_mode",
            "set_trigger_source",
            "trigger_once",
            "set_exposure_time",
            "set_gain",
            "set_frame_rate",
            "work_thread",
            "save_bmp"
        ],
        "imports": [
            "threading",
            "time",
            "sys",
            "ctypes",
            "*",
            "*"
        ]
    },
    {
        "file_path": "./Python\\MultipleCameras\\MultipleCameras.py",
        "classes": {},
        "functions": [
            "ToHexStr",
            "decoding_char",
            "print_text",
            "enum_devices",
            "cam_check_box_clicked",
            "enable_ui_controls",
            "open_devices",
            "software_trigger_check_box_clicked",
            "radio_button_clicked",
            "close_devices",
            "start_grabbing",
            "stop_grabbing",
            "save_bmp",
            "is_float",
            "set_parameters",
            "software_trigger_once"
        ],
        "imports": [
            "sys",
            "time",
            "*",
            "QTextCursor",
            "CameraOperation",
            "*",
            "*",
            "*",
            "Ui_MainWindow",
            "ctypes"
        ]
    },
    {
        "file_path": "./Python\\MultipleCameras\\PyUIMultipleCameras.py",
        "classes": {
            "Ui_MainWindow": {
                "methods": [
                    "setupUi",
                    "retranslateUi"
                ]
            }
        },
        "functions": [
            "setupUi",
            "retranslateUi"
        ],
        "imports": [
            "QtCore",
            "QtGui",
            "QtWidgets"
        ]
    },
    {
        "file_path": "./Python\\MvImport\\CameraParams_const.py",
        "classes": {},
        "functions": [],
        "imports": []
    },
    {
        "file_path": "./Python\\MvImport\\CameraParams_header.py",
        "classes": {
            "_MV_GIGE_DEVICE_INFO_": {
                "methods": []
            },
            "_MV_USB3_DEVICE_INFO_": {
                "methods": []
            },
            "_MV_CamL_DEV_INFO_": {
                "methods": []
            },
            "_MV_CML_DEVICE_INFO_": {
                "methods": []
            },
            "_MV_CXP_DEVICE_INFO_": {
                "methods": []
            },
            "_MV_XOF_DEVICE_INFO_": {
                "methods": []
            },
            "_MV_CC_DEVICE_INFO_": {
                "methods": []
            },
            "N19_MV_CC_DEVICE_INFO_3DOT_0E": {
                "methods": []
            },
            "_MV_CC_DEVICE_INFO_LIST_": {
                "methods": []
            },
            "_MV_GENTL_IF_INFO_": {
                "methods": []
            },
            "_MV_GENTL_IF_INFO_LIST_": {
                "methods": []
            },
            "_MV_GENTL_DEV_INFO_": {
                "methods": []
            },
            "_MV_GENTL_DEV_INFO_LIST_": {
                "methods": []
            },
            "_MV_CHUNK_DATA_CONTENT_": {
                "methods": []
            },
            "_MV_FRAME_OUT_INFO_EX_": {
                "methods": []
            },
            "N22_MV_FRAME_OUT_INFO_EX_3DOT_1E": {
                "methods": []
            },
            "_MV_DISPLAY_FRAME_INFO_EX_": {
                "methods": []
            },
            "_MV_FRAME_OUT_": {
                "methods": []
            },
            "_MV_NETTRANS_INFO_": {
                "methods": []
            },
            "_MV_ALL_MATCH_INFO_": {
                "methods": []
            },
            "_MV_MATCH_INFO_NET_DETECT_": {
                "methods": []
            },
            "_MV_MATCH_INFO_USB_DETECT_": {
                "methods": []
            },
            "_MV_DISPLAY_FRAME_INFO_": {
                "methods": []
            },
            "_MV_SAVE_POINT_CLOUD_PARAM_": {
                "methods": []
            },
            "_MV_SAVE_IMAGE_PARAM_T_EX_": {
                "methods": []
            },
            "_MV_SAVE_IMAGE_PARAM_EX3_": {
                "methods": []
            },
            "_MV_SAVE_IMG_TO_FILE_PARAM_": {
                "methods": []
            },
            "_MV_SAVE_IMAGE_TO_FILE_PARAM_EX_": {
                "methods": []
            },
            "_MV_CC_PIXEL_CONVERT_PARAM_T_": {
                "methods": []
            },
            "_MV_PIXEL_CONVERT_PARAM_EX_T_": {
                "methods": []
            },
            "_MV_CC_RECORD_PARAM_T_": {
                "methods": []
            },
            "_MV_CC_INPUT_FRAME_INFO_T_": {
                "methods": []
            },
            "_MV_EVENT_OUT_INFO_": {
                "methods": []
            },
            "_MV_CC_FILE_ACCESS_T": {
                "methods": []
            },
            "_MV_CC_FILE_ACCESS_PROGRESS_T": {
                "methods": []
            },
            "_MV_TRANSMISSION_TYPE_T": {
                "methods": []
            },
            "_MV_ACTION_CMD_INFO_T": {
                "methods": []
            },
            "_MV_ACTION_CMD_RESULT_T": {
                "methods": []
            },
            "_MV_ACTION_CMD_RESULT_LIST_T": {
                "methods": []
            },
            "_MVCC_ENUMVALUE_T": {
                "methods": []
            },
            "_MVCC_INTVALUE_T": {
                "methods": []
            },
            "_MVCC_INTVALUE_EX_T": {
                "methods": []
            },
            "_MVCC_FLOATVALUE_T": {
                "methods": []
            },
            "_MVCC_STRINGVALUE_T": {
                "methods": []
            },
            "_MV_CC_FRAME_SPEC_INFO_": {
                "methods": []
            },
            "_MV_CC_HB_DECODE_PARAM_T_": {
                "methods": []
            },
            "_MV_CC_ROTATE_IMAGE_PARAM_T_": {
                "methods": []
            },
            "_MV_CC_FLIP_IMAGE_PARAM_T_": {
                "methods": []
            },
            "_MV_CC_GAMMA_PARAM_T_": {
                "methods": []
            },
            "_MV_CC_CCM_PARAM_T_": {
                "methods": []
            },
            "_MV_CC_CCM_PARAM_EX_T_": {
                "methods": []
            },
            "_MV_CC_CONTRAST_PARAM_T_": {
                "methods": []
            },
            "_MVCC_ENUMENTRY_T": {
                "methods": []
            },
            "_MVCC_COLORF": {
                "methods": []
            },
            "_MVCC_POINTF": {
                "methods": []
            },
            "_MVCC_RECT_INFO": {
                "methods": []
            },
            "_MVCC_CIRCLE_INFO": {
                "methods": []
            },
            "_MVCC_LINES_INFO": {
                "methods": []
            },
            "_MV_OUTPUT_IMAGE_INFO_": {
                "methods": []
            },
            "_MV_RECONSTRUCT_IMAGE_PARAM_": {
                "methods": []
            },
            "_MV_CC_FILE_ACCESS_E": {
                "methods": []
            },
            "_MV_INTERFACE_INFO_": {
                "methods": []
            },
            "_MV_INTERFACE_INFO_LIST_": {
                "methods": []
            },
            "_MV_CAML_SERIAL_PORT_": {
                "methods": []
            },
            "_MV_CAML_SERIAL_PORT_LIST_": {
                "methods": []
            }
        },
        "functions": [],
        "imports": [
            "*",
            "*",
            "*"
        ]
    },
    {
        "file_path": "./Python\\MvImport\\MvCameraControl_class.py",
        "classes": {
            "_MV_PY_OBJECT_": {
                "methods": []
            },
            "MvCamera": {
                "methods": [
                    "__init__",
                    "MV_CC_Initialize",
                    "MV_CC_Finalize",
                    "MV_CC_GetSDKVersion",
                    "MV_CC_EnumerateTls",
                    "MV_CC_EnumDevices",
                    "MV_CC_EnumDevicesEx",
                    "MV_CC_EnumDevicesEx2",
                    "MV_CC_IsDeviceAccessible",
                    "MV_CC_EnumInterfaces",
                    "MV_CC_CreateInterface",
                    "MV_CC_CreateInterfaceByID",
                    "MV_CC_OpenInterface",
                    "MV_CC_CloseInterface",
                    "MV_CC_DestroyInterface",
                    "MV_CC_EnumDevicesByInterface",
                    "MV_CC_SetSDKLogPath",
                    "MV_CC_CreateHandle",
                    "MV_CC_CreateHandleWithoutLog",
                    "MV_CC_DestroyHandle",
                    "MV_CC_OpenDevice",
                    "MV_CC_CloseDevice",
                    "MV_CC_IsDeviceConnected",
                    "MV_CC_RegisterImageCallBackEx",
                    "MV_CC_RegisterImageCallBackForRGB",
                    "MV_CC_RegisterImageCallBackForBGR",
                    "MV_CC_StartGrabbing",
                    "MV_CC_StopGrabbing",
                    "MV_CC_GetImageForRGB",
                    "MV_CC_GetImageForBGR",
                    "MV_CC_GetImageBuffer",
                    "MV_CC_FreeImageBuffer",
                    "MV_CC_GetOneFrameTimeout",
                    "MV_CC_ClearImageBuffer",
                    "MV_CC_GetValidImageNum",
                    "MV_CC_DisplayOneFrame",
                    "MV_CC_DisplayOneFrameEx",
                    "MV_CC_SetImageNodeNum",
                    "MV_CC_SetGrabStrategy",
                    "MV_CC_SetOutputQueueSize",
                    "MV_CC_GetDeviceInfo",
                    "MV_CC_GetAllMatchInfo",
                    "MV_CC_GetIntValueEx",
                    "MV_CC_SetIntValueEx",
                    "MV_CC_GetIntValue",
                    "MV_CC_SetIntValue",
                    "MV_CC_GetEnumValue",
                    "MV_CC_SetEnumValue",
                    "MV_CC_GetEnumEntrySymbolic",
                    "MV_CC_SetEnumValueByString",
                    "MV_CC_GetFloatValue",
                    "MV_CC_SetFloatValue",
                    "MV_CC_GetBoolValue",
                    "MV_CC_SetBoolValue",
                    "MV_CC_GetStringValue",
                    "MV_CC_SetStringValue",
                    "MV_CC_SetCommandValue",
                    "MV_CC_ReadMemory",
                    "MV_CC_WriteMemory",
                    "MV_CC_InvalidateNodes",
                    "MV_XML_GetGenICamXML",
                    "MV_XML_GetNodeAccessMode",
                    "MV_XML_GetNodeInterfaceType",
                    "MV_CC_FeatureSave",
                    "MV_CC_FeatureLoad",
                    "MV_CC_FileAccessRead",
                    "MV_CC_FileAccessReadEx",
                    "MV_CC_FileAccessWrite",
                    "MV_CC_FileAccessWriteEx",
                    "MV_CC_GetFileAccessProgress",
                    "MV_CC_LocalUpgrade",
                    "MV_CC_GetUpgradeProcess",
                    "MV_CC_RegisterExceptionCallBack",
                    "MV_CC_RegisterAllEventCallBack",
                    "MV_CC_RegisterEventCallBackEx",
                    "MV_CC_EventNotificationOn",
                    "MV_CC_EventNotificationOff",
                    "MV_GIGE_SetEnumDevTimeout",
                    "MV_GIGE_ForceIpEx",
                    "MV_GIGE_SetIpConfig",
                    "MV_GIGE_SetNetTransMode",
                    "MV_GIGE_GetNetTransInfo",
                    "MV_GIGE_SetDiscoveryMode",
                    "MV_GIGE_SetGvspTimeout",
                    "MV_GIGE_GetGvspTimeout",
                    "MV_GIGE_SetGvcpTimeout",
                    "MV_GIGE_GetGvcpTimeout",
                    "MV_GIGE_SetRetryGvcpTimes",
                    "MV_GIGE_GetRetryGvcpTimes",
                    "MV_CC_GetOptimalPacketSize",
                    "MV_GIGE_SetResend",
                    "MV_GIGE_SetResendMaxRetryTimes",
                    "MV_GIGE_GetResendMaxRetryTimes",
                    "MV_GIGE_SetResendTimeInterval",
                    "MV_GIGE_GetResendTimeInterval",
                    "MV_GIGE_SetTransmissionType",
                    "MV_GIGE_IssueActionCommand",
                    "MV_GIGE_GetMulticastStatus",
                    "MV_CAML_GetSerialPortList",
                    "MV_CAML_SetEnumSerialPorts",
                    "MV_CAML_SetDeviceBaudrate",
                    "MV_CAML_GetDeviceBaudrate",
                    "MV_CAML_GetSupportBaudrates",
                    "MV_CAML_SetGenCPTimeOut",
                    "MV_USB_SetTransferSize",
                    "MV_USB_GetTransferSize",
                    "MV_USB_SetTransferWays",
                    "MV_USB_GetTransferWays",
                    "MV_USB_RegisterStreamExceptionCallBack",
                    "MV_USB_SetEventNodeNum",
                    "MV_USB_SetSyncTimeOut",
                    "MV_USB_GetSyncTimeOut",
                    "MV_CC_EnumInterfacesByGenTL",
                    "MV_CC_EnumDevicesByGenTL",
                    "MV_CC_UnloadGenTLLibrary",
                    "MV_CC_CreateHandleByGenTL",
                    "MV_CC_SaveImageEx2",
                    "MV_CC_SaveImageEx3",
                    "MV_CC_SaveImageToFile",
                    "MV_CC_SaveImageToFileEx",
                    "MV_CC_SavePointCloudData",
                    "MV_CC_RotateImage",
                    "MV_CC_FlipImage",
                    "MV_CC_ConvertPixelType",
                    "MV_CC_ConvertPixelTypeEx",
                    "MV_CC_SetBayerCvtQuality",
                    "MV_CC_SetBayerFilterEnable",
                    "MV_CC_SetBayerGammaValue",
                    "MV_CC_SetGammaValue",
                    "MV_CC_SetBayerGammaParam",
                    "MV_CC_SetBayerCCMParam",
                    "MV_CC_SetBayerCCMParamEx",
                    "MV_CC_ImageContrast",
                    "MV_CC_HBDecode",
                    "MV_CC_DrawRect",
                    "MV_CC_DrawCircle",
                    "MV_CC_DrawLines",
                    "MV_CC_StartRecord",
                    "MV_CC_InputOneFrame",
                    "MV_CC_StopRecord",
                    "MV_CC_OpenParamsGUI",
                    "MV_CC_ReconstructImage"
                ]
            }
        },
        "functions": [
            "__init__",
            "MV_CC_Initialize",
            "MV_CC_Finalize",
            "MV_CC_GetSDKVersion",
            "MV_CC_EnumerateTls",
            "MV_CC_EnumDevices",
            "MV_CC_EnumDevicesEx",
            "MV_CC_EnumDevicesEx2",
            "MV_CC_IsDeviceAccessible",
            "MV_CC_EnumInterfaces",
            "MV_CC_CreateInterface",
            "MV_CC_CreateInterfaceByID",
            "MV_CC_OpenInterface",
            "MV_CC_CloseInterface",
            "MV_CC_DestroyInterface",
            "MV_CC_EnumDevicesByInterface",
            "MV_CC_SetSDKLogPath",
            "MV_CC_CreateHandle",
            "MV_CC_CreateHandleWithoutLog",
            "MV_CC_DestroyHandle",
            "MV_CC_OpenDevice",
            "MV_CC_CloseDevice",
            "MV_CC_IsDeviceConnected",
            "MV_CC_RegisterImageCallBackEx",
            "MV_CC_RegisterImageCallBackForRGB",
            "MV_CC_RegisterImageCallBackForBGR",
            "MV_CC_StartGrabbing",
            "MV_CC_StopGrabbing",
            "MV_CC_GetImageForRGB",
            "MV_CC_GetImageForBGR",
            "MV_CC_GetImageBuffer",
            "MV_CC_FreeImageBuffer",
            "MV_CC_GetOneFrameTimeout",
            "MV_CC_ClearImageBuffer",
            "MV_CC_GetValidImageNum",
            "MV_CC_DisplayOneFrame",
            "MV_CC_DisplayOneFrameEx",
            "MV_CC_SetImageNodeNum",
            "MV_CC_SetGrabStrategy",
            "MV_CC_SetOutputQueueSize",
            "MV_CC_GetDeviceInfo",
            "MV_CC_GetAllMatchInfo",
            "MV_CC_GetIntValueEx",
            "MV_CC_SetIntValueEx",
            "MV_CC_GetIntValue",
            "MV_CC_SetIntValue",
            "MV_CC_GetEnumValue",
            "MV_CC_SetEnumValue",
            "MV_CC_GetEnumEntrySymbolic",
            "MV_CC_SetEnumValueByString",
            "MV_CC_GetFloatValue",
            "MV_CC_SetFloatValue",
            "MV_CC_GetBoolValue",
            "MV_CC_SetBoolValue",
            "MV_CC_GetStringValue",
            "MV_CC_SetStringValue",
            "MV_CC_SetCommandValue",
            "MV_CC_ReadMemory",
            "MV_CC_WriteMemory",
            "MV_CC_InvalidateNodes",
            "MV_XML_GetGenICamXML",
            "MV_XML_GetNodeAccessMode",
            "MV_XML_GetNodeInterfaceType",
            "MV_CC_FeatureSave",
            "MV_CC_FeatureLoad",
            "MV_CC_FileAccessRead",
            "MV_CC_FileAccessReadEx",
            "MV_CC_FileAccessWrite",
            "MV_CC_FileAccessWriteEx",
            "MV_CC_GetFileAccessProgress",
            "MV_CC_LocalUpgrade",
            "MV_CC_GetUpgradeProcess",
            "MV_CC_RegisterExceptionCallBack",
            "MV_CC_RegisterAllEventCallBack",
            "MV_CC_RegisterEventCallBackEx",
            "MV_CC_EventNotificationOn",
            "MV_CC_EventNotificationOff",
            "MV_GIGE_SetEnumDevTimeout",
            "MV_GIGE_ForceIpEx",
            "MV_GIGE_SetIpConfig",
            "MV_GIGE_SetNetTransMode",
            "MV_GIGE_GetNetTransInfo",
            "MV_GIGE_SetDiscoveryMode",
            "MV_GIGE_SetGvspTimeout",
            "MV_GIGE_GetGvspTimeout",
            "MV_GIGE_SetGvcpTimeout",
            "MV_GIGE_GetGvcpTimeout",
            "MV_GIGE_SetRetryGvcpTimes",
            "MV_GIGE_GetRetryGvcpTimes",
            "MV_CC_GetOptimalPacketSize",
            "MV_GIGE_SetResend",
            "MV_GIGE_SetResendMaxRetryTimes",
            "MV_GIGE_GetResendMaxRetryTimes",
            "MV_GIGE_SetResendTimeInterval",
            "MV_GIGE_GetResendTimeInterval",
            "MV_GIGE_SetTransmissionType",
            "MV_GIGE_IssueActionCommand",
            "MV_GIGE_GetMulticastStatus",
            "MV_CAML_GetSerialPortList",
            "MV_CAML_SetEnumSerialPorts",
            "MV_CAML_SetDeviceBaudrate",
            "MV_CAML_GetDeviceBaudrate",
            "MV_CAML_GetSupportBaudrates",
            "MV_CAML_SetGenCPTimeOut",
            "MV_USB_SetTransferSize",
            "MV_USB_GetTransferSize",
            "MV_USB_SetTransferWays",
            "MV_USB_GetTransferWays",
            "MV_USB_RegisterStreamExceptionCallBack",
            "MV_USB_SetEventNodeNum",
            "MV_USB_SetSyncTimeOut",
            "MV_USB_GetSyncTimeOut",
            "MV_CC_EnumInterfacesByGenTL",
            "MV_CC_EnumDevicesByGenTL",
            "MV_CC_UnloadGenTLLibrary",
            "MV_CC_CreateHandleByGenTL",
            "MV_CC_SaveImageEx2",
            "MV_CC_SaveImageEx3",
            "MV_CC_SaveImageToFile",
            "MV_CC_SaveImageToFileEx",
            "MV_CC_SavePointCloudData",
            "MV_CC_RotateImage",
            "MV_CC_FlipImage",
            "MV_CC_ConvertPixelType",
            "MV_CC_ConvertPixelTypeEx",
            "MV_CC_SetBayerCvtQuality",
            "MV_CC_SetBayerFilterEnable",
            "MV_CC_SetBayerGammaValue",
            "MV_CC_SetGammaValue",
            "MV_CC_SetBayerGammaParam",
            "MV_CC_SetBayerCCMParam",
            "MV_CC_SetBayerCCMParamEx",
            "MV_CC_ImageContrast",
            "MV_CC_HBDecode",
            "MV_CC_DrawRect",
            "MV_CC_DrawCircle",
            "MV_CC_DrawLines",
            "MV_CC_StartRecord",
            "MV_CC_InputOneFrame",
            "MV_CC_StopRecord",
            "MV_CC_OpenParamsGUI",
            "MV_CC_ReconstructImage"
        ],
        "imports": [
            "sys",
            "copy",
            "ctypes",
            "*",
            "*",
            "*",
            "*",
            "*"
        ]
    },
    {
        "file_path": "./Python\\MvImport\\MvErrorDefine_const.py",
        "classes": {},
        "functions": [],
        "imports": []
    },
    {
        "file_path": "./Python\\MvImport\\PixelType_header.py",
        "classes": {},
        "functions": [],
        "imports": [
            "*"
        ]
    },
    {
        "file_path": "./Python\\ParametrizeCamera_FileAccess\\ParametrizeCamera_FileAccess.py",
        "classes": {},
        "functions": [
            "progress_thread",
            "file_access_thread"
        ],
        "imports": [
            "time",
            "sys",
            "threading",
            "msvcrt",
            "*",
            "*"
        ]
    },
    {
        "file_path": "./Python\\ParametrizeCamera_LineScanIOSettings\\ParametrizeCamera_LineScanIOSettings.py",
        "classes": {},
        "functions": [
            "image_callback"
        ],
        "imports": [
            "sys",
            "msvcrt",
            "*"
        ]
    },
    {
        "file_path": "./Python\\ParametrizeCamera_LoadAndSave\\ParametrizeCamera_LoadAndSave.py",
        "classes": {},
        "functions": [],
        "imports": [
            "sys",
            "*",
            "*"
        ]
    },
    {
        "file_path": "./Python\\Recording\\Recording.py",
        "classes": {},
        "functions": [
            "work_thread"
        ],
        "imports": [
            "sys",
            "threading",
            "msvcrt",
            "*",
            "*"
        ]
    }
]
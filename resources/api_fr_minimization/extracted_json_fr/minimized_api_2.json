{
    "api名称": [
        "实例化机器人",
        "机器人点动",
        "jog点动",
        "jog点动减速停止",
        "jog点动立即停止",
        "关节空间运动",
        "笛卡尔空间直线运动",
        "笛卡尔空间圆弧运动",
        "笛卡尔空间整圆运动",
        "笛卡尔空间螺旋线运动",
        "伺服运动开始",
        "伺服运动结束",
        "关节空间伺服模式运动",
        "笛卡尔空间伺服模式运动",
        "笛卡尔空间点到点运动",
        "机器人样条运动",
        "样条运动开始",
        "样条运动PTP",
        "样条运动结束",
        "机器人新样条运动",
        "新样条运动开始",
        "新样条运动结束",
        "新样条指令点",
        "机器人终止运动",
        "机器人点位整体偏移",
        "点位整体偏移开始",
        "点位整体偏移结束",
        "控制箱运动AO开始",
        "控制箱运动AO结束",
        "末端运动AO开始",
        "末端运动AO结束"
    ],
    "使用方式": [
        "原型：RPC(ip)，描述：实例化一个机器人对象，必选参数：ip：机器人的IP地址，默认出厂IP为“192.168.58.2”，默认参数：无，返回值：成功：返回一个机器人对象，失败：创建的对象会被销毁",
        "原型：StartJOG(ref,nb,dir,max_dis,vel=20.0,acc=100.0)，描述：jog点动，必选参数：ref：0-关节点动,2-基坐标系点动,4-工具坐标系点动,8-工件坐标系点动；nb：1-1关节(x轴),2-2关节(y轴),3-3关节(z轴),4-4关节(rx),5-5关节(ry),6-6关节(rz)；dir：0-负方向，1-正方向；max_dis：单次点动最大角度/距离，单位 ° 或 mm；默认参数：vel：速度百分比，[0~100] 默认20；acc：加速度百分比，[0~100] 默认100；返回值：错误码 成功-0 失败- errcode",
        "原型：StopJOG(ref)，描述：jog点动减速停止，必选参数：ref：1-关节点动停止,3-基坐标系点动停止,5-工具坐标系点动停止,9-工件坐标系点动停止，默认参数：无，返回值：错误码 成功-0 失败- errcode",
        "原型：ImmStopJOG()，描述：jog点动立即停止，必选参数：无，默认参数：无，返回值：错误码 成功-0 失败- errcode",
        "原型：MoveJ(joint_pos, tool, user, desc_pos = [0.0,0.0,0.0,0.0,0.0,0.0], vel = 20.0, acc = 0.0, ovl = 100.0, exaxis_pos = [0.0,0.0,0.0,0.0], blendT = -1.0, offset_flag = 0, offset_pos = [0.0,0.0,0.0,0.0,0.0,0.0])，描述：关节空间运动，必选参数：joint_pos：目标关节位置，单位[°]；tool：工具号，[0~14]；user：工件号，[0~14]；默认参数：desc_pos：目标笛卡尔位姿，单位 [mm][°] 默认初值为[0.0,0.0,0.0,0.0,0.0,0.0]，默认值调用正运动学求解；vel：速度百分比，[0~100] 默认20.0；acc：加速度百分比，[0~100]，暂不开放；ovl：速度缩放因子，[0~100] 默认100.0；exaxis_pos：外部轴 1 位置 ~ 外部轴 4 位置 默认[0.0,0.0,0.0,0.0]；blendT：[-1.0]-运动到位 (阻塞)，[0~500.0]-平滑时间 (非阻塞)，单位 [ms] 默认-1.0；offset_flag：[0]-不偏移，[1]-工件/基坐标系下偏移，[2]-工具坐标系下偏移 默认 0；offset_pos：位姿偏移量，单位 [mm][°] 默认[0.0,0.0,0.0,0.0,0.0,0.0]；返回值：错误码 成功-0 失败- errcode",
        "原型：MoveL(desc_pos, tool, user, joint_pos = [0.0,0.0,0.0,0.0,0.0,0.0], vel = 20.0, acc = 0.0 , ovl = 100.0, blendR = -1.0, exaxis_pos = [0.0,0.0,0.0,0.0], search = 0, offset_flag = 0, offset_pos = [0.0,0.0,0.0,0.0,0.0,0.0],overSpeedStrategy=0,speedPercent=10)，描述：笛卡尔空间直线运动，必选参数：desc_pos：目标笛卡尔位姿，单位[mm][°]；tool：工具号，[0~14]；user：工件号，[0~14]；默认参数：joint_pos：目标关节位置，单位 [°] 默认初值为[0.0,0.0,0.0,0.0,0.0,0.0]，默认值调用逆运动学求解返回值；vel：速度百分比，[0~100] 默认20.0；acc：加速度百分比，[0~100]，暂不开放 默认0.0；ovl：速度缩放因子，[0~100] 默认100.0；blendR：blendR:[-1.0]-运动到位 (阻塞)，[0~1000]-平滑半径 (非阻塞)，单位 [mm] 默认-1.0；exaxis_pos：外部轴 1 位置 ~ 外部轴 4 位置 默认[0.0,0.0,0.0,0.0]；search：[0]-不焊丝寻位，[1]-焊丝寻位；offset_flag：offset_flag:[0]-不偏移，[1]-工件/基坐标系下偏移，[2]-工具坐标系下偏移 默认 0；offset_pos：位姿偏移量，单位 [mm][°] 默认[0.0,0.0,0.0,0.0,0.0,0.0]；overSpeedStrategy：超速处理策略，0-策略关闭；1-标准；2-超速时报错停止；3-自适应降速，默认为0；speedPercent：允许降速阈值百分比[0-100]，默认10%；返回值：错误码 成功-0 失败- errcode",
        "原型：MoveC(desc_pos_p, tool_p, user_p, desc_pos_t, tool_t, user_t, joint_pos_p =[0.0,0.0,0.0, 0.0,0.0,0.0],joint_pos_t =[0.0,0.0,0.0,0.0,0.0,0.0], vel_p = 20.0,acc_p=100.0, exaxis_pos_p =[0.0,0.0,0.0,0.0], offset_flag_p = 0, offset_pos_p =[0.0,0.0,0.0,0.0,0.0,0.0], vel_t= 20.0, acc_t=100.0,exaxis_pos_t=[0.0,0.0,0.0,0.0], offset_flag_t = 0, offset_pos_t =[0.0,0.0,0.0, 0.0,0.0,0.0], ovl = 100.0, blendR = -1.0)，描述：笛卡尔空间圆弧运动，必选参数：desc_pos_p：路径点笛卡尔位姿，单位[mm][°]；tool_p：路径点工具号，[0~14]；user_p：路径点工件号，[0~14]；desc_pos_t：目标点笛卡尔位姿，单位 [mm][°]；tool_t：工具号，[0~14]；user_t：工件号，[0~14]；默认参数：joint_pos_p：路径点关节位置，单位 [°] 默认初值为[0.0,0.0,0.0,0.0,0.0,0.0]，默认值调用逆运动学求解返回值；joint_pos_t：目标点关节位置，单位 [°] 默认初值为[0.0,0.0,0.0,0.0,0.0,0.0]，默认值调用逆运动学求解返回值；vel_p：路径点速度百分比，[0~100] 默认20.0；acc_p：路径点加速度百分比，[0~100] 暂不开放,默认0.0；exaxis_pos_p：路径点外部轴 1位置 ~ 外部轴 4 位置 默认[0.0,0.0,0.0,0.0]；offset_flag_p：路径点是否偏移[0]-不偏移，[1]-工件/基坐标系下偏移，[2]-工具坐标系下偏移 默认 0；offset_pos_p：路径点位姿偏移量，单位 [mm][°] 默认[0.0,0.0,0.0,0.0,0.0,0.0]；vel_t：目标点速度百分比，[0~100] 默认20.0；acc_t：目标点加速度百分比，[0~100] 暂不开放 默认0.0；exaxis_pos_t：目标点外部轴 1 位置 ~ 外部轴 4 位置 默认[0.0,0.0,0.0,0.0]；offset_flag_t：目标点是否偏移[0]-不偏移，[1]-工件/基坐标系下偏移，[2]-工具坐标系下偏移 默认 0；offset_pos_t：目标点位姿偏移量，单位 [mm][°] 默认[0.0,0.0,0.0,0.0,0.0,0.0]；ovl：速度缩放因子，[0~100] 默认100.0；blendR：[-1.0]-运动到位 (阻塞)，[0~1000]-平滑半径 (非阻塞)，单位 [mm] 默认-1.0；返回值：错误码 成功-0 失败- errcode",
        "原型：Circle(desc_pos_p,tool_p,user_p,desc_pos_t,tool_t,user_t,joint_pos_p=[0.0,0.0,0.0,0.0,0.0,0.0], joint_pos_t =[0.0,0.0,0.0,0.0,0.0,0.0], vel_p = 20.0, acc_p=0.0, exaxis_pos_p= [0.0,0.0, 0.0,0.0], vel_t=20.0, acc_t = 0.0,exaxis_pos_t =[0.0,0.0,0.0,0.0], ovl=100.0, offset_flag=0, offset_pos= [0.0,0.0,0.0,0.0,0.0,0.0])，描述：笛卡尔空间整圆运动，必选参数：desc_pos_p：路径点笛卡尔位姿，单位[mm][°]；tool_p：工具号，[0~14]；user_p：工件号，[0~14]；desc_pos_t：目标点笛卡尔位姿，单位[mm][°]；tool_t：工具号，[0~14]；user_t：工件号，[0~14]；默认参数：joint_pos_p：路径点关节位置，单位 [°] 默认初值为[0.0,0.0,0.0,0.0,0.0,0.0]，默认值调用逆运动学求解返回值；joint_pos_t：目标点关节位置，单位 [°] 默认初值为[0.0,0.0,0.0,0.0,0.0,0.0]，默认值调用逆运动学求解返回值；vel_p：速度百分比，[0~100] 默认20.0；acc_p：路径点加速度百分比，[0~100] 暂不开放 默认0.0；exaxis_pos_p：路径点外部轴 1 位置 ~ 外部轴 4 位置 默认[0.0,0.0,0.0,0.0]；vel_t：目标点速度百分比，[0~100] 默认20.0；acc_t：目标点加速度百分比，[0~100] 暂不开放 默认0.0；exaxis_pos_t：标点外部轴 1 位置 ~ 外部轴 4 位置 默认[0.0,0.0,0.0,0.0]；ovl：速度缩放因子，[0~100] 默认100.0；offset_flag：是否偏移[0]-不偏移，[1]-工件/基坐标系下偏移，[2]-工具坐标系下偏移 默认 0；offset_pos：位姿偏移量，单位 [mm][°] 默认[0.0,0.0,0.0,0.0,0.0,0.0]；返回值：错误码 成功-0 失败- errcode",
        "原型：NewSpiral(desc_pos, tool, user, param, joint_pos = [0.0,0.0,0.0,0.0,0.0,0.0], vel = 20.0, acc = 0.0, exaxis_pos = [0.0,0.0,0.0,0.0], ovl = 100.0, offset_flag = 0, offset_pos = [0.0,0.0,0.0,0.0,0.0,0.0])，描述：笛卡尔空间螺旋线运动，必选参数：desc_pos：目标笛卡尔位姿，单位[mm][°]；tool：工具号，[0~14]；user：工件号，[0~14]；param：螺旋线参数[circle_num,circle_angle,rad_init,rad_add,rotaxis_add,rot_direction]；默认参数：joint_pos：目标关节位置，单位 [°] 默认初值为[0.0,0.0,0.0,0.0,0.0,0.0]，默认值调用逆运动学求解返回值；vel：速度百分比，[0~100] 默认20.0；acc：加速度百分比，[0~100] 默认100.0；exaxis_pos：外部轴 1 位置 ~ 外部轴 4 位置 默认[0.0,0.0,0.0,0.0]；ovl：速度缩放因子，[0~100] 默认100.0；offset_flag：是否偏移[0]-不偏移，[1]-工件/基坐标系下偏移，[2]-工具坐标系下偏移 默认 0；offset_pos：位姿偏移量，单位 [mm][°] 默认[0.0,0.0,0.0,0.0,0.0,0.0]；返回值：错误码 成功-0 失败- errcode",
        "原型：ServoMoveStart()，描述：伺服运动开始，配合ServoJ、ServoCart指令使用，必选参数：无，默认参数：无，返回值：错误码 成功-0 失败- errcode",
        "原型：ServoMoveEnd()，描述：伺服运动结束，配合ServoJ、ServoCart指令使用，必选参数：无，默认参数：无，返回值：错误码 成功-0 失败- errcode",
        "原型：ServoJ(joint_pos, acc = 0.0, vel = 0.0, cmdT = 0.008, filterT = 0.0, gain = 0.0)，描述：关节空间伺服模式运动，必选参数：joint_pos：目标关节位置，单位[°]；默认参数：acc：加速度，范围 [0~100]，暂不开放，默认为 0.0；vel：速度，范围 [0~100]，暂不开放，默认为 0.0；cmdT：指令下发周期，单位s，建议范围[0.001~0.0016], 默认为0.008；filterT：滤波时间，单位 [s]，暂不开放， 默认为0.0；gain：目标位置的比例放大器，暂不开放， 默认为0.0；返回值：错误码 成功-0 失败- errcode",
        "原型：ServoCart(mode, desc_pos, pos_gain = [1.0, 1.0, 1.0, 1.0, 1.0, 1.0] , acc = 0.0, vel = 0.0, cmdT = 0.008, filterT = 0.0, gain = 0.0)，描述：笛卡尔空间伺服模式运动，必选参数：mode：[0]-绝对运动(基坐标系)，[1]-增量运动(基坐标系)，[2]-增量运动(工具坐标系)；desc_pos：目标笛卡尔位置/目标笛卡尔位置增量；默认参数：pos_gain：位姿增量比例系数，仅在增量运动下生效，范围 [0~1], 默认为 [1.0, 1.0, 1.0, 1.0, 1.0, 1.0]；acc：加速度，范围 [0~100]，暂不开放，默认为 0.0；vel：速度，范围 [0~100]，暂不开放，默认为 0.0；cmdT：指令下发周期，单位s，建议范围[0.001~0.0016], 默认为0.008；filterT：滤波时间，单位 [s]，暂不开放， 默认为0.0；gain：目标位置的比例放大器，暂不开放， 默认为0.0；返回值：错误码 成功-0 失败- errcode",
        "原型：MoveCart(desc_pos, tool, user, vel = 20.0, acc = 0.0, ovl = 100.0, blendT = -1.0, config = -1)，描述：笛卡尔空间点到点运动，必选参数：desc_pos：目标笛卡尔位置；tool：工具号，[0~14]；user：工件号，[0~14]；默认参数：vel：速度，范围 [0~100]，默认为 20.0；acc：加速度，范围 [0~100]，暂不开放,默认为 0.0；ovl：速度缩放因子，[0~100]，默认为 100.0；blendT：[-1.0]-运动到位 (阻塞)，[0~500]-平滑时间 (非阻塞)，单位 [ms] 默认为 -1.0；config：关节配置，[-1]-参考当前关节位置求解，[0~7]-依据关节配置求解 默认为 -1；返回值：错误码 成功-0 失败- errcode",
        "原型：SplineStart()，描述：样条运动开始，必选参数：无，默认参数：无，返回值：错误码 成功-0 失败- errcode",
        "原型：SplinePTP(joint_pos, tool, user, desc_pos = [0.0,0.0,0.0,0.0,0.0,0.0], vel = 20.0, acc = 100.0, ovl = 100.0)，描述：样条运动PTP，必选参数：joint_pos：目标关节位置，单位[°]；tool：工具号，[0~14]；user：工件号，[0~14]；默认参数：desc_pos：目标笛卡尔位姿，单位 [mm][°] 默认初值为[0.0,0.0,0.0,0.0,0.0,0.0]，默认值调用正运动学求解；vel：速度，范围 [0~100]，默认为 20.0；acc：加速度，范围 [0~100]，默认为 100.0；ovl：速度缩放因子，[0~100]，默认为 100.0；返回值：成功：[0] 失败：[errcode]",
        "原型：SplineEnd()，描述：样条运动结束，必选参数：无，默认参数：无，返回值：错误码 成功-0 失败- errcode",
        "原型：NewSplineStart(type,averageTime)，描述：新样条运动开始，必选参数：type：0-圆弧过渡，1-给定点位路径点；默认参数：averageTime：全局平均衔接时间（ms）默认为 2000；返回值：错误码 成功-0 失败- errcode",
        "原型：NewSplineEnd()，描述：新样条运动结束，必选参数：无，默认参数：无，返回值：成功：[0] 失败：[errcode]",
        "原型：NewSplinePoint(desc_pos,tool,user,lastFlag,joint_pos=[0.0,0.0,0.0,0.0,0.0,0.0], vel = 0.0, acc = 0.0, ovl = 100.0,blendR = 0.0 )，描述：新样条指令点，必选参数：desc_pos：目标笛卡尔位姿，单位 [mm][°]；tool：工具号，[0~14]；user：工件号，[0~14]；lastFlag：是否为最后一个点，0-否，1-是；默认参数：joint_pos：目标关节位置，单位 [°] 默认初值为[0.0,0.0,0.0,0.0,0.0,0.0]，默认值调用逆运动学求解返回值；vel：速度，范围 [0~100]，暂不开放，默认为 0.0；acc：加速度，范围 [0~100]，暂不开放，默认为 0.0；ovl：速度缩放因子，[0~100] 默认为 100.0；blendR：[0~1000]-平滑半径，单位 [mm] 默认0.0；返回值：错误码 成功-0 失败- errcode",
        "原型：StopMotion()，描述：终止运动，使用终止运动需运动指令为非阻塞状态，必选参数：无，默认参数：无，返回值：错误码 成功-0 失败- errcode",
        "原型：PointsOffsetEnable(flag,offset_pos)，描述：点位整体偏移开始，必选参数：flag：0-基坐标或工件坐标系下偏移， 2-工具坐标系下偏移；offset_pos：偏移量，单位[mm][°]，默认参数：无，返回值：错误码 成功-0 失败- errcode",
        "原型：PointsOffsetDisable()，描述：点位整体偏移结束，必选参数：无，默认参数：无，返回值：错误码 成功-0 失败- errcode",
        "原型：MoveAOStart(AONum,maxTCPSpeed=1000,maxAOPercent=100,zeroZoneCmp=20)，描述：控制箱运动AO开始，必选参数：AONum：控制箱AO编号，默认参数：maxTCPSpeed：最大TCP速度值[1-5000mm/s]，默认1000；maxAOPercent：最大TCP速度值对应的AO百分比，默认100%；zeroZoneCmp：死区补偿值AO百分比，整形，默认为20%，范围[0-100]，返回值：错误码 成功-0 失败- errcode",
        "原型：MoveAOStop()，描述：控制箱运动AO结束，必选参数：NULL，默认参数：NULL，返回值：错误码 成功-0 失败- errcode",
        "原型：MoveToolAOStart(AONum,maxTCPSpeed=1000,maxAOPercent=100,zeroZoneCmp =20)，描述：末端运动AO开始，必选参数：AONum：末端AO编号，默认参数：maxTCPSpeed：最大TCP速度值[1-5000mm/s]，默认1000；maxAOPercent：最大TCP速度值对应的AO百分比，默认100%；zeroZoneCmp：死区补偿值AO百分比，整形，默认为20%，范围[0-100]，返回值：错误码 成功-0 失败- errcode",
        "原型：MoveToolAOStop()，描述：末端运动AO结束，必选参数：NULL，默认参数：NULL，返回值：错误码 成功-0 失败- errcode"
    ],
    "用例代码": [
        "from fairino import Robot\n# 与机器人控制器建立连接，连接成功返回一个机器人对象\nrobot = Robot.RPC('192.168.58.2')",
        "from fairino import Robot\nimport time\n# 与机器人控制器建立连接，连接成功返回一个机器人对象\nrobot = Robot.RPC('192.168.58.2')\n# 机器人单轴点动\nrobot.StartJOG(0,1,0,20.0,20.0,30.0) # 单关节运动,StartJOG为非阻塞指令，运动状态下接收其他运动指令（包含StartJOG）会被丢弃\ntime.sleep(1)\n#机器人单轴点动减速停止\nret = robot.StopJOG(1)\nprint(ret)\n#机器人单轴点动立即停止\nrobot.ImmStopJOG()\nrobot.StartJOG(0,2,1,20.0)\ntime.sleep(1)\nrobot.ImmStopJOG()\nrobot.StartJOG(0,3,1,20.0)\ntime.sleep(1)\nrobot.ImmStopJOG()\nrobot.StartJOG(0,4,1,20.0,vel=40)\ntime.sleep(1)\nrobot.ImmStopJOG()\nrobot.StartJOG(0,5,1,20.0,acc=50)\ntime.sleep(1)\nrobot.ImmStopJOG()\nrobot.StartJOG(0,6,1,20.0,20.0,30.0)\ntime.sleep(1)\nrobot.ImmStopJOG()\n# 基坐标\nrobot.StartJOG(2,1,0,20.0) #基坐标系下点动\ntime.sleep(1)\n# #机器人单轴点动立即停止\nrobot.ImmStopJOG()\nrobot.StartJOG(2,1,1,20.0)\ntime.sleep(1)\nrobot.ImmStopJOG()\nrobot.StartJOG(2,2,1,20.0)\ntime.sleep(1)\nrobot.ImmStopJOG()\nrobot.StartJOG(2,3,1,20.0)\ntime.sleep(1)\nrobot.ImmStopJOG()\nrobot.StartJOG(2,4,1,20.0)\ntime.sleep(1)\nrobot.ImmStopJOG()\nrobot.StartJOG(2,5,1,20.0)\ntime.sleep(1)\nrobot.ImmStopJOG()\nrobot.StartJOG(2,6,1,20.0)\ntime.sleep(1)\nrobot.ImmStopJOG()\n# 工具坐标\nrobot.StartJOG(4,1,0,20.0,20.0,100.0) #工具坐标系下点动\ntime.sleep(1)\n# #机器人单轴点动立即停止\nrobot.ImmStopJOG()\nrobot.StartJOG(4,1,1,20.0)\ntime.sleep(1)\nrobot.ImmStopJOG()\nrobot.StartJOG(4,2,1,20.0)\ntime.sleep(1)\nrobot.ImmStopJOG()\nrobot.StartJOG(4,3,1,20.0)\ntime.sleep(1)\nrobot.ImmStopJOG()\nrobot.StartJOG(4,4,1,20.0,20.0,100.0)\ntime.sleep(1)\nrobot.ImmStopJOG()\nrobot.StartJOG(4,5,1,20.0,vel=10.0,acc=20.0)\ntime.sleep(1)\nrobot.ImmStopJOG()\nrobot.StartJOG(4,6,1,20.0,acc=40.0)\ntime.sleep(1)\nrobot.ImmStopJOG()\n# 工件坐标\nrobot.StartJOG(8,1,0,20.0,20.0,100.0) #工件坐标系下点动\ntime.sleep(1)\n# #机器人单轴点动立即停止\nrobot.ImmStopJOG()\nrobot.StartJOG(8,1,1,20.0)\ntime.sleep(1)\nrobot.ImmStopJOG()\nrobot.StartJOG(8,2,1,20.0)\ntime.sleep(1)\nrobot.ImmStopJOG()\nrobot.StartJOG(8,3,1,20.0)\ntime.sleep(1)\nrobot.ImmStopJOG()\nrobot.StartJOG(8,4,1,20.0)\ntime.sleep(1)\nrobot.ImmStopJOG()\nrobot.StartJOG(8,5,1,20.0,vel=30.0)\ntime.sleep(1)\nrobot.ImmStopJOG()\nrobot.StartJOG(8,6,1,20.0,20.0,acc=90.0)\ntime.sleep(1)\nrobot.ImmStopJOG()",
        "from fairino import Robot\nimport time\n# 与机器人控制器建立连接，连接成功返回一个机器人对象\nrobot = Robot.RPC('192.168.58.2')\njoint_pos4 = [-83.24, -96.476, 93.688, -114.079, -62, -100]\njoint_pos5 = [-43.24, -70.476, 93.688, -114.079, -62, -80]\njoint_pos6 = [-83.24, -96.416, 43.188, -74.079, -80, -10]\ntool = 0 #工具坐标系编号\nuser = 0 #工件坐标系编号\nret = robot.MoveJ(joint_pos4, tool, user, vel=30) #关节空间运动\nprint(\"关节空间运动点4:错误码\", ret)\nret = robot.MoveJ(joint_pos5, tool, user)\nprint(\"关节空间运动点5:错误码\", ret)\nrobot.MoveJ(joint_pos6, tool, user, offset_flag=1, offset_pos=[10,10,10,0,0,0])\nprint(\"关节空间运动点6:错误码\", ret)",
        "from fairino import Robot\nimport time\n# 与机器人控制器建立连接，连接成功返回一个机器人对象\nrobot = Robot.RPC('192.168.58.2')\ndesc_pos1 = [36.794,-475.119, 65.379, -176.938, 2.535, -179.829]\ndesc_pos2 = [136.794,-475.119, 65.379, -176.938, 2.535, -17
{
    "api名称": [
        "EnableRobot",
        "DisableRobot",
        "ClearError",
        "ResetRobot",
        "RunScript",
        "StopScript",
        "PauseScript",
        "ContinueScript",
        "Pause",
        "Continue",
        "StartDrag",
        "StopDrag",
        "EmergencyStop",
        "Wait",
        "SpeedFactor",
        "User",
        "Tool",
        "SetPayLoad",
        "AccJ",
        "AccL",
        "SpeedJ",
        "SpeedL",
        "Arch",
        "CP",
        "SetArmOrientation",
        "SetCollisionLevel",
        "SetUser",
        "CalcUser",
        "SetTool",
        "CalcTool",
        "RobotMode",
        "GetAngle",
        "GetPose",
        "GetErrorID",
        "PositiveSolution",
        "InverseSolution",
        "PalletCreate",
        "GetPalletPose",
        "DO",
        "DOExecute",
        "DOGroup",
        "ToolDO",
        "ToolDOExecute",
        "DI",
        "ToolDI",
        "ModbusCreate",
        "ModbusClose",
        "GetInBits",
        "GetInRegs",
        "GetCoils",
        "SetCoils",
        "GetHoldRegs",
        "SetHoldRegs",
        "MovJ",
        "MovL",
        "JointMovJ",
        "MovLIO",
        "MovJIO",
        "Arc",
        "Circle",
        "MoveJog",
        "Sync",
        "RelMovJUser",
        "RelMovLUser",
        "RelJointMovJ",
        "MovJExt",
        "SyncAll"
    ],
    "使用方式": [
        "原型：EnableRobot(load,centerX,centerY,centerZ)，描述：使能机械臂",
        "原型：DisableRobot()，描述：下使能机器人",
        "原型：ClearError()，描述：清除机器人报警",
        "原型：ResetRobot()，描述：停止机器人，清空已规划的指令队列",
        "原型：RunScript(projectName)，描述：运行指定工程",
        "原型：StopScript()，描述：停止正在运行的工程",
        "原型：PauseScript()，描述：暂停正在运行的工程",
        "原型：ContinueScript()，描述：继续已暂停的工程",
        "原型：Pause()，描述：暂停非工程下发的运动指令",
        "原型：Continue()，描述：继续运行Pause暂停的运动指令",
        "原型：StartDrag()，描述：机械臂进入拖拽模式",
        "原型：StopDrag()，描述：机械臂退出拖拽模式",
        "原型：EmergencyStop()，描述：紧急停止机械臂",
        "原型：wait(time)，描述：指令队列延时一段时间",
        "原型：SpeedFactor(ratio)，描述：设置全局速度比例",
        "原型：User(index)，描述：设置全局用户坐标系",
        "原型：Tool(index)，描述：设置全局工具坐标系",
        "原型：SetPayLoad(weight,inertia)，描述：设置机械臂末端负载",
        "原型：AccJ(R)，描述：设置关节运动方式的加速度比例",
        "原型：AccL(R)，描述：设置直线和弧线运动方式的加速度比例",
        "原型：SpeedJ(R)，描述：设置关节运动方式的速度比例",
        "原型：SpeedL(R)，描述：设置直线和弧线运动方式的速度比例",
        "原型：Arch(Index)，描述：设置Jump运动的全局门型参数索引",
        "原型：CP(R)，描述：设置平滑过渡比例",
        "原型：SetArmOrientation(LorR)，描述：设置运动目标点的手系",
        "原型：SetCollisionLevel(level)，描述：设置碰撞检测等级",
        "原型：SetUser(index,table)，描述：修改指定的用户坐标系",
        "原型：CalcUser(index,matrix_direction,table)，描述：计算用户坐标系",
        "原型：SetTool(index,table)，描述：修改指定的工具坐标系",
        "原型：CalcTool(index,matrix_direction,table)，描述：计算工具坐标系",
        "原型：RobotMode()，描述：获取机器人当前状态",
        "原型：GetAngle()，描述：获取机械臂当前位姿的关节坐标",
        "原型：GetPose(User=0,Tool=0)，描述：获取机械臂当前位姿的笛卡尔坐标",
        "原型：GetErrorID()，描述：获取机器人当前报错的错误码",
        "原型：PositiveSolution(J1,J2,J3,J4,User,Tool)，描述：进行正解运算",
        "原型：InverseSolution(X,Y,Z,R,User,Tool,isJointNear,JointNear)，描述：进行逆解运算",
        "原型：PalletCreate(P1,P2,P3,P4,row=0,col=0,Palletname)，描述：创建托盘",
        "原型：GetPalletPose(Palletname,index)，描述：获取已创建的托盘的指定点位",
        "原型：DO(index,status)，描述：设置数字输出端口状态",
        "原型：DOExecute(index,status)，描述：设置数字输出端口状态",
        "原型：DOGroup(index1,value1,index2,value2,...,indexN,valueN)，描述：设置多个数字输出端口状态",
        "原型：ToolDO(index,status)，描述：设置末端数字输出端口状态",
        "原型：ToolDOExecute(index,status)，描述：设置末端数字输出端口状态",
        "原型：DI(index)，描述：获取DI端口的状态",
        "原型：ToolDI(index)，描述：获取末端DI端口的状态",
        "原型：ModbusCreate(ip,port,slave_id,isRTU)，描述：创建Modbus主站，并和从站建立连接",
        "原型：ModbusClose(index)，描述：和Modbus从站断开连接，释放主站",
        "原型：GetInBits(index,addr,count)，描述：读取Modbus从站触点寄存器地址的值",
        "原型：GetInRegs(index,addr,count,valType)，描述：读取Modbus从站输入寄存器地址的值",
        "原型：GetCoils(index,addr,count)，描述：读取Modbus从站线圈寄存器地址的值",
        "原型：SetCoils(index,addr,count,valTab)，描述：将指定的值写入线圈寄存器指定的地址",
        "原型：GetHoldRegs(index,addr, count,valType)，描述：读取Modbus从站保持寄存器地址的值",
        "原型：SetHoldRegs(index,addr, count,valTab,valType)，描述：将指定的值写入Modbus从站保持寄存器指定的地址",
        "原型：MovJ(X,Y,Z,R,User=index,Tool=index,SpeedJ=R,AccJ=R,CP=R)，描述：从当前位置以关节运动方式运动至笛卡尔坐标目标点",
        "原型：MovL(X,Y,Z,R,User=index,Tool=index,SpeedL=R,AccL=R,CP=R)，描述：从当前位置以直线运动方式运动至笛卡尔坐标目标点",
        "原型：JointMovJ(J1,J2,J3,J4,SpeedJ=R,AccJ=R,CP=R)，描述：从当前位置以关节运动方式运动至关节坐标目标点",
        "原型：MovLIO(X,Y,Z,R,{Mode,Distance,Index,Status},...,{Mode,Distance,Index,Status},User=index,Tool=index,SpeedL=R,AccL=R,CP=R)，描述：从当前位置以直线运动方式运动至笛卡尔坐标目标点，运动时并行设置数字输出端口状态",
        "原型：MovJIO(X,Y,Z,R,{Mode,Distance,Index,Status},...,{Mode,Distance,Index,Status},User=index,Tool=index,SpeedJ=R,AccJ=R,CP=R)，描述：从当前位置以关节运动方式运动至笛卡尔坐标目标点，运动时并行设置数字输出端口状态",
        "原型：Arc(X1,Y1,Z1,R1,X2,Y2,Z2,R2,User=index,Tool=index,SpeedL=R,AccL=R,CP=R)，描述：从当前位置以圆弧插补方式运动至目标点",
        "原型：Circle(count,{X1,Y1,Z1,R1},{X2,Y2,Z2,R2})，描述：从当前位置进行整圆插补运动，运动指定圈数后重新回到当前位置",
        "原型：MoveJog(axisID,CoordType=typeValue,User=index,Tool=index)，描述：点动机械臂",
        "原型：Sync()，描述：阻塞程序执行队列指令，待队列最后的指令执行完后才返回",
        "原型：RelMovJUser(OffsetX,OffsetY,OffsetZ,OffsetR, User,SpeedJ=R, AccJ=R,Tool=Index,CP=R)，描述：沿用户坐标系进行相对运动，末端运动方式为关节运动",
        "原型：RelMovLUser(OffsetX,OffsetY,OffsetZ,OffsetR,User,SpeedL=R,AccL=R,Tool=Index,CP=R)，描述：沿用户坐标系进行相对运动，末端运动方式为直线运动",
        "原型：RelJointMovJ(Offset1,Offset2,Offset3,Offset4,SpeedJ=R,AccJ=R,CP=R)，描述：沿关节坐标系进行相对运动，末端运动方式为关节运动",
        "原型：MovJExt(Angle|Distance,SpeedE=50,AccE=50,Sync=1)，描述：控制滑轨（扩展轴）运动到目标角度或位置",
        "原型：SyncAll()，描述：阻塞程序执行队列指令，待队列中所有指令执行完后才返回"
    ],
    "用例代码": [
        "EnableRobot()",
        "EnableRobot(0.5)",
        "EnableRobot(0.5,0,0,5.5)",
        "DisableRobot()",
        "ClearError()",
        "ResetRobot()",
        "RunScript(\"demo\")",
        "StopScript()",
        "PauseScript()",
        "ContinueScript()",
        "Pause()",
        "Continue()",
        "StartDrag()",
        "StopDrag()",
        "EmergencyStop()",
        "wait(1000)",
        "SpeedFactor(80)",
        "User(1)",
        "Tool(1)",
        "SetPayLoad(0.3)",
        "AccJ(50)",
        "AccL(50)",
        "SpeedJ(50)",
        "SpeedL(50)",
        "Arch(1)",
        "CP(50)",
        "SetArmOrientation(1)",
        "SetCollisionLevel(1)",
        "SetUser(1,{10,10,10,0})",
        "newUser = CalcUser(1,1,{10,10,10,10})",
        "SetTool(1,{10,10,10,0})",
        "CalcTool(1,1,{10,10,10,10})",
        "RobotMode()",
        "GetAngle()",
        "GetPose()",
        "GetPose(User=1,Tool=0)",
        "GetErrorID()",
        "PositiveSolution(0,0,-90,0,1,1)",
        "InverseSolution(473.000000,-141.000000,469.000000,-180.000000,0,0)",
        "InverseSolution(473.000000,-141.000000,469.000000,-180.000000,0,0,1,{0,0,-90,0})",
        "PalletCreate({56,-568,337,175.5755},{156,-568,337,175.5755},{156,-468,337,175.5755},{56,-468,337,175.5755},row=10,col=10,pallet1)",
        "GetPalletPose(pallet1,5)",
        "DO(1,1)",
        "DOExecute(1,1)",
        "DOGroup(4,1,6,0,2,1,7,0)",
        "ToolDO(1,1)",
        "ToolDOExecute(1,1)",
        "DI(1)",
        "ToolDI(1)",
        "ModbusCreate(127.0.0.1,60000,1,1)",
        "ModbusClose(0)",
        "GetInBits(0,3000,5)",
        "GetInRegs(0,4000,3)",
        "GetCoils(0,1000,3)",
        "SetCoils(0,1000,3,{1,0,1})",
        "GetHoldRegs(0,3095,1)",
        "SetHoldRegs(0,3095,2,{6000,300}, U16)",
        "MovJ(-100,100,200,150,AccJ=50)",
        "MovL(-100,100,200,150,SpeedL=60)",
        "JointMovJ(0,0,-90,0,SpeedJ=60,AccJ=50)",
        "MovLIO(-100,100,200,150,{0,50,1,0})",
        "MovJIO(-100,100,200,150,{0,50,1,0})",
        "Arc(-350,-200,200,150,-300,-250,200,150)",
        "Circle(1,{-350,-200,200,150},{-300,-250,200,150})",
        "MoveJog(j2-)",
        "MoveJog()",
        "Sync()",
        "RelMovJUser(10,10,10,0,0)",
        "RelMovLUser(10,10,10,0,0)",
        "RelJointMovJ(10,10,10,0)",
        "MovJExt(300)",
        "SyncAll()"
    ]
}